{
	"id": "4f801141b4755a6490dda53eda5fa10f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"strategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StETHStrategy {\r\n    IERC20 public stETH;\r\n    address public vault;\r\n    address public farmingPool; // A yield farm that accepts stETH\r\n\r\n    constructor(address _stETH, address _vault, address _farmingPool) {\r\n        stETH = IERC20(_stETH);\r\n        vault = _vault;\r\n        farmingPool = _farmingPool;\r\n    }\r\n\r\n    // Deposit stETH into a farming protocol\r\n    function deposit(uint256 _amount) external {\r\n        require(msg.sender == vault, \"Only vault\");\r\n        require(_amount > 0, \"Must deposit stETH\");\r\n\r\n        stETH.transfer(farmingPool, _amount);\r\n    }\r\n\r\n    // Claim yield & reinvest into stETH\r\n    function claimRewards() external {\r\n        // Simulate farming rewards (e.g., receiving extra ETH)\r\n        (bool success, ) = farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\"));\r\n        require(success, \"Claim failed\");\r\n\r\n        uint256 earned = address(this).balance;\r\n        if (earned > 0) {\r\n            payable(vault).transfer(earned); // Send new yield back to vault\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"strategy.sol": {
				"StETHStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_farmingPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farmingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"strategy.sol\":121:1203  contract StETHStrategy {... */\n  mstore(0x40, 0x80)\n    /* \"strategy.sol\":274:443  constructor(address _stETH, address _vault, address _farmingPool) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"strategy.sol\":351:356  stETH */\n  0x00\n    /* \"strategy.sol\":351:373  stETH = IERC20(_stETH) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"strategy.sol\":384:398  vault = _vault */\n  dup1\n  sload\n  swap4\n  dup6\n  and\n  swap4\n  dup3\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"strategy.sol\":409:420  farmingPool */\n  0x02\n    /* \"strategy.sol\":409:435  farmingPool = _farmingPool */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"strategy.sol\":121:1203  contract StETHStrategy {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:574   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_12:\n    /* \"#utility.yul\":392:432   */\n  tag_13\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_14\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":519:568   */\n  tag_15\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  dup6\n    /* \"#utility.yul\":549:567   */\n  add\n    /* \"#utility.yul\":519:568   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":509:568   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:574   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\ntag_8:\n    /* \"strategy.sol\":121:1203  contract StETHStrategy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"strategy.sol\":121:1203  contract StETHStrategy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x372500ab\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc1fe3e48\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd75aca19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"strategy.sol\":753:1163  function claimRewards() external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"strategy.sol\":497:703  function deposit(uint256 _amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_11\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n        /* \"strategy.sol\":151:170  IERC20 public stETH */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      sload(0x00)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":376:408   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":358:409   */\n      dup2\n      mstore\n        /* \"#utility.yul\":346:348   */\n      0x20\n        /* \"#utility.yul\":331:349   */\n      add\n        /* \"strategy.sol\":151:170  IERC20 public stETH */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"strategy.sol\":204:230  address public farmingPool */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x02)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"strategy.sol\":177:197  address public vault */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      sload(0x01)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"strategy.sol\":753:1163  function claimRewards() external {... */\n    tag_12:\n        /* \"strategy.sol\":881:892  farmingPool */\n      sload(0x02)\n        /* \"strategy.sol\":898:944  abi.encodeWithSignature(\"distributeRewards()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe4, 0x06f4a2cd)\n      or\n      swap1\n      mstore\n        /* \"strategy.sol\":881:945  farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      swap1\n      mload\n        /* \"strategy.sol\":863:875  bool success */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"strategy.sol\":881:892  farmingPool */\n      and\n      swap2\n        /* \"strategy.sol\":881:945  farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      tag_33\n      swap2\n      tag_34\n      jump\t// in\n    tag_33:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_37\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_36)\n    tag_37:\n      0x60\n      swap2\n      pop\n    tag_36:\n      pop\n        /* \"strategy.sol\":862:945  (bool success, ) = farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      pop\n      swap1\n      pop\n        /* \"strategy.sol\":964:971  success */\n      dup1\n        /* \"strategy.sol\":956:988  require(success, \"Claim failed\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1136:1138   */\n      0x20\n        /* \"strategy.sol\":956:988  require(success, \"Claim failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1118:1139   */\n      mstore\n        /* \"#utility.yul\":1175:1177   */\n      0x0c\n        /* \"#utility.yul\":1155:1173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1148:1178   */\n      mstore\n      shl(0xa2, 0x10db185a5b4819985a5b1959)\n        /* \"#utility.yul\":1194:1212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1187:1229   */\n      mstore\n        /* \"#utility.yul\":1246:1264   */\n      0x64\n      add\n        /* \"strategy.sol\":956:988  require(success, \"Claim failed\") */\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"strategy.sol\":1018:1039  address(this).balance */\n      selfbalance\n        /* \"strategy.sol\":1054:1064  earned > 0 */\n      dup1\n      iszero\n        /* \"strategy.sol\":1050:1156  if (earned > 0) {... */\n      tag_41\n      jumpi\n        /* \"strategy.sol\":1089:1094  vault */\n      sload(0x01)\n        /* \"strategy.sol\":1081:1112  payable(vault).transfer(earned) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"strategy.sol\":1089:1094  vault */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"strategy.sol\":1081:1112  payable(vault).transfer(earned) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"strategy.sol\":1105:1111  earned */\n      dup4\n      swap1\n        /* \"strategy.sol\":1089:1094  vault */\n      0x00\n        /* \"strategy.sol\":1081:1112  payable(vault).transfer(earned) */\n      dup2\n        /* \"strategy.sol\":1089:1094  vault */\n      dup2\n        /* \"strategy.sol\":1081:1112  payable(vault).transfer(earned) */\n      dup2\n        /* \"strategy.sol\":1105:1111  earned */\n      dup6\n        /* \"strategy.sol\":1089:1094  vault */\n      dup9\n        /* \"strategy.sol\":1081:1112  payable(vault).transfer(earned) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n        /* \"strategy.sol\":1050:1156  if (earned > 0) {... */\n    tag_41:\n        /* \"strategy.sol\":786:1163  {... */\n      pop\n      pop\n        /* \"strategy.sol\":753:1163  function claimRewards() external {... */\n      jump\t// out\n        /* \"strategy.sol\":497:703  function deposit(uint256 _amount) external {... */\n    tag_17:\n        /* \"strategy.sol\":573:578  vault */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"strategy.sol\":559:569  msg.sender */\n      caller\n        /* \"strategy.sol\":559:578  msg.sender == vault */\n      eq\n        /* \"strategy.sol\":551:593  require(msg.sender == vault, \"Only vault\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"strategy.sol\":551:593  require(msg.sender == vault, \"Only vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1459:1480   */\n      mstore\n        /* \"#utility.yul\":1516:1518   */\n      0x0a\n        /* \"#utility.yul\":1496:1514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1489:1519   */\n      mstore\n      shl(0xb2, 0x13db9b1e481d985d5b1d)\n        /* \"#utility.yul\":1535:1553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1528:1568   */\n      mstore\n        /* \"#utility.yul\":1585:1603   */\n      0x64\n      add\n        /* \"strategy.sol\":551:593  require(msg.sender == vault, \"Only vault\") */\n      tag_39\n        /* \"#utility.yul\":1275:1609   */\n      jump\n        /* \"strategy.sol\":551:593  require(msg.sender == vault, \"Only vault\") */\n    tag_45:\n        /* \"strategy.sol\":622:623  0 */\n      0x00\n        /* \"strategy.sol\":612:619  _amount */\n      dup2\n        /* \"strategy.sol\":612:623  _amount > 0 */\n      gt\n        /* \"strategy.sol\":604:646  require(_amount > 0, \"Must deposit stETH\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1816:1818   */\n      0x20\n        /* \"strategy.sol\":604:646  require(_amount > 0, \"Must deposit stETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1798:1819   */\n      mstore\n        /* \"#utility.yul\":1855:1857   */\n      0x12\n        /* \"#utility.yul\":1835:1853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1828:1858   */\n      mstore\n      shl(0x73, 0x09aeae6e840c8cae0dee6d2e840e6e88aa89)\n        /* \"#utility.yul\":1874:1892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1867:1915   */\n      mstore\n        /* \"#utility.yul\":1932:1950   */\n      0x64\n      add\n        /* \"strategy.sol\":604:646  require(_amount > 0, \"Must deposit stETH\") */\n      tag_39\n        /* \"#utility.yul\":1614:1956   */\n      jump\n        /* \"strategy.sol\":604:646  require(_amount > 0, \"Must deposit stETH\") */\n    tag_48:\n        /* \"strategy.sol\":659:664  stETH */\n      sload(0x00)\n        /* \"strategy.sol\":674:685  farmingPool */\n      sload(0x02)\n        /* \"strategy.sol\":659:695  stETH.transfer(farmingPool, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"strategy.sol\":674:685  farmingPool */\n      swap2\n      dup3\n      and\n        /* \"strategy.sol\":659:695  stETH.transfer(farmingPool, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2135:2186   */\n      mstore\n        /* \"#utility.yul\":2202:2220   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2195:2229   */\n      dup5\n      swap1\n      mstore\n        /* \"strategy.sol\":659:664  stETH */\n      swap2\n      and\n      swap1\n        /* \"strategy.sol\":659:673  stETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2108:2126   */\n      0x44\n      add\n        /* \"strategy.sol\":659:695  stETH.transfer(farmingPool, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_16:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_59:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":628:929   */\n    tag_34:\n        /* \"#utility.yul\":757:760   */\n      0x00\n        /* \"#utility.yul\":795:801   */\n      dup3\n        /* \"#utility.yul\":789:802   */\n      mload\n        /* \"#utility.yul\":841:847   */\n      dup1\n        /* \"#utility.yul\":834:838   */\n      0x20\n        /* \"#utility.yul\":826:832   */\n      dup6\n        /* \"#utility.yul\":822:839   */\n      add\n        /* \"#utility.yul\":817:820   */\n      dup5\n        /* \"#utility.yul\":811:848   */\n      mcopy\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":867:883   */\n      swap3\n      add\n        /* \"#utility.yul\":892:905   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":867:883   */\n      swap2\n        /* \"#utility.yul\":628:929   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2517   */\n    tag_56:\n        /* \"#utility.yul\":2307:2313   */\n      0x00\n        /* \"#utility.yul\":2360:2362   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup3\n        /* \"#utility.yul\":2339:2346   */\n      dup5\n        /* \"#utility.yul\":2335:2358   */\n      sub\n        /* \"#utility.yul\":2331:2363   */\n      slt\n        /* \"#utility.yul\":2328:2380   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":2376:2377   */\n      0x00\n        /* \"#utility.yul\":2373:2374   */\n      dup1\n        /* \"#utility.yul\":2366:2378   */\n      revert\n        /* \"#utility.yul\":2328:2380   */\n    tag_68:\n        /* \"#utility.yul\":2408:2417   */\n      dup2\n        /* \"#utility.yul\":2402:2418   */\n      mload\n        /* \"#utility.yul\":2461:2466   */\n      dup1\n        /* \"#utility.yul\":2454:2467   */\n      iszero\n        /* \"#utility.yul\":2447:2468   */\n      iszero\n        /* \"#utility.yul\":2440:2445   */\n      dup2\n        /* \"#utility.yul\":2437:2469   */\n      eq\n        /* \"#utility.yul\":2427:2487   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2480:2481   */\n      dup1\n        /* \"#utility.yul\":2473:2485   */\n      revert\n        /* \"#utility.yul\":2427:2487   */\n    tag_69:\n        /* \"#utility.yul\":2506:2511   */\n      swap4\n        /* \"#utility.yul\":2240:2517   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220617295d0ac71607b489879a2cc603ce90b8440e12d4eae191c41979fe879d7ed64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:576:2",
										"nodeType": "YulBlock",
										"src": "0:576:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:2",
													"nodeType": "YulBlock",
													"src": "74:117:2",
													"statements": [
														{
															"nativeSrc": "84:22:2",
															"nodeType": "YulAssignment",
															"src": "84:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:2"
																},
																"nativeSrc": "93:13:2",
																"nodeType": "YulFunctionCall",
																"src": "93:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:2",
																"nodeType": "YulBlock",
																"src": "169:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:2",
																					"nodeType": "YulLiteral",
																					"src": "178:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:2",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:2"
																			},
																			"nativeSrc": "171:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:2"
																		},
																		"nativeSrc": "171:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:2",
																										"nodeType": "YulLiteral",
																										"src": "154:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:2",
																										"nodeType": "YulLiteral",
																										"src": "159:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:2"
																								},
																								"nativeSrc": "150:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:2",
																								"nodeType": "YulLiteral",
																								"src": "163:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:2"
																						},
																						"nativeSrc": "146:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:2"
																				},
																				"nativeSrc": "135:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:2"
																		},
																		"nativeSrc": "125:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:2"
																},
																"nativeSrc": "118:50:2",
																"nodeType": "YulFunctionCall",
																"src": "118:50:2"
															},
															"nativeSrc": "115:70:2",
															"nodeType": "YulIf",
															"src": "115:70:2"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:2",
														"nodeType": "YulTypedName",
														"src": "53:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:2",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nativeSrc": "311:263:2",
													"nodeType": "YulBlock",
													"src": "311:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "357:16:2",
																"nodeType": "YulBlock",
																"src": "357:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:2",
																					"nodeType": "YulLiteral",
																					"src": "366:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "369:1:2",
																					"nodeType": "YulLiteral",
																					"src": "369:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "359:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:2"
																			},
																			"nativeSrc": "359:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:2"
																		},
																		"nativeSrc": "359:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "332:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "341:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "328:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:2"
																		},
																		"nativeSrc": "328:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:2",
																		"nodeType": "YulLiteral",
																		"src": "353:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "324:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:2"
																},
																"nativeSrc": "324:32:2",
																"nodeType": "YulFunctionCall",
																"src": "324:32:2"
															},
															"nativeSrc": "321:52:2",
															"nodeType": "YulIf",
															"src": "321:52:2"
														},
														{
															"nativeSrc": "382:50:2",
															"nodeType": "YulAssignment",
															"src": "382:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "392:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:2"
																},
																"nativeSrc": "392:40:2",
																"nodeType": "YulFunctionCall",
																"src": "392:40:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "382:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:2"
																}
															]
														},
														{
															"nativeSrc": "441:59:2",
															"nodeType": "YulAssignment",
															"src": "441:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "485:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "496:2:2",
																				"nodeType": "YulLiteral",
																				"src": "496:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "481:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:2"
																		},
																		"nativeSrc": "481:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "451:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:2"
																},
																"nativeSrc": "451:49:2",
																"nodeType": "YulFunctionCall",
																"src": "451:49:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "441:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:2"
																}
															]
														},
														{
															"nativeSrc": "509:59:2",
															"nodeType": "YulAssignment",
															"src": "509:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "553:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "564:2:2",
																				"nodeType": "YulLiteral",
																				"src": "564:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "549:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:2"
																		},
																		"nativeSrc": "549:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "519:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "519:29:2"
																},
																"nativeSrc": "519:49:2",
																"nodeType": "YulFunctionCall",
																"src": "519:49:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "509:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:378:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "261:9:2",
														"nodeType": "YulTypedName",
														"src": "261:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "272:7:2",
														"nodeType": "YulTypedName",
														"src": "272:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "284:6:2",
														"nodeType": "YulTypedName",
														"src": "284:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "292:6:2",
														"nodeType": "YulTypedName",
														"src": "292:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "300:6:2",
														"nodeType": "YulTypedName",
														"src": "300:6:2",
														"type": ""
													}
												],
												"src": "196:378:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50604051610461380380610461833981016040819052602b916085565b5f80546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805491909316911617905560be565b80516001600160a01b03811681146080575f80fd5b919050565b5f805f606084860312156096575f80fd5b609d84606b565b925060a960208501606b565b915060b560408501606b565b90509250925092565b610396806100cb5f395ff3fe60806040526004361061004c575f3560e01c8063372500ab14610057578063b6b55f251461006d578063c1fe3e481461008c578063d75aca19146100c6578063fbfa77cf146100e5575f80fd5b3661005357005b5f80fd5b348015610062575f80fd5b5061006b610104565b005b348015610078575f80fd5b5061006b61008736600461030d565b61020d565b348015610097575f80fd5b505f546100aa906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d1575f80fd5b506002546100aa906001600160a01b031681565b3480156100f0575f80fd5b506001546100aa906001600160a01b031681565b60025460408051600481526024810182526020810180516001600160e01b03166306f4a2cd60e41b17905290515f926001600160a01b03169161014691610324565b5f604051808303815f865af19150503d805f811461017f576040519150601f19603f3d011682016040523d82523d5f602084013e610184565b606091505b50509050806101c95760405162461bcd60e51b815260206004820152600c60248201526b10db185a5b4819985a5b195960a21b60448201526064015b60405180910390fd5b478015610209576001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610207573d5f803e3d5ffd5b505b5050565b6001546001600160a01b031633146102545760405162461bcd60e51b815260206004820152600a60248201526913db9b1e481d985d5b1d60b21b60448201526064016101c0565b5f81116102985760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b60448201526064016101c0565b5f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af11580156102e9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610209919061033a565b5f6020828403121561031d575f80fd5b5035919050565b5f82518060208501845e5f920191825250919050565b5f6020828403121561034a575f80fd5b81518015158114610359575f80fd5b939250505056fea2646970667358221220617295d0ac71607b489879a2cc603ce90b8440e12d4eae191c41979fe879d7ed64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x461 CODESIZE SUB DUP1 PUSH2 0x461 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x85 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xBE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH1 0x96 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x9D DUP5 PUSH1 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0xA9 PUSH1 0x20 DUP6 ADD PUSH1 0x6B JUMP JUMPDEST SWAP2 POP PUSH1 0xB5 PUSH1 0x40 DUP6 ADD PUSH1 0x6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x396 DUP1 PUSH2 0xCB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372500AB EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xD75ACA19 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0xE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x53 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F4A2CD PUSH1 0xE4 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x146 SWAP2 PUSH2 0x324 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x184 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB185A5B4819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x13DB9B1E481D985D5B1D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7295 0xD0 0xAC PUSH18 0x607B489879A2CC603CE90B8440E12D4EAE19 SHR COINBASE SWAP8 SWAP16 0xE8 PUSH26 0xD7ED64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "121:1082:1:-:0;;;274:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;351:5;:22;;-1:-1:-1;;;;;351:22:1;;;-1:-1:-1;;;;;;351:22:1;;;;;;;;384:14;;;;;;;;;;;;;;;409:11;:26;;;;;;;;;;;121:1082;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;121:1082:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_183": {
									"entryPoint": null,
									"id": 183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimRewards_179": {
									"entryPoint": 260,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_139": {
									"entryPoint": 525,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@farmingPool_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stETH_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vault_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2519:2",
										"nodeType": "YulBlock",
										"src": "0:2519:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:2",
													"nodeType": "YulBlock",
													"src": "84:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:2",
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:2",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:2",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nativeSrc": "132:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nativeSrc": "132:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nativeSrc": "101:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:2",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nativeSrc": "97:32:2",
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nativeSrc": "94:52:2",
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nativeSrc": "155:33:2",
															"nodeType": "YulAssignment",
															"src": "155:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:2"
																},
																"nativeSrc": "165:23:2",
																"nodeType": "YulFunctionCall",
																"src": "165:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:2",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:2",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:2",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:180:2"
											},
											{
												"body": {
													"nativeSrc": "313:102:2",
													"nodeType": "YulBlock",
													"src": "313:102:2",
													"statements": [
														{
															"nativeSrc": "323:26:2",
															"nodeType": "YulAssignment",
															"src": "323:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "335:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "335:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:2:2",
																		"nodeType": "YulLiteral",
																		"src": "346:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "331:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "331:3:2"
																},
																"nativeSrc": "331:18:2",
																"nodeType": "YulFunctionCall",
																"src": "331:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "323:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "323:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "365:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "365:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "380:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "380:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "396:3:2",
																								"nodeType": "YulLiteral",
																								"src": "396:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "401:1:2",
																								"nodeType": "YulLiteral",
																								"src": "401:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "392:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "392:3:2"
																						},
																						"nativeSrc": "392:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "392:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "405:1:2",
																						"nodeType": "YulLiteral",
																						"src": "405:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "388:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "388:3:2"
																				},
																				"nativeSrc": "388:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "388:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "376:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:2"
																		},
																		"nativeSrc": "376:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "376:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:6:2"
																},
																"nativeSrc": "358:51:2",
																"nodeType": "YulFunctionCall",
																"src": "358:51:2"
															},
															"nativeSrc": "358:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "199:216:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:2",
														"nodeType": "YulTypedName",
														"src": "282:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "293:6:2",
														"nodeType": "YulTypedName",
														"src": "293:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "304:4:2",
														"nodeType": "YulTypedName",
														"src": "304:4:2",
														"type": ""
													}
												],
												"src": "199:216:2"
											},
											{
												"body": {
													"nativeSrc": "521:102:2",
													"nodeType": "YulBlock",
													"src": "521:102:2",
													"statements": [
														{
															"nativeSrc": "531:26:2",
															"nodeType": "YulAssignment",
															"src": "531:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "543:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "543:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "554:2:2",
																		"nodeType": "YulLiteral",
																		"src": "554:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "539:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:2"
																},
																"nativeSrc": "539:18:2",
																"nodeType": "YulFunctionCall",
																"src": "539:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "531:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "531:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "573:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "573:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "588:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "588:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "604:3:2",
																								"nodeType": "YulLiteral",
																								"src": "604:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "609:1:2",
																								"nodeType": "YulLiteral",
																								"src": "609:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "600:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "600:3:2"
																						},
																						"nativeSrc": "600:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "600:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "613:1:2",
																						"nodeType": "YulLiteral",
																						"src": "613:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "596:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "596:3:2"
																				},
																				"nativeSrc": "596:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "596:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "584:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:2"
																		},
																		"nativeSrc": "584:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "584:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "566:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:2"
																},
																"nativeSrc": "566:51:2",
																"nodeType": "YulFunctionCall",
																"src": "566:51:2"
															},
															"nativeSrc": "566:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "566:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "420:203:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "490:9:2",
														"nodeType": "YulTypedName",
														"src": "490:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "501:6:2",
														"nodeType": "YulTypedName",
														"src": "501:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "512:4:2",
														"nodeType": "YulTypedName",
														"src": "512:4:2",
														"type": ""
													}
												],
												"src": "420:203:2"
											},
											{
												"body": {
													"nativeSrc": "765:164:2",
													"nodeType": "YulBlock",
													"src": "765:164:2",
													"statements": [
														{
															"nativeSrc": "775:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "775:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "795:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "795:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "789:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "789:5:2"
																},
																"nativeSrc": "789:13:2",
																"nodeType": "YulFunctionCall",
																"src": "789:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "779:6:2",
																	"nodeType": "YulTypedName",
																	"src": "779:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "817:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "817:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "826:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "826:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "834:4:2",
																				"nodeType": "YulLiteral",
																				"src": "834:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "822:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:2"
																		},
																		"nativeSrc": "822:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "822:17:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "841:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "841:6:2"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "811:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "811:5:2"
																},
																"nativeSrc": "811:37:2",
																"nodeType": "YulFunctionCall",
																"src": "811:37:2"
															},
															"nativeSrc": "811:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "811:37:2"
														},
														{
															"nativeSrc": "857:26:2",
															"nodeType": "YulVariableDeclaration",
															"src": "857:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "871:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "871:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "876:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "867:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "867:3:2"
																},
																"nativeSrc": "867:16:2",
																"nodeType": "YulFunctionCall",
																"src": "867:16:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "861:2:2",
																	"nodeType": "YulTypedName",
																	"src": "861:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "899:2:2",
																		"nodeType": "YulIdentifier",
																		"src": "899:2:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:2",
																		"nodeType": "YulLiteral",
																		"src": "903:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:2"
																},
																"nativeSrc": "892:13:2",
																"nodeType": "YulFunctionCall",
																"src": "892:13:2"
															},
															"nativeSrc": "892:13:2",
															"nodeType": "YulExpressionStatement",
															"src": "892:13:2"
														},
														{
															"nativeSrc": "914:9:2",
															"nodeType": "YulAssignment",
															"src": "914:9:2",
															"value": {
																"name": "_1",
																"nativeSrc": "921:2:2",
																"nodeType": "YulIdentifier",
																"src": "921:2:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "914:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "628:301:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "741:3:2",
														"nodeType": "YulTypedName",
														"src": "741:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "746:6:2",
														"nodeType": "YulTypedName",
														"src": "746:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "757:3:2",
														"nodeType": "YulTypedName",
														"src": "757:3:2",
														"type": ""
													}
												],
												"src": "628:301:2"
											},
											{
												"body": {
													"nativeSrc": "1108:162:2",
													"nodeType": "YulBlock",
													"src": "1108:162:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1125:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1136:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1118:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:2"
																},
																"nativeSrc": "1118:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1118:21:2"
															},
															"nativeSrc": "1118:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1118:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1159:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1159:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1170:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1155:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:2"
																		},
																		"nativeSrc": "1155:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1175:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1175:2:2",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1148:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:2"
																},
																"nativeSrc": "1148:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1148:30:2"
															},
															"nativeSrc": "1148:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1148:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1198:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1198:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1209:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1209:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1194:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:2"
																		},
																		"nativeSrc": "1194:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:2"
																	},
																	{
																		"hexValue": "436c61696d206661696c6564",
																		"kind": "string",
																		"nativeSrc": "1214:14:2",
																		"nodeType": "YulLiteral",
																		"src": "1214:14:2",
																		"type": "",
																		"value": "Claim failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:2"
																},
																"nativeSrc": "1187:42:2",
																"nodeType": "YulFunctionCall",
																"src": "1187:42:2"
															},
															"nativeSrc": "1187:42:2",
															"nodeType": "YulExpressionStatement",
															"src": "1187:42:2"
														},
														{
															"nativeSrc": "1238:26:2",
															"nodeType": "YulAssignment",
															"src": "1238:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1250:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1250:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1261:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1261:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1246:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:2"
																},
																"nativeSrc": "1246:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1246:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1238:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1238:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "934:336:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1085:9:2",
														"nodeType": "YulTypedName",
														"src": "1085:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1099:4:2",
														"nodeType": "YulTypedName",
														"src": "1099:4:2",
														"type": ""
													}
												],
												"src": "934:336:2"
											},
											{
												"body": {
													"nativeSrc": "1449:160:2",
													"nodeType": "YulBlock",
													"src": "1449:160:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1459:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:2"
																},
																"nativeSrc": "1459:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1459:21:2"
															},
															"nativeSrc": "1459:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1459:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1500:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1511:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1511:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1496:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:2"
																		},
																		"nativeSrc": "1496:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1516:2:2",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:2"
																},
																"nativeSrc": "1489:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1489:30:2"
															},
															"nativeSrc": "1489:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1489:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1539:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1539:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1550:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1550:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1535:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:2"
																		},
																		"nativeSrc": "1535:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:18:2"
																	},
																	{
																		"hexValue": "4f6e6c79207661756c74",
																		"kind": "string",
																		"nativeSrc": "1555:12:2",
																		"nodeType": "YulLiteral",
																		"src": "1555:12:2",
																		"type": "",
																		"value": "Only vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1528:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:2"
																},
																"nativeSrc": "1528:40:2",
																"nodeType": "YulFunctionCall",
																"src": "1528:40:2"
															},
															"nativeSrc": "1528:40:2",
															"nodeType": "YulExpressionStatement",
															"src": "1528:40:2"
														},
														{
															"nativeSrc": "1577:26:2",
															"nodeType": "YulAssignment",
															"src": "1577:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1589:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1589:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1600:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1600:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1585:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1585:3:2"
																},
																"nativeSrc": "1585:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1585:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1577:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1577:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1275:334:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1426:9:2",
														"nodeType": "YulTypedName",
														"src": "1426:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1440:4:2",
														"nodeType": "YulTypedName",
														"src": "1440:4:2",
														"type": ""
													}
												],
												"src": "1275:334:2"
											},
											{
												"body": {
													"nativeSrc": "1788:168:2",
													"nodeType": "YulBlock",
													"src": "1788:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1805:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1805:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1816:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1816:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1798:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:2"
																},
																"nativeSrc": "1798:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1798:21:2"
															},
															"nativeSrc": "1798:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1798:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1850:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:2"
																		},
																		"nativeSrc": "1835:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1855:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1855:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1828:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:2"
																},
																"nativeSrc": "1828:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1828:30:2"
															},
															"nativeSrc": "1828:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1828:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1878:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1878:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1889:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1889:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1874:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1874:3:2"
																		},
																		"nativeSrc": "1874:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1874:18:2"
																	},
																	{
																		"hexValue": "4d757374206465706f736974207374455448",
																		"kind": "string",
																		"nativeSrc": "1894:20:2",
																		"nodeType": "YulLiteral",
																		"src": "1894:20:2",
																		"type": "",
																		"value": "Must deposit stETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1867:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:2"
																},
																"nativeSrc": "1867:48:2",
																"nodeType": "YulFunctionCall",
																"src": "1867:48:2"
															},
															"nativeSrc": "1867:48:2",
															"nodeType": "YulExpressionStatement",
															"src": "1867:48:2"
														},
														{
															"nativeSrc": "1924:26:2",
															"nodeType": "YulAssignment",
															"src": "1924:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1936:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1947:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1932:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:2"
																},
																"nativeSrc": "1932:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1932:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1924:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1614:342:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1765:9:2",
														"nodeType": "YulTypedName",
														"src": "1765:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1779:4:2",
														"nodeType": "YulTypedName",
														"src": "1779:4:2",
														"type": ""
													}
												],
												"src": "1614:342:2"
											},
											{
												"body": {
													"nativeSrc": "2090:145:2",
													"nodeType": "YulBlock",
													"src": "2090:145:2",
													"statements": [
														{
															"nativeSrc": "2100:26:2",
															"nodeType": "YulAssignment",
															"src": "2100:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2112:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2112:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2123:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2123:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2108:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:2"
																},
																"nativeSrc": "2108:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2108:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2100:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2100:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2142:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2142:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2157:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2157:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2173:3:2",
																								"nodeType": "YulLiteral",
																								"src": "2173:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2178:1:2",
																								"nodeType": "YulLiteral",
																								"src": "2178:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2169:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "2169:3:2"
																						},
																						"nativeSrc": "2169:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2169:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2182:1:2",
																						"nodeType": "YulLiteral",
																						"src": "2182:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2165:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2165:3:2"
																				},
																				"nativeSrc": "2165:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2165:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2153:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:2"
																		},
																		"nativeSrc": "2153:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2153:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2135:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:2"
																},
																"nativeSrc": "2135:51:2",
																"nodeType": "YulFunctionCall",
																"src": "2135:51:2"
															},
															"nativeSrc": "2135:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "2135:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2206:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2217:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2217:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2202:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:2"
																		},
																		"nativeSrc": "2202:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2202:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2222:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2222:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2195:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:2"
																},
																"nativeSrc": "2195:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2195:34:2"
															},
															"nativeSrc": "2195:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2195:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1961:274:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2051:9:2",
														"nodeType": "YulTypedName",
														"src": "2051:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2062:6:2",
														"nodeType": "YulTypedName",
														"src": "2062:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2070:6:2",
														"nodeType": "YulTypedName",
														"src": "2070:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2081:4:2",
														"nodeType": "YulTypedName",
														"src": "2081:4:2",
														"type": ""
													}
												],
												"src": "1961:274:2"
											},
											{
												"body": {
													"nativeSrc": "2318:199:2",
													"nodeType": "YulBlock",
													"src": "2318:199:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2364:16:2",
																"nodeType": "YulBlock",
																"src": "2364:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2373:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2373:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2376:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2376:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2366:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2366:6:2"
																			},
																			"nativeSrc": "2366:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2366:12:2"
																		},
																		"nativeSrc": "2366:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2366:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2339:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2339:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2348:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2348:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2335:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2335:3:2"
																		},
																		"nativeSrc": "2335:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2360:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2360:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2331:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:2"
																},
																"nativeSrc": "2331:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2331:32:2"
															},
															"nativeSrc": "2328:52:2",
															"nodeType": "YulIf",
															"src": "2328:52:2"
														},
														{
															"nativeSrc": "2389:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2389:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2408:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2408:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2402:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2402:5:2"
																},
																"nativeSrc": "2402:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2402:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2393:5:2",
																	"nodeType": "YulTypedName",
																	"src": "2393:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2471:16:2",
																"nodeType": "YulBlock",
																"src": "2471:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2480:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2483:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2473:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2473:6:2"
																			},
																			"nativeSrc": "2473:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2473:12:2"
																		},
																		"nativeSrc": "2473:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2473:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2440:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2440:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2461:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "2461:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2454:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "2454:6:2"
																						},
																						"nativeSrc": "2454:13:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2454:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2447:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "2447:6:2"
																				},
																				"nativeSrc": "2447:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2447:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2437:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2437:2:2"
																		},
																		"nativeSrc": "2437:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2437:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2430:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:2"
																},
																"nativeSrc": "2430:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2430:40:2"
															},
															"nativeSrc": "2427:60:2",
															"nodeType": "YulIf",
															"src": "2427:60:2"
														},
														{
															"nativeSrc": "2496:15:2",
															"nodeType": "YulAssignment",
															"src": "2496:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "2506:5:2",
																"nodeType": "YulIdentifier",
																"src": "2506:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2496:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2240:277:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2284:9:2",
														"nodeType": "YulTypedName",
														"src": "2284:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2295:7:2",
														"nodeType": "YulTypedName",
														"src": "2295:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2307:6:2",
														"nodeType": "YulTypedName",
														"src": "2307:6:2",
														"type": ""
													}
												],
												"src": "2240:277:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Claim failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Must deposit stETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004c575f3560e01c8063372500ab14610057578063b6b55f251461006d578063c1fe3e481461008c578063d75aca19146100c6578063fbfa77cf146100e5575f80fd5b3661005357005b5f80fd5b348015610062575f80fd5b5061006b610104565b005b348015610078575f80fd5b5061006b61008736600461030d565b61020d565b348015610097575f80fd5b505f546100aa906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d1575f80fd5b506002546100aa906001600160a01b031681565b3480156100f0575f80fd5b506001546100aa906001600160a01b031681565b60025460408051600481526024810182526020810180516001600160e01b03166306f4a2cd60e41b17905290515f926001600160a01b03169161014691610324565b5f604051808303815f865af19150503d805f811461017f576040519150601f19603f3d011682016040523d82523d5f602084013e610184565b606091505b50509050806101c95760405162461bcd60e51b815260206004820152600c60248201526b10db185a5b4819985a5b195960a21b60448201526064015b60405180910390fd5b478015610209576001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610207573d5f803e3d5ffd5b505b5050565b6001546001600160a01b031633146102545760405162461bcd60e51b815260206004820152600a60248201526913db9b1e481d985d5b1d60b21b60448201526064016101c0565b5f81116102985760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b60448201526064016101c0565b5f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af11580156102e9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610209919061033a565b5f6020828403121561031d575f80fd5b5035919050565b5f82518060208501845e5f920191825250919050565b5f6020828403121561034a575f80fd5b81518015158114610359575f80fd5b939250505056fea2646970667358221220617295d0ac71607b489879a2cc603ce90b8440e12d4eae191c41979fe879d7ed64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372500AB EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xD75ACA19 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0xE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x53 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xAA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F4A2CD PUSH1 0xE4 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x146 SWAP2 PUSH2 0x324 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x184 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB185A5B4819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x13DB9B1E481D985D5B1D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7295 0xD0 0xAC PUSH18 0x607B489879A2CC603CE90B8440E12D4EAE19 SHR COINBASE SWAP8 SWAP16 0xE8 PUSH26 0xD7ED64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "121:1082:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:410;;;;;;;;;;;;;:::i;:::-;;497:206;;;;;;;;;;-1:-1:-1;497:206:1;;;;;:::i;:::-;;:::i;151:19::-;;;;;;;;;;-1:-1:-1;151:19:1;;;;-1:-1:-1;;;;;151:19:1;;;;;;-1:-1:-1;;;;;376:32:2;;;358:51;;346:2;331:18;151:19:1;;;;;;;204:26;;;;;;;;;;-1:-1:-1;204:26:1;;;;-1:-1:-1;;;;;204:26:1;;;177:20;;;;;;;;;;-1:-1:-1;177:20:1;;;;-1:-1:-1;;;;;177:20:1;;;753:410;881:11;;898:46;;;;;;;;;;;;;;;;-1:-1:-1;;;;;898:46:1;-1:-1:-1;;;898:46:1;;;881:64;;863:12;;-1:-1:-1;;;;;881:11:1;;:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:83;;;964:7;956:32;;;;-1:-1:-1;;;956:32:1;;1136:2:2;956:32:1;;;1118:21:2;1175:2;1155:18;;;1148:30;-1:-1:-1;;;1194:18:2;;;1187:42;1246:18;;956:32:1;;;;;;;;;1018:21;1054:10;;1050:106;;1089:5;;1081:31;;-1:-1:-1;;;;;1089:5:1;;;;1081:31;;;;;1105:6;;1089:5;1081:31;1089:5;1081:31;1105:6;1089:5;1081:31;;;;;;;;;;;;;;;;;;;;;1050:106;786:377;;753:410::o;497:206::-;573:5;;-1:-1:-1;;;;;573:5:1;559:10;:19;551:42;;;;-1:-1:-1;;;551:42:1;;1477:2:2;551:42:1;;;1459:21:2;1516:2;1496:18;;;1489:30;-1:-1:-1;;;1535:18:2;;;1528:40;1585:18;;551:42:1;1275:334:2;551:42:1;622:1;612:7;:11;604:42;;;;-1:-1:-1;;;604:42:1;;1816:2:2;604:42:1;;;1798:21:2;1855:2;1835:18;;;1828:30;-1:-1:-1;;;1874:18:2;;;1867:48;1932:18;;604:42:1;1614:342:2;604:42:1;659:5;;674:11;;659:36;;-1:-1:-1;;;659:36:1;;-1:-1:-1;;;;;674:11:1;;;659:36;;;2135:51:2;2202:18;;;2195:34;;;659:5:1;;;:14;;2108:18:2;;659:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;628:301::-;757:3;795:6;789:13;841:6;834:4;826:6;822:17;817:3;811:37;903:1;867:16;;892:13;;;-1:-1:-1;867:16:2;628:301;-1:-1:-1;628:301:2:o;2240:277::-;2307:6;2360:2;2348:9;2339:7;2335:23;2331:32;2328:52;;;2376:1;2373;2366:12;2328:52;2408:9;2402:16;2461:5;2454:13;2447:21;2440:5;2437:32;2427:60;;2483:1;2480;2473:12;2427:60;2506:5;2240:277;-1:-1:-1;;;2240:277:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "183600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards()": "infinite",
								"deposit(uint256)": "infinite",
								"farmingPool()": "2368",
								"stETH()": "2345",
								"vault()": "2390"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 274,
									"end": 443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 274,
									"end": 443,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 274,
									"end": 443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 351,
									"end": 356,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 373,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 351,
									"end": 373,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 409,
									"end": 435,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 435,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 564,
									"end": 566,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 549,
									"end": 567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 519,
									"end": 568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 519,
									"end": 568,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 509,
									"end": 568,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 568,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1203,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220617295d0ac71607b489879a2cc603ce90b8440e12d4eae191c41979fe879d7ed64736f6c634300081a0033",
									".code": [
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "372500AB"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "B6B55F25"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "C1FE3E48"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "D75ACA19"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "FBFA77CF"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1203,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 497,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 497,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 358,
											"end": 409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 358,
											"end": 409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 881,
											"end": 892,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F4A2CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 863,
											"end": 875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 881,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 881,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 881,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 881,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DB185A5B4819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 956,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1039,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1050,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1050,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 753,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 497,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 573,
											"end": 578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 559,
											"end": 569,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 559,
											"end": 578,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 551,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 551,
											"end": 593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 551,
											"end": 593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 551,
											"end": 593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1518,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E481D985D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 551,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1275,
											"end": 1609,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 551,
											"end": 593,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 622,
											"end": 623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 623,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 604,
											"end": 646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1857,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AEAE6E840C8CAE0DEE6D2E840E6E88AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1614,
											"end": 1956,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 674,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 685,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 674,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 674,
											"end": 685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2186,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 659,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 659,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 659,
											"end": 673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2108,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 659,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 929,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 628,
											"end": 929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 757,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 789,
											"end": 802,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 841,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 822,
											"end": 839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 820,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 811,
											"end": 848,
											"name": "MCOPY",
											"source": 2
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 883,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 867,
											"end": 883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 892,
											"end": 905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 892,
											"end": 905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 867,
											"end": 883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 628,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2517,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2240,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2346,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2363,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2468,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2427,
											"end": 2487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2427,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2240,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"strategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"deposit(uint256)": "b6b55f25",
							"farmingPool()": "d75aca19",
							"stETH()": "c1fe3e48",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_farmingPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"strategy.sol\":\"StETHStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"strategy.sol\":{\"keccak256\":\"0x95dc36edd5d7130a4dd61a2bf70d550a80a7e1526a70d34a8a2204e28109eb1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2da649919aaa209a0f65b0ff08d5fbc86727a2fde72477751f3e26b427681c8\",\"dweb:/ipfs/QmeCJX3CXLHNR7LstX2tEatvwMmFHcDpvvKNo43tmvAM5s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "strategy.sol:StETHStrategy",
								"label": "stETH",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "strategy.sol:StETHStrategy",
								"label": "vault",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 87,
								"contract": "strategy.sol:StETHStrategy",
								"label": "farmingPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"strategy.sol": {
				"ast": {
					"absolutePath": "strategy.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"StETHStrategy": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 78,
							"src": "61:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StETHStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "StETHStrategy",
							"nameLocation": "130:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c1fe3e48",
									"id": 83,
									"mutability": "mutable",
									"name": "stETH",
									"nameLocation": "165:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "151:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nameLocations": [
												"151:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "151:6:1"
										},
										"referencedDeclaration": 77,
										"src": "151:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 85,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "192:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "177:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d75aca19",
									"id": 87,
									"mutability": "mutable",
									"name": "farmingPool",
									"nameLocation": "219:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "204:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "204:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "340:103:1",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "stETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "351:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 98,
																"name": "_stETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "366:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 97,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "359:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "351:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "351:22:1"
											},
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "384:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 103,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "392:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "384:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "384:14:1"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "farmingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "409:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "_farmingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "423:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "409:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "409:26:1"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_stETH",
												"nameLocation": "294:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "286:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "310:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "302:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_farmingPool",
												"nameLocation": "326:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "318:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:54:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:1"
									},
									"scope": 184,
									"src": "274:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "540:163:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 117,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "559:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "563:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "559:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 119,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "573:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "559:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207661756c74",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "580:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e",
																"typeString": "literal_string \"Only vault\""
															},
															"value": "Only vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e",
																"typeString": "literal_string \"Only vault\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "551:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "612:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "622:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "612:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f736974207374455448",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "625:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															},
															"value": "Must deposit stETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "604:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "farmingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "674:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "687:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 131,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "659:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "665:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "659:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "659:36:1"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "506:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "522:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "514:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:17:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:1"
									},
									"scope": 184,
									"src": "497:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "786:377:1",
										"statements": [
											{
												"assignments": [
													143,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "863:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "863:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "64697374726962757465526577617264732829",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "922:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6f4a2cd0a038cc87b823dd95537d0842688adaae0d56f79238e1f3766cddb7a0",
																		"typeString": "literal_string \"distributeRewards()\""
																	},
																	"value": "distributeRewards()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_6f4a2cd0a038cc87b823dd95537d0842688adaae0d56f79238e1f3766cddb7a0",
																		"typeString": "literal_string \"distributeRewards()\""
																	}
																],
																"expression": {
																	"id": 146,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "898:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "902:19:1",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "898:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "898:46:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 144,
															"name": "farmingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "881:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "893:4:1",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "881:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "862:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "964:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d206661696c6564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "973:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164",
																"typeString": "literal_string \"Claim failed\""
															},
															"value": "Claim failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164",
																"typeString": "literal_string \"Claim failed\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "956:32:1"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "earned",
														"nameLocation": "1009:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1001:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1001:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 161,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1026:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StETHStrategy_$184",
																	"typeString": "contract StETHStrategy"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_StETHStrategy_$184",
																	"typeString": "contract StETHStrategy"
																}
															],
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1018:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 159,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1018:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1018:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1032:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1018:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1001:38:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1054:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1063:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1054:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 177,
												"nodeType": "IfStatement",
												"src": "1050:106:1",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "1066:90:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 173,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "1105:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 170,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1089:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1081:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1081:8:1",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1081:14:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1096:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1081:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1081:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "1081:31:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "762:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:1"
									},
									"scope": 184,
									"src": "753:410:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1198:2:1",
										"statements": []
									},
									"id": 183,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1178:2:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:0:1"
									},
									"scope": 184,
									"src": "1171:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "121:1082:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1172:1"
				},
				"id": 1
			}
		}
	}
}