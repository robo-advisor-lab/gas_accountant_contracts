{
	"id": "d1a9e32900411e70936a6cedd274a76c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/strategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StETHStrategy {\r\n    IERC20 public stETH;\r\n    address public vault;\r\n    address public farmingPool; // A yield farm that accepts stETH\r\n    address public gasReserve; // Gas reserve contract\r\n\r\n    constructor(address _stETH, address _vault, address _farmingPool, address _gasReserve) {\r\n        stETH = IERC20(_stETH);\r\n        vault = _vault;\r\n        farmingPool = _farmingPool;\r\n        gasReserve = _gasReserve;\r\n    }\r\n\r\n    // ðŸ“Œ Deposit stETH into a farming protocol\r\n    function deposit(uint256 _amount) external {\r\n        require(msg.sender == vault, \"Only vault\");\r\n        require(_amount > 0, \"Must deposit stETH\");\r\n\r\n        stETH.transfer(farmingPool, _amount);\r\n    }\r\n\r\n    // ðŸ“Œ Claim yield & reinvest into stETH\r\n    function claimRewards() external {\r\n        // ðŸ“Œ Request ETH for gas from the Gas Reserve\r\n        (bool gasSuccess, ) = gasReserve.call(abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether));\r\n        require(gasSuccess, \"Gas request failed\");\r\n\r\n        // ðŸ“Œ Call farming contract to distribute rewards\r\n        (bool success, ) = farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\"));\r\n        require(success, \"Claim failed\");\r\n\r\n        uint256 earned = address(this).balance;\r\n        if (earned > 0) {\r\n            payable(vault).transfer(earned); // Send new yield back to vault\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/strategy.sol": {
				"StETHStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_farmingPool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gasReserve",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farmingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasReserve",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/strategy.sol\":121:1541  contract StETHStrategy {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/strategy.sol\":330:555  constructor(address _stETH, address _vault, address _farmingPool, address _gasReserve) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/strategy.sol\":428:433  stETH */\n  0x00\n    /* \"contracts/strategy.sol\":428:450  stETH = IERC20(_stETH) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/strategy.sol\":461:475  vault = _vault */\n  dup1\n  sload\n  swap5\n  dup7\n  and\n  swap5\n  dup3\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/strategy.sol\":486:497  farmingPool */\n  0x02\n    /* \"contracts/strategy.sol\":486:512  farmingPool = _farmingPool */\n  dup1\n  sload\n  swap3\n  dup6\n  and\n  swap3\n  dup5\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/strategy.sol\":523:533  gasReserve */\n  0x03\n    /* \"contracts/strategy.sol\":523:547  gasReserve = _gasReserve */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/strategy.sol\":121:1541  contract StETHStrategy {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:660   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_12:\n    /* \"#utility.yul\":410:450   */\n  tag_13\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_14\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_15\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":527:586   */\n  swap2\n  pop\n    /* \"#utility.yul\":605:654   */\n  tag_16\n    /* \"#utility.yul\":650:652   */\n  0x60\n    /* \"#utility.yul\":639:648   */\n  dup7\n    /* \"#utility.yul\":635:653   */\n  add\n    /* \"#utility.yul\":605:654   */\n  tag_7\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":595:654   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\ntag_8:\n    /* \"contracts/strategy.sol\":121:1541  contract StETHStrategy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/strategy.sol\":121:1541  contract StETHStrategy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x372500ab\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc1fe3e48\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd75aca19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea7570e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/strategy.sol\":875:1501  function claimRewards() external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/strategy.sol\":614:820  function deposit(uint256 _amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_12\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"contracts/strategy.sol\":151:170  IERC20 public stETH */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      sload(0x00)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":376:408   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":358:409   */\n      dup2\n      mstore\n        /* \"#utility.yul\":346:348   */\n      0x20\n        /* \"#utility.yul\":331:349   */\n      add\n        /* \"contracts/strategy.sol\":151:170  IERC20 public stETH */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/strategy.sol\":204:230  address public farmingPool */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      sload(0x02)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/strategy.sol\":272:297  address public gasReserve */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      sload(0x03)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/strategy.sol\":177:197  address public vault */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sload(0x01)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/strategy.sol\":875:1501  function claimRewards() external {... */\n    tag_13:\n        /* \"contracts/strategy.sol\":999:1009  gasReserve */\n      sload(0x03)\n        /* \"contracts/strategy.sol\":1015:1073  abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether) */\n      mload(0x40)\n        /* \"contracts/strategy.sol\":1062:1072  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/strategy.sol\":1015:1073  abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":797:845   */\n      mstore\n        /* \"contracts/strategy.sol\":978:993  bool gasSuccess */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/strategy.sol\":999:1009  gasReserve */\n      and\n      swap1\n        /* \"#utility.yul\":770:788   */\n      0x44\n      add\n        /* \"contracts/strategy.sol\":1015:1073  abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x6e1cdf89)\n      or\n      swap1\n      mstore\n        /* \"contracts/strategy.sol\":999:1074  gasReserve.call(abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether)) */\n      mload\n      tag_40\n      swap2\n        /* \"contracts/strategy.sol\":1015:1073  abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether) */\n      swap1\n        /* \"contracts/strategy.sol\":999:1074  gasReserve.call(abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether)) */\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_44\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_43)\n    tag_44:\n      0x60\n      swap2\n      pop\n    tag_43:\n      pop\n        /* \"contracts/strategy.sol\":977:1074  (bool gasSuccess, ) = gasReserve.call(abi.encodeWithSignature(\"requestGas(uint256)\", 0.01 ether)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/strategy.sol\":1093:1103  gasSuccess */\n      dup1\n        /* \"contracts/strategy.sol\":1085:1126  require(gasSuccess, \"Gas request failed\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"contracts/strategy.sol\":1085:1126  require(gasSuccess, \"Gas request failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1346:1367   */\n      mstore\n        /* \"#utility.yul\":1403:1405   */\n      0x12\n        /* \"#utility.yul\":1383:1401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1376:1406   */\n      mstore\n      shl(0x72, 0x11d85cc81c995c5d595cdd0819985a5b1959)\n        /* \"#utility.yul\":1422:1440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1415:1463   */\n      mstore\n        /* \"#utility.yul\":1480:1498   */\n      0x64\n      add\n        /* \"contracts/strategy.sol\":1085:1126  require(gasSuccess, \"Gas request failed\") */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"contracts/strategy.sol\":1219:1230  farmingPool */\n      sload(0x02)\n        /* \"contracts/strategy.sol\":1236:1282  abi.encodeWithSignature(\"distributeRewards()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe4, 0x06f4a2cd)\n      or\n      swap1\n      mstore\n        /* \"contracts/strategy.sol\":1219:1283  farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      swap1\n      mload\n        /* \"contracts/strategy.sol\":1201:1213  bool success */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/strategy.sol\":1219:1230  farmingPool */\n      and\n      swap2\n        /* \"contracts/strategy.sol\":1219:1283  farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      tag_48\n      swap2\n      tag_41\n      jump\t// in\n    tag_48:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_51\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_50)\n    tag_51:\n      0x60\n      swap2\n      pop\n    tag_50:\n      pop\n        /* \"contracts/strategy.sol\":1200:1283  (bool success, ) = farmingPool.call(abi.encodeWithSignature(\"distributeRewards()\")) */\n      pop\n      swap1\n      pop\n        /* \"contracts/strategy.sol\":1302:1309  success */\n      dup1\n        /* \"contracts/strategy.sol\":1294:1326  require(success, \"Claim failed\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"contracts/strategy.sol\":1294:1326  require(success, \"Claim failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1693:1714   */\n      mstore\n        /* \"#utility.yul\":1750:1752   */\n      0x0c\n        /* \"#utility.yul\":1730:1748   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1723:1753   */\n      mstore\n      shl(0xa2, 0x10db185a5b4819985a5b1959)\n        /* \"#utility.yul\":1769:1787   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1762:1804   */\n      mstore\n        /* \"#utility.yul\":1821:1839   */\n      0x64\n      add\n        /* \"contracts/strategy.sol\":1294:1326  require(success, \"Claim failed\") */\n      tag_46\n        /* \"#utility.yul\":1509:1845   */\n      jump\n        /* \"contracts/strategy.sol\":1294:1326  require(success, \"Claim failed\") */\n    tag_52:\n        /* \"contracts/strategy.sol\":1356:1377  address(this).balance */\n      selfbalance\n        /* \"contracts/strategy.sol\":1392:1402  earned > 0 */\n      dup1\n      iszero\n        /* \"contracts/strategy.sol\":1388:1494  if (earned > 0) {... */\n      tag_55\n      jumpi\n        /* \"contracts/strategy.sol\":1427:1432  vault */\n      sload(0x01)\n        /* \"contracts/strategy.sol\":1419:1450  payable(vault).transfer(earned) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/strategy.sol\":1427:1432  vault */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/strategy.sol\":1419:1450  payable(vault).transfer(earned) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/strategy.sol\":1443:1449  earned */\n      dup4\n      swap1\n        /* \"contracts/strategy.sol\":1427:1432  vault */\n      0x00\n        /* \"contracts/strategy.sol\":1419:1450  payable(vault).transfer(earned) */\n      dup2\n        /* \"contracts/strategy.sol\":1427:1432  vault */\n      dup2\n        /* \"contracts/strategy.sol\":1419:1450  payable(vault).transfer(earned) */\n      dup2\n        /* \"contracts/strategy.sol\":1443:1449  earned */\n      dup6\n        /* \"contracts/strategy.sol\":1427:1432  vault */\n      dup9\n        /* \"contracts/strategy.sol\":1419:1450  payable(vault).transfer(earned) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n        /* \"contracts/strategy.sol\":1388:1494  if (earned > 0) {... */\n    tag_55:\n        /* \"contracts/strategy.sol\":908:1501  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/strategy.sol\":875:1501  function claimRewards() external {... */\n      jump\t// out\n        /* \"contracts/strategy.sol\":614:820  function deposit(uint256 _amount) external {... */\n    tag_18:\n        /* \"contracts/strategy.sol\":690:695  vault */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/strategy.sol\":676:686  msg.sender */\n      caller\n        /* \"contracts/strategy.sol\":676:695  msg.sender == vault */\n      eq\n        /* \"contracts/strategy.sol\":668:710  require(msg.sender == vault, \"Only vault\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2052:2054   */\n      0x20\n        /* \"contracts/strategy.sol\":668:710  require(msg.sender == vault, \"Only vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2034:2055   */\n      mstore\n        /* \"#utility.yul\":2091:2093   */\n      0x0a\n        /* \"#utility.yul\":2071:2089   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2064:2094   */\n      mstore\n      shl(0xb2, 0x13db9b1e481d985d5b1d)\n        /* \"#utility.yul\":2110:2128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2103:2143   */\n      mstore\n        /* \"#utility.yul\":2160:2178   */\n      0x64\n      add\n        /* \"contracts/strategy.sol\":668:710  require(msg.sender == vault, \"Only vault\") */\n      tag_46\n        /* \"#utility.yul\":1850:2184   */\n      jump\n        /* \"contracts/strategy.sol\":668:710  require(msg.sender == vault, \"Only vault\") */\n    tag_59:\n        /* \"contracts/strategy.sol\":739:740  0 */\n      0x00\n        /* \"contracts/strategy.sol\":729:736  _amount */\n      dup2\n        /* \"contracts/strategy.sol\":729:740  _amount > 0 */\n      gt\n        /* \"contracts/strategy.sol\":721:763  require(_amount > 0, \"Must deposit stETH\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2391:2393   */\n      0x20\n        /* \"contracts/strategy.sol\":721:763  require(_amount > 0, \"Must deposit stETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2373:2394   */\n      mstore\n        /* \"#utility.yul\":2430:2432   */\n      0x12\n        /* \"#utility.yul\":2410:2428   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2403:2433   */\n      mstore\n      shl(0x73, 0x09aeae6e840c8cae0dee6d2e840e6e88aa89)\n        /* \"#utility.yul\":2449:2467   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2442:2490   */\n      mstore\n        /* \"#utility.yul\":2507:2525   */\n      0x64\n      add\n        /* \"contracts/strategy.sol\":721:763  require(_amount > 0, \"Must deposit stETH\") */\n      tag_46\n        /* \"#utility.yul\":2189:2531   */\n      jump\n        /* \"contracts/strategy.sol\":721:763  require(_amount > 0, \"Must deposit stETH\") */\n    tag_62:\n        /* \"contracts/strategy.sol\":776:781  stETH */\n      sload(0x00)\n        /* \"contracts/strategy.sol\":791:802  farmingPool */\n      sload(0x02)\n        /* \"contracts/strategy.sol\":776:812  stETH.transfer(farmingPool, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/strategy.sol\":791:802  farmingPool */\n      swap2\n      dup3\n      and\n        /* \"contracts/strategy.sol\":776:812  stETH.transfer(farmingPool, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2710:2761   */\n      mstore\n        /* \"#utility.yul\":2777:2795   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2770:2804   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/strategy.sol\":776:781  stETH */\n      swap2\n      and\n      swap1\n        /* \"contracts/strategy.sol\":776:790  stETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2683:2701   */\n      0x44\n      add\n        /* \"contracts/strategy.sol\":776:812  stETH.transfer(farmingPool, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      pop\n        /* \"contracts/strategy.sol\":614:820  function deposit(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_73:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":856:1157   */\n    tag_41:\n        /* \"#utility.yul\":985:988   */\n      0x00\n        /* \"#utility.yul\":1023:1029   */\n      dup3\n        /* \"#utility.yul\":1017:1030   */\n      mload\n        /* \"#utility.yul\":1069:1075   */\n      dup1\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1054:1060   */\n      dup6\n        /* \"#utility.yul\":1050:1067   */\n      add\n        /* \"#utility.yul\":1045:1048   */\n      dup5\n        /* \"#utility.yul\":1039:1076   */\n      mcopy\n        /* \"#utility.yul\":1131:1132   */\n      0x00\n        /* \"#utility.yul\":1095:1111   */\n      swap3\n      add\n        /* \"#utility.yul\":1120:1133   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":1095:1111   */\n      swap2\n        /* \"#utility.yul\":856:1157   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2815:3092   */\n    tag_70:\n        /* \"#utility.yul\":2882:2888   */\n      0x00\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2923:2932   */\n      dup3\n        /* \"#utility.yul\":2914:2921   */\n      dup5\n        /* \"#utility.yul\":2910:2933   */\n      sub\n        /* \"#utility.yul\":2906:2938   */\n      slt\n        /* \"#utility.yul\":2903:2955   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2948:2949   */\n      dup1\n        /* \"#utility.yul\":2941:2953   */\n      revert\n        /* \"#utility.yul\":2903:2955   */\n    tag_84:\n        /* \"#utility.yul\":2983:2992   */\n      dup2\n        /* \"#utility.yul\":2977:2993   */\n      mload\n        /* \"#utility.yul\":3036:3041   */\n      dup1\n        /* \"#utility.yul\":3029:3042   */\n      iszero\n        /* \"#utility.yul\":3022:3043   */\n      iszero\n        /* \"#utility.yul\":3015:3020   */\n      dup2\n        /* \"#utility.yul\":3012:3044   */\n      eq\n        /* \"#utility.yul\":3002:3062   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3058:3059   */\n      0x00\n        /* \"#utility.yul\":3055:3056   */\n      dup1\n        /* \"#utility.yul\":3048:3060   */\n      revert\n        /* \"#utility.yul\":3002:3062   */\n    tag_85:\n        /* \"#utility.yul\":3081:3086   */\n      swap4\n        /* \"#utility.yul\":2815:3092   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f487a483858cd7d67c6298a8578eebed065bd899ac578918667418c58b2d9e1e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_119": {
									"entryPoint": null,
									"id": 119,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:662:2",
										"nodeType": "YulBlock",
										"src": "0:662:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:2",
													"nodeType": "YulBlock",
													"src": "74:117:2",
													"statements": [
														{
															"nativeSrc": "84:22:2",
															"nodeType": "YulAssignment",
															"src": "84:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:2"
																},
																"nativeSrc": "93:13:2",
																"nodeType": "YulFunctionCall",
																"src": "93:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:2",
																"nodeType": "YulBlock",
																"src": "169:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:2",
																					"nodeType": "YulLiteral",
																					"src": "178:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:2",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:2"
																			},
																			"nativeSrc": "171:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:2"
																		},
																		"nativeSrc": "171:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:2",
																										"nodeType": "YulLiteral",
																										"src": "154:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:2",
																										"nodeType": "YulLiteral",
																										"src": "159:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:2"
																								},
																								"nativeSrc": "150:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:2",
																								"nodeType": "YulLiteral",
																								"src": "163:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:2"
																						},
																						"nativeSrc": "146:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:2"
																				},
																				"nativeSrc": "135:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:2"
																		},
																		"nativeSrc": "125:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:2"
																},
																"nativeSrc": "118:50:2",
																"nodeType": "YulFunctionCall",
																"src": "118:50:2"
															},
															"nativeSrc": "115:70:2",
															"nodeType": "YulIf",
															"src": "115:70:2"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:2",
														"nodeType": "YulTypedName",
														"src": "53:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:2",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nativeSrc": "328:332:2",
													"nodeType": "YulBlock",
													"src": "328:332:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:2",
																"nodeType": "YulBlock",
																"src": "375:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:2",
																					"nodeType": "YulLiteral",
																					"src": "384:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:2",
																					"nodeType": "YulLiteral",
																					"src": "387:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:2"
																			},
																			"nativeSrc": "377:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:2"
																		},
																		"nativeSrc": "377:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:2"
																		},
																		"nativeSrc": "345:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:2",
																		"nodeType": "YulLiteral",
																		"src": "370:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:2"
																},
																"nativeSrc": "341:33:2",
																"nodeType": "YulFunctionCall",
																"src": "341:33:2"
															},
															"nativeSrc": "338:53:2",
															"nodeType": "YulIf",
															"src": "338:53:2"
														},
														{
															"nativeSrc": "400:50:2",
															"nodeType": "YulAssignment",
															"src": "400:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:2"
																},
																"nativeSrc": "410:40:2",
																"nodeType": "YulFunctionCall",
																"src": "410:40:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:2"
																}
															]
														},
														{
															"nativeSrc": "459:59:2",
															"nodeType": "YulAssignment",
															"src": "459:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:2",
																				"nodeType": "YulLiteral",
																				"src": "514:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:2"
																		},
																		"nativeSrc": "499:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:2"
																},
																"nativeSrc": "469:49:2",
																"nodeType": "YulFunctionCall",
																"src": "469:49:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:2"
																}
															]
														},
														{
															"nativeSrc": "527:59:2",
															"nodeType": "YulAssignment",
															"src": "527:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "571:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:2:2",
																				"nodeType": "YulLiteral",
																				"src": "582:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "567:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:2"
																		},
																		"nativeSrc": "567:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "537:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:2"
																},
																"nativeSrc": "537:49:2",
																"nodeType": "YulFunctionCall",
																"src": "537:49:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:2"
																}
															]
														},
														{
															"nativeSrc": "595:59:2",
															"nodeType": "YulAssignment",
															"src": "595:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "639:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "650:2:2",
																				"nodeType": "YulLiteral",
																				"src": "650:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "635:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:2"
																		},
																		"nativeSrc": "635:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "605:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "605:29:2"
																},
																"nativeSrc": "605:49:2",
																"nodeType": "YulFunctionCall",
																"src": "605:49:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "595:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:464:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:2",
														"nodeType": "YulTypedName",
														"src": "270:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:2",
														"nodeType": "YulTypedName",
														"src": "281:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:2",
														"nodeType": "YulTypedName",
														"src": "293:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:2",
														"nodeType": "YulTypedName",
														"src": "301:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:2",
														"nodeType": "YulTypedName",
														"src": "309:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:2",
														"nodeType": "YulTypedName",
														"src": "317:6:2",
														"type": ""
													}
												],
												"src": "196:464:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161059938038061059983398101604081905261002e9161009b565b5f80546001600160a01b039586166001600160a01b03199182161790915560018054948616948216949094179093556002805492851692841692909217909155600380549190931691161790556100ec565b80516001600160a01b0381168114610096575f80fd5b919050565b5f805f80608085870312156100ae575f80fd5b6100b785610080565b93506100c560208601610080565b92506100d360408601610080565b91506100e160608601610080565b905092959194509250565b6104a0806100f95f395ff3fe608060405260043610610057575f3560e01c8063372500ab14610062578063b6b55f2514610078578063c1fe3e4814610097578063d75aca19146100d1578063eea7570e146100f0578063fbfa77cf1461010f575f80fd5b3661005e57005b5f80fd5b34801561006d575f80fd5b5061007661012e565b005b348015610083575f80fd5b50610076610092366004610417565b610313565b3480156100a2575f80fd5b505f546100b5906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100dc575f80fd5b506002546100b5906001600160a01b031681565b3480156100fb575f80fd5b506003546100b5906001600160a01b031681565b34801561011a575f80fd5b506001546100b5906001600160a01b031681565b600354604051662386f26fc1000060248201525f916001600160a01b03169060440160408051601f198184030181529181526020820180516001600160e01b0316636e1cdf8960e01b17905251610185919061042e565b5f604051808303815f865af19150503d805f81146101be576040519150601f19603f3d011682016040523d82523d5f602084013e6101c3565b606091505b505090508061020e5760405162461bcd60e51b815260206004820152601260248201527111d85cc81c995c5d595cdd0819985a5b195960721b60448201526064015b60405180910390fd5b60025460408051600481526024810182526020810180516001600160e01b03166306f4a2cd60e41b17905290515f926001600160a01b0316916102509161042e565b5f604051808303815f865af19150503d805f8114610289576040519150601f19603f3d011682016040523d82523d5f602084013e61028e565b606091505b50509050806102ce5760405162461bcd60e51b815260206004820152600c60248201526b10db185a5b4819985a5b195960a21b6044820152606401610205565b47801561030e576001546040516001600160a01b039091169082156108fc029083905f818181858888f1935050505015801561030c573d5f803e3d5ffd5b505b505050565b6001546001600160a01b0316331461035a5760405162461bcd60e51b815260206004820152600a60248201526913db9b1e481d985d5b1d60b21b6044820152606401610205565b5f811161039e5760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b6044820152606401610205565b5f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af11580156103ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104139190610444565b5050565b5f60208284031215610427575f80fd5b5035919050565b5f82518060208501845e5f920191825250919050565b5f60208284031215610454575f80fd5b81518015158114610463575f80fd5b939250505056fea2646970667358221220f487a483858cd7d67c6298a8578eebed065bd899ac578918667418c58b2d9e1e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x599 CODESIZE SUB DUP1 PUSH2 0x599 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x9B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP7 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xEC JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB7 DUP6 PUSH2 0x80 JUMP JUMPDEST SWAP4 POP PUSH2 0xC5 PUSH1 0x20 DUP7 ADD PUSH2 0x80 JUMP JUMPDEST SWAP3 POP PUSH2 0xD3 PUSH1 0x40 DUP7 ADD PUSH2 0x80 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1 PUSH1 0x60 DUP7 ADD PUSH2 0x80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4A0 DUP1 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372500AB EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xD75ACA19 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x5E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 PUSH1 0x24 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6E1CDF89 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D85CC81C995C5D595CDD0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F4A2CD PUSH1 0xE4 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x250 SWAP2 PUSH2 0x42E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB185A5B4819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x30C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x13DB9B1E481D985D5B1D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x427 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP8 LOG4 DUP4 DUP6 DUP13 0xD7 0xD6 PUSH29 0x6298A8578EEBED065BD899AC578918667418C58B2D9E1E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "121:1420:1:-:0;;;330:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;428:5;:22;;-1:-1:-1;;;;;428:22:1;;;-1:-1:-1;;;;;;428:22:1;;;;;;;;461:14;;;;;;;;;;;;;;;486:11;:26;;;;;;;;;;;;;;;523:10;:24;;;;;;;;;;;121:1420;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;:::-;121:1420:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimRewards_203": {
									"entryPoint": 302,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_147": {
									"entryPoint": 787,
									"id": 147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@farmingPool_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasReserve_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stETH_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vault_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint56__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846067e394bf75f6bfc8a4e4f7119e586d602ccab98bac65e5b96d4f2f225562__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3094:2",
										"nodeType": "YulBlock",
										"src": "0:3094:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:2",
													"nodeType": "YulBlock",
													"src": "84:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:2",
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:2",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:2",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nativeSrc": "132:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nativeSrc": "132:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nativeSrc": "101:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:2",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nativeSrc": "97:32:2",
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nativeSrc": "94:52:2",
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nativeSrc": "155:33:2",
															"nodeType": "YulAssignment",
															"src": "155:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:2"
																},
																"nativeSrc": "165:23:2",
																"nodeType": "YulFunctionCall",
																"src": "165:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:2",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:2",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:2",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:180:2"
											},
											{
												"body": {
													"nativeSrc": "313:102:2",
													"nodeType": "YulBlock",
													"src": "313:102:2",
													"statements": [
														{
															"nativeSrc": "323:26:2",
															"nodeType": "YulAssignment",
															"src": "323:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "335:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "335:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:2:2",
																		"nodeType": "YulLiteral",
																		"src": "346:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "331:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "331:3:2"
																},
																"nativeSrc": "331:18:2",
																"nodeType": "YulFunctionCall",
																"src": "331:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "323:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "323:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "365:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "365:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "380:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "380:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "396:3:2",
																								"nodeType": "YulLiteral",
																								"src": "396:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "401:1:2",
																								"nodeType": "YulLiteral",
																								"src": "401:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "392:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "392:3:2"
																						},
																						"nativeSrc": "392:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "392:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "405:1:2",
																						"nodeType": "YulLiteral",
																						"src": "405:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "388:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "388:3:2"
																				},
																				"nativeSrc": "388:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "388:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "376:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:2"
																		},
																		"nativeSrc": "376:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "376:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:6:2"
																},
																"nativeSrc": "358:51:2",
																"nodeType": "YulFunctionCall",
																"src": "358:51:2"
															},
															"nativeSrc": "358:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "199:216:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:2",
														"nodeType": "YulTypedName",
														"src": "282:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "293:6:2",
														"nodeType": "YulTypedName",
														"src": "293:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "304:4:2",
														"nodeType": "YulTypedName",
														"src": "304:4:2",
														"type": ""
													}
												],
												"src": "199:216:2"
											},
											{
												"body": {
													"nativeSrc": "521:102:2",
													"nodeType": "YulBlock",
													"src": "521:102:2",
													"statements": [
														{
															"nativeSrc": "531:26:2",
															"nodeType": "YulAssignment",
															"src": "531:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "543:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "543:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "554:2:2",
																		"nodeType": "YulLiteral",
																		"src": "554:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "539:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:2"
																},
																"nativeSrc": "539:18:2",
																"nodeType": "YulFunctionCall",
																"src": "539:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "531:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "531:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "573:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "573:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "588:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "588:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "604:3:2",
																								"nodeType": "YulLiteral",
																								"src": "604:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "609:1:2",
																								"nodeType": "YulLiteral",
																								"src": "609:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "600:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "600:3:2"
																						},
																						"nativeSrc": "600:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "600:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "613:1:2",
																						"nodeType": "YulLiteral",
																						"src": "613:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "596:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "596:3:2"
																				},
																				"nativeSrc": "596:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "596:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "584:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:2"
																		},
																		"nativeSrc": "584:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "584:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "566:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:2"
																},
																"nativeSrc": "566:51:2",
																"nodeType": "YulFunctionCall",
																"src": "566:51:2"
															},
															"nativeSrc": "566:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "566:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "420:203:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "490:9:2",
														"nodeType": "YulTypedName",
														"src": "490:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "501:6:2",
														"nodeType": "YulTypedName",
														"src": "501:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "512:4:2",
														"nodeType": "YulTypedName",
														"src": "512:4:2",
														"type": ""
													}
												],
												"src": "420:203:2"
											},
											{
												"body": {
													"nativeSrc": "752:99:2",
													"nodeType": "YulBlock",
													"src": "752:99:2",
													"statements": [
														{
															"nativeSrc": "762:26:2",
															"nodeType": "YulAssignment",
															"src": "762:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "774:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "774:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "785:2:2",
																		"nodeType": "YulLiteral",
																		"src": "785:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "770:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:2"
																},
																"nativeSrc": "770:18:2",
																"nodeType": "YulFunctionCall",
																"src": "770:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "762:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "762:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "804:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "804:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "819:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "819:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "827:16:2",
																				"nodeType": "YulLiteral",
																				"src": "827:16:2",
																				"type": "",
																				"value": "0xffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "815:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:2"
																		},
																		"nativeSrc": "815:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "815:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "797:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "797:6:2"
																},
																"nativeSrc": "797:48:2",
																"nodeType": "YulFunctionCall",
																"src": "797:48:2"
															},
															"nativeSrc": "797:48:2",
															"nodeType": "YulExpressionStatement",
															"src": "797:48:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint56__fromStack_reversed",
												"nativeSrc": "628:223:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "721:9:2",
														"nodeType": "YulTypedName",
														"src": "721:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "732:6:2",
														"nodeType": "YulTypedName",
														"src": "732:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "743:4:2",
														"nodeType": "YulTypedName",
														"src": "743:4:2",
														"type": ""
													}
												],
												"src": "628:223:2"
											},
											{
												"body": {
													"nativeSrc": "993:164:2",
													"nodeType": "YulBlock",
													"src": "993:164:2",
													"statements": [
														{
															"nativeSrc": "1003:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1003:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1023:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1023:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1017:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1017:5:2"
																},
																"nativeSrc": "1017:13:2",
																"nodeType": "YulFunctionCall",
																"src": "1017:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1007:6:2",
																	"nodeType": "YulTypedName",
																	"src": "1007:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1045:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1045:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1054:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1062:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1050:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:2"
																		},
																		"nativeSrc": "1050:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1050:17:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1069:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:2"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1039:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1039:5:2"
																},
																"nativeSrc": "1039:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1039:37:2"
															},
															"nativeSrc": "1039:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1039:37:2"
														},
														{
															"nativeSrc": "1085:26:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1085:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1099:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1099:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1104:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1104:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1095:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1095:3:2"
																},
																"nativeSrc": "1095:16:2",
																"nodeType": "YulFunctionCall",
																"src": "1095:16:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1089:2:2",
																	"nodeType": "YulTypedName",
																	"src": "1089:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1127:2:2",
																		"nodeType": "YulIdentifier",
																		"src": "1127:2:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1131:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1131:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1120:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:2"
																},
																"nativeSrc": "1120:13:2",
																"nodeType": "YulFunctionCall",
																"src": "1120:13:2"
															},
															"nativeSrc": "1120:13:2",
															"nodeType": "YulExpressionStatement",
															"src": "1120:13:2"
														},
														{
															"nativeSrc": "1142:9:2",
															"nodeType": "YulAssignment",
															"src": "1142:9:2",
															"value": {
																"name": "_1",
																"nativeSrc": "1149:2:2",
																"nodeType": "YulIdentifier",
																"src": "1149:2:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1142:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "856:301:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "969:3:2",
														"nodeType": "YulTypedName",
														"src": "969:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "974:6:2",
														"nodeType": "YulTypedName",
														"src": "974:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "985:3:2",
														"nodeType": "YulTypedName",
														"src": "985:3:2",
														"type": ""
													}
												],
												"src": "856:301:2"
											},
											{
												"body": {
													"nativeSrc": "1336:168:2",
													"nodeType": "YulBlock",
													"src": "1336:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1353:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1346:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:2"
																},
																"nativeSrc": "1346:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1346:21:2"
															},
															"nativeSrc": "1346:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1346:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1387:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1398:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1398:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1383:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:2"
																		},
																		"nativeSrc": "1383:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1383:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1403:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1376:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:2"
																},
																"nativeSrc": "1376:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1376:30:2"
															},
															"nativeSrc": "1376:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1376:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1426:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1426:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1437:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1437:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1422:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1422:3:2"
																		},
																		"nativeSrc": "1422:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1422:18:2"
																	},
																	{
																		"hexValue": "4761732072657175657374206661696c6564",
																		"kind": "string",
																		"nativeSrc": "1442:20:2",
																		"nodeType": "YulLiteral",
																		"src": "1442:20:2",
																		"type": "",
																		"value": "Gas request failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:2"
																},
																"nativeSrc": "1415:48:2",
																"nodeType": "YulFunctionCall",
																"src": "1415:48:2"
															},
															"nativeSrc": "1415:48:2",
															"nodeType": "YulExpressionStatement",
															"src": "1415:48:2"
														},
														{
															"nativeSrc": "1472:26:2",
															"nodeType": "YulAssignment",
															"src": "1472:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1484:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1484:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1495:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1495:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1480:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1480:3:2"
																},
																"nativeSrc": "1480:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1480:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1472:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1472:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846067e394bf75f6bfc8a4e4f7119e586d602ccab98bac65e5b96d4f2f225562__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1162:342:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1313:9:2",
														"nodeType": "YulTypedName",
														"src": "1313:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1327:4:2",
														"nodeType": "YulTypedName",
														"src": "1327:4:2",
														"type": ""
													}
												],
												"src": "1162:342:2"
											},
											{
												"body": {
													"nativeSrc": "1683:162:2",
													"nodeType": "YulBlock",
													"src": "1683:162:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1700:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1711:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1693:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:2"
																},
																"nativeSrc": "1693:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1693:21:2"
															},
															"nativeSrc": "1693:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1693:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1734:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1745:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1730:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:2"
																		},
																		"nativeSrc": "1730:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1750:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1750:2:2",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:2"
																},
																"nativeSrc": "1723:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1723:30:2"
															},
															"nativeSrc": "1723:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1723:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1784:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1784:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1769:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:2"
																		},
																		"nativeSrc": "1769:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:18:2"
																	},
																	{
																		"hexValue": "436c61696d206661696c6564",
																		"kind": "string",
																		"nativeSrc": "1789:14:2",
																		"nodeType": "YulLiteral",
																		"src": "1789:14:2",
																		"type": "",
																		"value": "Claim failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1762:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:2"
																},
																"nativeSrc": "1762:42:2",
																"nodeType": "YulFunctionCall",
																"src": "1762:42:2"
															},
															"nativeSrc": "1762:42:2",
															"nodeType": "YulExpressionStatement",
															"src": "1762:42:2"
														},
														{
															"nativeSrc": "1813:26:2",
															"nodeType": "YulAssignment",
															"src": "1813:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1825:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1825:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1836:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1836:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1821:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1821:3:2"
																},
																"nativeSrc": "1821:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1821:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1813:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1813:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1509:336:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1660:9:2",
														"nodeType": "YulTypedName",
														"src": "1660:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1674:4:2",
														"nodeType": "YulTypedName",
														"src": "1674:4:2",
														"type": ""
													}
												],
												"src": "1509:336:2"
											},
											{
												"body": {
													"nativeSrc": "2024:160:2",
													"nodeType": "YulBlock",
													"src": "2024:160:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2041:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2041:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2052:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2052:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2034:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:2"
																},
																"nativeSrc": "2034:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2034:21:2"
															},
															"nativeSrc": "2034:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "2034:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2075:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2075:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2086:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2086:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2071:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2071:3:2"
																		},
																		"nativeSrc": "2071:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2071:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2091:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2091:2:2",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2064:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:2"
																},
																"nativeSrc": "2064:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2064:30:2"
															},
															"nativeSrc": "2064:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2064:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2114:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2125:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2125:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2110:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:2"
																		},
																		"nativeSrc": "2110:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2110:18:2"
																	},
																	{
																		"hexValue": "4f6e6c79207661756c74",
																		"kind": "string",
																		"nativeSrc": "2130:12:2",
																		"nodeType": "YulLiteral",
																		"src": "2130:12:2",
																		"type": "",
																		"value": "Only vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2103:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:2"
																},
																"nativeSrc": "2103:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2103:40:2"
															},
															"nativeSrc": "2103:40:2",
															"nodeType": "YulExpressionStatement",
															"src": "2103:40:2"
														},
														{
															"nativeSrc": "2152:26:2",
															"nodeType": "YulAssignment",
															"src": "2152:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2164:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2164:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2160:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:2"
																},
																"nativeSrc": "2160:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2160:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2152:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2152:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1850:334:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2001:9:2",
														"nodeType": "YulTypedName",
														"src": "2001:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2015:4:2",
														"nodeType": "YulTypedName",
														"src": "2015:4:2",
														"type": ""
													}
												],
												"src": "1850:334:2"
											},
											{
												"body": {
													"nativeSrc": "2363:168:2",
													"nodeType": "YulBlock",
													"src": "2363:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2380:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2380:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2391:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2391:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2373:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:2"
																},
																"nativeSrc": "2373:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2373:21:2"
															},
															"nativeSrc": "2373:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "2373:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2414:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2425:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2425:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2410:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:2"
																		},
																		"nativeSrc": "2410:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2430:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2430:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2403:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:2"
																},
																"nativeSrc": "2403:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2403:30:2"
															},
															"nativeSrc": "2403:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2403:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2453:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2453:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2464:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2464:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2449:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2449:3:2"
																		},
																		"nativeSrc": "2449:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2449:18:2"
																	},
																	{
																		"hexValue": "4d757374206465706f736974207374455448",
																		"kind": "string",
																		"nativeSrc": "2469:20:2",
																		"nodeType": "YulLiteral",
																		"src": "2469:20:2",
																		"type": "",
																		"value": "Must deposit stETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:2"
																},
																"nativeSrc": "2442:48:2",
																"nodeType": "YulFunctionCall",
																"src": "2442:48:2"
															},
															"nativeSrc": "2442:48:2",
															"nodeType": "YulExpressionStatement",
															"src": "2442:48:2"
														},
														{
															"nativeSrc": "2499:26:2",
															"nodeType": "YulAssignment",
															"src": "2499:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2511:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2511:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2522:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2507:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:2"
																},
																"nativeSrc": "2507:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2507:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2499:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2499:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2189:342:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2340:9:2",
														"nodeType": "YulTypedName",
														"src": "2340:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2354:4:2",
														"nodeType": "YulTypedName",
														"src": "2354:4:2",
														"type": ""
													}
												],
												"src": "2189:342:2"
											},
											{
												"body": {
													"nativeSrc": "2665:145:2",
													"nodeType": "YulBlock",
													"src": "2665:145:2",
													"statements": [
														{
															"nativeSrc": "2675:26:2",
															"nodeType": "YulAssignment",
															"src": "2675:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:2"
																},
																"nativeSrc": "2683:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2717:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2717:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2732:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2748:3:2",
																								"nodeType": "YulLiteral",
																								"src": "2748:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2753:1:2",
																								"nodeType": "YulLiteral",
																								"src": "2753:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2744:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:2"
																						},
																						"nativeSrc": "2744:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2757:1:2",
																						"nodeType": "YulLiteral",
																						"src": "2757:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2740:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2740:3:2"
																				},
																				"nativeSrc": "2740:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2740:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2728:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:2"
																		},
																		"nativeSrc": "2728:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2710:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:2"
																},
																"nativeSrc": "2710:51:2",
																"nodeType": "YulFunctionCall",
																"src": "2710:51:2"
															},
															"nativeSrc": "2710:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "2710:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2781:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2792:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2792:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2777:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:2"
																		},
																		"nativeSrc": "2777:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2777:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2797:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2770:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:2"
																},
																"nativeSrc": "2770:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2770:34:2"
															},
															"nativeSrc": "2770:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2770:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2536:274:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2626:9:2",
														"nodeType": "YulTypedName",
														"src": "2626:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2637:6:2",
														"nodeType": "YulTypedName",
														"src": "2637:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2645:6:2",
														"nodeType": "YulTypedName",
														"src": "2645:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2656:4:2",
														"nodeType": "YulTypedName",
														"src": "2656:4:2",
														"type": ""
													}
												],
												"src": "2536:274:2"
											},
											{
												"body": {
													"nativeSrc": "2893:199:2",
													"nodeType": "YulBlock",
													"src": "2893:199:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2939:16:2",
																"nodeType": "YulBlock",
																"src": "2939:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2951:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2951:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2941:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2941:6:2"
																			},
																			"nativeSrc": "2941:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2941:12:2"
																		},
																		"nativeSrc": "2941:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2941:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2914:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2914:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2923:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2910:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:2"
																		},
																		"nativeSrc": "2910:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2906:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:2"
																},
																"nativeSrc": "2906:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2906:32:2"
															},
															"nativeSrc": "2903:52:2",
															"nodeType": "YulIf",
															"src": "2903:52:2"
														},
														{
															"nativeSrc": "2964:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2983:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2983:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2977:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2977:5:2"
																},
																"nativeSrc": "2977:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2977:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2968:5:2",
																	"nodeType": "YulTypedName",
																	"src": "2968:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3046:16:2",
																"nodeType": "YulBlock",
																"src": "3046:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3058:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3048:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3048:6:2"
																			},
																			"nativeSrc": "3048:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3048:12:2"
																		},
																		"nativeSrc": "3048:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3048:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3015:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3015:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3036:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "3036:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3029:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "3029:6:2"
																						},
																						"nativeSrc": "3029:13:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3029:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3022:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3022:6:2"
																				},
																				"nativeSrc": "3022:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3012:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3012:2:2"
																		},
																		"nativeSrc": "3012:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3012:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3005:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3005:6:2"
																},
																"nativeSrc": "3005:40:2",
																"nodeType": "YulFunctionCall",
																"src": "3005:40:2"
															},
															"nativeSrc": "3002:60:2",
															"nodeType": "YulIf",
															"src": "3002:60:2"
														},
														{
															"nativeSrc": "3071:15:2",
															"nodeType": "YulAssignment",
															"src": "3071:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "3081:5:2",
																"nodeType": "YulIdentifier",
																"src": "3081:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3071:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2815:277:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2859:9:2",
														"nodeType": "YulTypedName",
														"src": "2859:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2870:7:2",
														"nodeType": "YulTypedName",
														"src": "2870:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2882:6:2",
														"nodeType": "YulTypedName",
														"src": "2882:6:2",
														"type": ""
													}
												],
												"src": "2815:277:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint56__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_846067e394bf75f6bfc8a4e4f7119e586d602ccab98bac65e5b96d4f2f225562__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Gas request failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Claim failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Must deposit stETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610057575f3560e01c8063372500ab14610062578063b6b55f2514610078578063c1fe3e4814610097578063d75aca19146100d1578063eea7570e146100f0578063fbfa77cf1461010f575f80fd5b3661005e57005b5f80fd5b34801561006d575f80fd5b5061007661012e565b005b348015610083575f80fd5b50610076610092366004610417565b610313565b3480156100a2575f80fd5b505f546100b5906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100dc575f80fd5b506002546100b5906001600160a01b031681565b3480156100fb575f80fd5b506003546100b5906001600160a01b031681565b34801561011a575f80fd5b506001546100b5906001600160a01b031681565b600354604051662386f26fc1000060248201525f916001600160a01b03169060440160408051601f198184030181529181526020820180516001600160e01b0316636e1cdf8960e01b17905251610185919061042e565b5f604051808303815f865af19150503d805f81146101be576040519150601f19603f3d011682016040523d82523d5f602084013e6101c3565b606091505b505090508061020e5760405162461bcd60e51b815260206004820152601260248201527111d85cc81c995c5d595cdd0819985a5b195960721b60448201526064015b60405180910390fd5b60025460408051600481526024810182526020810180516001600160e01b03166306f4a2cd60e41b17905290515f926001600160a01b0316916102509161042e565b5f604051808303815f865af19150503d805f8114610289576040519150601f19603f3d011682016040523d82523d5f602084013e61028e565b606091505b50509050806102ce5760405162461bcd60e51b815260206004820152600c60248201526b10db185a5b4819985a5b195960a21b6044820152606401610205565b47801561030e576001546040516001600160a01b039091169082156108fc029083905f818181858888f1935050505015801561030c573d5f803e3d5ffd5b505b505050565b6001546001600160a01b0316331461035a5760405162461bcd60e51b815260206004820152600a60248201526913db9b1e481d985d5b1d60b21b6044820152606401610205565b5f811161039e5760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b6044820152606401610205565b5f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af11580156103ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104139190610444565b5050565b5f60208284031215610427575f80fd5b5035919050565b5f82518060208501845e5f920191825250919050565b5f60208284031215610454575f80fd5b81518015158114610463575f80fd5b939250505056fea2646970667358221220f487a483858cd7d67c6298a8578eebed065bd899ac578918667418c58b2d9e1e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372500AB EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xD75ACA19 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x5E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 PUSH1 0x24 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6E1CDF89 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D85CC81C995C5D595CDD0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F4A2CD PUSH1 0xE4 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x250 SWAP2 PUSH2 0x42E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x10DB185A5B4819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x30C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x13DB9B1E481D985D5B1D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x205 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x427 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP8 LOG4 DUP4 DUP6 DUP13 0xD7 0xD6 PUSH29 0x6298A8578EEBED065BD899AC578918667418C58B2D9E1E64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "121:1420:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:626;;;;;;;;;;;;;:::i;:::-;;614:206;;;;;;;;;;-1:-1:-1;614:206:1;;;;;:::i;:::-;;:::i;151:19::-;;;;;;;;;;-1:-1:-1;151:19:1;;;;-1:-1:-1;;;;;151:19:1;;;;;;-1:-1:-1;;;;;376:32:2;;;358:51;;346:2;331:18;151:19:1;;;;;;;204:26;;;;;;;;;;-1:-1:-1;204:26:1;;;;-1:-1:-1;;;;;204:26:1;;;272:25;;;;;;;;;;-1:-1:-1;272:25:1;;;;-1:-1:-1;;;;;272:25:1;;;177:20;;;;;;;;;;-1:-1:-1;177:20:1;;;;-1:-1:-1;;;;;177:20:1;;;875:626;999:10;;1015:58;;1062:10;1015:58;;;797:48:2;978:15:1;;-1:-1:-1;;;;;999:10:1;;770:18:2;;1015:58:1;;;-1:-1:-1;;1015:58:1;;;;;;;;;;;;;;-1:-1:-1;;;;;1015:58:1;-1:-1:-1;;;1015:58:1;;;999:75;;;1015:58;999:75;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:97;;;1093:10;1085:41;;;;-1:-1:-1;;;1085:41:1;;1364:2:2;1085:41:1;;;1346:21:2;1403:2;1383:18;;;1376:30;-1:-1:-1;;;1422:18:2;;;1415:48;1480:18;;1085:41:1;;;;;;;;;1219:11;;1236:46;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1236:46:1;-1:-1:-1;;;1236:46:1;;;1219:64;;1201:12;;-1:-1:-1;;;;;1219:11:1;;:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:83;;;1302:7;1294:32;;;;-1:-1:-1;;;1294:32:1;;1711:2:2;1294:32:1;;;1693:21:2;1750:2;1730:18;;;1723:30;-1:-1:-1;;;1769:18:2;;;1762:42;1821:18;;1294:32:1;1509:336:2;1294:32:1;1356:21;1392:10;;1388:106;;1427:5;;1419:31;;-1:-1:-1;;;;;1427:5:1;;;;1419:31;;;;;1443:6;;1427:5;1419:31;1427:5;1419:31;1443:6;1427:5;1419:31;;;;;;;;;;;;;;;;;;;;;1388:106;908:593;;;875:626::o;614:206::-;690:5;;-1:-1:-1;;;;;690:5:1;676:10;:19;668:42;;;;-1:-1:-1;;;668:42:1;;2052:2:2;668:42:1;;;2034:21:2;2091:2;2071:18;;;2064:30;-1:-1:-1;;;2110:18:2;;;2103:40;2160:18;;668:42:1;1850:334:2;668:42:1;739:1;729:7;:11;721:42;;;;-1:-1:-1;;;721:42:1;;2391:2:2;721:42:1;;;2373:21:2;2430:2;2410:18;;;2403:30;-1:-1:-1;;;2449:18:2;;;2442:48;2507:18;;721:42:1;2189:342:2;721:42:1;776:5;;791:11;;776:36;;-1:-1:-1;;;776:36:1;;-1:-1:-1;;;;;791:11:1;;;776:36;;;2710:51:2;2777:18;;;2770:34;;;776:5:1;;;:14;;2683:18:2;;776:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;614:206;:::o;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;856:301::-;985:3;1023:6;1017:13;1069:6;1062:4;1054:6;1050:17;1045:3;1039:37;1131:1;1095:16;;1120:13;;;-1:-1:-1;1095:16:2;856:301;-1:-1:-1;856:301:2:o;2815:277::-;2882:6;2935:2;2923:9;2914:7;2910:23;2906:32;2903:52;;;2951:1;2948;2941:12;2903:52;2983:9;2977:16;3036:5;3029:13;3022:21;3015:5;3012:32;3002:60;;3058:1;3055;3048:12;3002:60;3081:5;2815:277;-1:-1:-1;;;2815:277:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "236800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards()": "infinite",
								"deposit(uint256)": "infinite",
								"farmingPool()": "2368",
								"gasReserve()": "2390",
								"stETH()": "2345",
								"vault()": "2412"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 330,
									"end": 555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 330,
									"end": 555,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 330,
									"end": 555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 428,
									"end": 433,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 450,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 428,
									"end": 450,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 461,
									"end": 475,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 461,
									"end": 475,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 512,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 512,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 533,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 523,
									"end": 547,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 537,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 527,
									"end": 586,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 527,
									"end": 586,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 650,
									"end": 652,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 639,
									"end": 648,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 605,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 605,
									"end": 654,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 595,
									"end": 654,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 595,
									"end": 654,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1541,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f487a483858cd7d67c6298a8578eebed065bd899ac578918667418c58b2d9e1e64736f6c634300081a0033",
									".code": [
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "372500AB"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "B6B55F25"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "C1FE3E48"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "D75ACA19"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "EEA7570E"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "FBFA77CF"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 875,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 614,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 614,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 358,
											"end": 409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 358,
											"end": 409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 151,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 230,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 272,
											"end": 297,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 875,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 797,
											"end": 845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 978,
											"end": 993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 770,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 770,
											"end": 788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E1CDF89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11D85CC81C995C5D595CDD0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1230,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1219,
											"end": 1230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F4A2CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1219,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DB185A5B4819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1509,
											"end": 1845,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1377,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 875,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 614,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 690,
											"end": 695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 676,
											"end": 686,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 676,
											"end": 695,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 668,
											"end": 710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2071,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2071,
											"end": 2089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E481D985D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1850,
											"end": 2184,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 668,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 729,
											"end": 740,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 721,
											"end": 763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AEAE6E840C8CAE0DEE6D2E840E6E88AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2189,
											"end": 2531,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 721,
											"end": 763,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 776,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 776,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 1157,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 856,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 985,
											"end": 988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1030,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1076,
											"name": "MCOPY",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2815,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2933,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3042,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3062,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 3092,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 3092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/strategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"deposit(uint256)": "b6b55f25",
							"farmingPool()": "d75aca19",
							"gasReserve()": "eea7570e",
							"stETH()": "c1fe3e48",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_farmingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gasReserve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasReserve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategy.sol\":\"StETHStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/strategy.sol\":{\"keccak256\":\"0xf964a078be5567ed51c766580ba8007be6f98a374e22d85b9e410feddeffe6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96f5661e8428bccc4487c0c444fd4a56d8a4490241d79c12e433b074de23e1b5\",\"dweb:/ipfs/QmapRWByBEymnMsUFs1fcxgRR72qk7HYjgdxEzhYhEL7tY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/strategy.sol:StETHStrategy",
								"label": "stETH",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "contracts/strategy.sol:StETHStrategy",
								"label": "vault",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 87,
								"contract": "contracts/strategy.sol:StETHStrategy",
								"label": "farmingPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "contracts/strategy.sol:StETHStrategy",
								"label": "gasReserve",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"contracts/strategy.sol": {
				"ast": {
					"absolutePath": "contracts/strategy.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"StETHStrategy": [
							208
						]
					},
					"id": 209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 209,
							"sourceUnit": 78,
							"src": "61:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StETHStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "StETHStrategy",
							"nameLocation": "130:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c1fe3e48",
									"id": 83,
									"mutability": "mutable",
									"name": "stETH",
									"nameLocation": "165:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 208,
									"src": "151:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nameLocations": [
												"151:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "151:6:1"
										},
										"referencedDeclaration": 77,
										"src": "151:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 85,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "192:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 208,
									"src": "177:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d75aca19",
									"id": 87,
									"mutability": "mutable",
									"name": "farmingPool",
									"nameLocation": "219:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 208,
									"src": "204:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "204:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eea7570e",
									"id": 89,
									"mutability": "mutable",
									"name": "gasReserve",
									"nameLocation": "287:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 208,
									"src": "272:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "417:138:1",
										"statements": [
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "stETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "428:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 102,
																"name": "_stETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "443:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "436:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "436:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "428:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "428:22:1"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "461:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "469:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "461:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "461:14:1"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "farmingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "486:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "_farmingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "500:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "486:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "486:26:1"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 114,
														"name": "gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "523:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 115,
														"name": "_gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "536:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "523:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "523:24:1"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_stETH",
												"nameLocation": "350:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "342:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "366:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "358:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_farmingPool",
												"nameLocation": "382:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "374:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_gasReserve",
												"nameLocation": "404:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "396:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:75:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:0:1"
									},
									"scope": 208,
									"src": "330:225:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "657:163:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "676:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "680:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "676:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 127,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "676:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207661756c74",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "697:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e",
																"typeString": "literal_string \"Only vault\""
															},
															"value": "Only vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f33fab1608e7e01a5092ad6aea8b60cd8a1be346abb3b8c6473053862d74883e",
																"typeString": "literal_string \"Only vault\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "668:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "668:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "668:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "729:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "739:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "729:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f736974207374455448",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "742:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															},
															"value": "Must deposit stETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "721:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "721:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "721:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "farmingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "791:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 139,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "776:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "782:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "776:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "776:36:1"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "623:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:17:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:1"
									},
									"scope": 208,
									"src": "614:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "908:593:1",
										"statements": [
											{
												"assignments": [
													151,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "gasSuccess",
														"nameLocation": "983:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "978:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 150,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "978:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 160,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "726571756573744761732875696e7432353629",
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1039:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6e1cdf89567d2ee4d968f2261632aa9a4a27220c2cf22db0a18e498b7ffbfe49",
																		"typeString": "literal_string \"requestGas(uint256)\""
																	},
																	"value": "requestGas(uint256)"
																},
																{
																	"hexValue": "302e3031",
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1062:10:1",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000000000_by_1",
																		"typeString": "int_const 10000000000000000"
																	},
																	"value": "0.01"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_6e1cdf89567d2ee4d968f2261632aa9a4a27220c2cf22db0a18e498b7ffbfe49",
																		"typeString": "literal_string \"requestGas(uint256)\""
																	},
																	{
																		"typeIdentifier": "t_rational_10000000000000000_by_1",
																		"typeString": "int_const 10000000000000000"
																	}
																],
																"expression": {
																	"id": 154,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1015:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1019:19:1",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1015:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1015:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 152,
															"name": "gasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "999:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1010:4:1",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "999:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "999:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "977:97:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "gasSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1093:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4761732072657175657374206661696c6564",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1105:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846067e394bf75f6bfc8a4e4f7119e586d602ccab98bac65e5b96d4f2f225562",
																"typeString": "literal_string \"Gas request failed\""
															},
															"value": "Gas request failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846067e394bf75f6bfc8a4e4f7119e586d602ccab98bac65e5b96d4f2f225562",
																"typeString": "literal_string \"Gas request failed\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1085:41:1"
											},
											{
												"assignments": [
													167,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1206:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "1201:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 166,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1201:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 175,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "64697374726962757465526577617264732829",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1260:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6f4a2cd0a038cc87b823dd95537d0842688adaae0d56f79238e1f3766cddb7a0",
																		"typeString": "literal_string \"distributeRewards()\""
																	},
																	"value": "distributeRewards()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_6f4a2cd0a038cc87b823dd95537d0842688adaae0d56f79238e1f3766cddb7a0",
																		"typeString": "literal_string \"distributeRewards()\""
																	}
																],
																"expression": {
																	"id": 170,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1236:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1240:19:1",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1236:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1236:46:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 168,
															"name": "farmingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1219:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1231:4:1",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1219:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1200:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1302:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d206661696c6564",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1311:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164",
																"typeString": "literal_string \"Claim failed\""
															},
															"value": "Claim failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164",
																"typeString": "literal_string \"Claim failed\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1294:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1294:32:1"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "earned",
														"nameLocation": "1347:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "1339:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 185,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1364:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StETHStrategy_$208",
																	"typeString": "contract StETHStrategy"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_StETHStrategy_$208",
																	"typeString": "contract StETHStrategy"
																}
															],
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1356:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1356:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1356:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1370:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1356:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1339:38:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "1392:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1401:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1392:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "IfStatement",
												"src": "1388:106:1",
												"trueBody": {
													"id": 200,
													"nodeType": "Block",
													"src": "1404:90:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 197,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "1443:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 194,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1427:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1419:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 192,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1419:8:1",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1419:14:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1434:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1419:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1419:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 199,
															"nodeType": "ExpressionStatement",
															"src": "1419:31:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "884:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:1"
									},
									"scope": 208,
									"src": "875:626:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1536:2:1",
										"statements": []
									},
									"id": 207,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1516:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:0:1"
									},
									"scope": 208,
									"src": "1509:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 209,
							"src": "121:1420:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1510:1"
				},
				"id": 1
			}
		}
	}
}