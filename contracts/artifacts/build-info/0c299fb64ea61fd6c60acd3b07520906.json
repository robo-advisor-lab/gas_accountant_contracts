{
	"id": "0c299fb64ea61fd6c60acd3b07520906",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/vault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract YieldVault is ERC20 {\r\n    IERC20 public stETH;  // Reference to Lido-style stETH\r\n    address public strategy;  // Strategy contract for yield farming\r\n\r\n    constructor(address _stETH, address _strategy)\r\n        ERC20(\"Yield Vault Staked ETH\", \"yvSTETH\")\r\n    {\r\n        stETH = IERC20(_stETH);\r\n        strategy = _strategy;\r\n    }\r\n\r\n    // Deposit stETH & mint yvSTETH\r\n    function deposit(uint256 _amount) external {\r\n        require(_amount > 0, \"Must deposit stETH\");\r\n\r\n        stETH.transferFrom(msg.sender, address(this), _amount);\r\n        _mint(msg.sender, _amount); // 1:1 for simplicity\r\n\r\n        // Deploy stETH into the strategy for farming\r\n        stETH.transfer(strategy, _amount);\r\n    }\r\n\r\n    // Withdraw stETH\r\n    function withdraw(uint256 _amount) external {\r\n        require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\");\r\n\r\n        _burn(msg.sender, _amount);\r\n        stETH.transfer(msg.sender, _amount); // Return stETH to user\r\n    }\r\n\r\n    // Harvest & auto-compound yield\r\n    function harvest() external {\r\n        (bool success, ) = strategy.call(abi.encodeWithSignature(\"claimRewards()\"));\r\n        require(success, \"Harvest failed\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vault.sol": {
				"YieldVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vault.sol\":178:1380  contract YieldVault is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/vault.sol\":346:522  constructor(address _stETH, address _strategy)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x16\n  dup2\n  mstore\n  0x20\n  add\n  0x5969656c64205661756c74205374616b65642045544800000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xcb, 0x0f2eca6a88aa89)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"contracts/vault.sol\":461:466  stETH */\n  0x05\n    /* \"contracts/vault.sol\":461:483  stETH = IERC20(_stETH) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/vault.sol\":494:502  strategy */\n  0x06\n    /* \"contracts/vault.sol\":494:514  strategy = _strategy */\n  dup1\n  sload\n  swap4\n  swap1\n  swap5\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/vault.sol\":178:1380  contract YieldVault is ERC20 {... */\n  jump(tag_18)\n    /* \"#utility.yul\":14:191   */\ntag_12:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:621   */\ntag_13:\n    /* \"#utility.yul\":555:565   */\n  0x4e487b71\n    /* \"#utility.yul\":550:553   */\n  0xe0\n    /* \"#utility.yul\":546:566   */\n  shl\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":536:567   */\n  mstore\n    /* \"#utility.yul\":586:590   */\n  0x41\n    /* \"#utility.yul\":583:584   */\n  0x04\n    /* \"#utility.yul\":576:591   */\n  mstore\n    /* \"#utility.yul\":610:614   */\n  0x24\n    /* \"#utility.yul\":607:608   */\n  0x00\n    /* \"#utility.yul\":600:615   */\n  revert\n    /* \"#utility.yul\":626:1006   */\ntag_14:\n    /* \"#utility.yul\":705:706   */\n  0x01\n    /* \"#utility.yul\":701:713   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":748:760   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":769:830   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":823:827   */\n  0x7f\n    /* \"#utility.yul\":815:821   */\n  dup3\n    /* \"#utility.yul\":811:828   */\n  and\n    /* \"#utility.yul\":801:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":769:830   */\ntag_27:\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":868:874   */\n  dup3\n    /* \"#utility.yul\":865:879   */\n  lt\n    /* \"#utility.yul\":845:863   */\n  dup2\n    /* \"#utility.yul\":842:880   */\n  sub\n    /* \"#utility.yul\":839:1000   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":922:932   */\n  0x4e487b71\n    /* \"#utility.yul\":917:920   */\n  0xe0\n    /* \"#utility.yul\":913:933   */\n  shl\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":903:934   */\n  mstore\n    /* \"#utility.yul\":957:961   */\n  0x22\n    /* \"#utility.yul\":954:955   */\n  0x04\n    /* \"#utility.yul\":947:962   */\n  mstore\n    /* \"#utility.yul\":985:989   */\n  0x24\n    /* \"#utility.yul\":982:983   */\n  0x00\n    /* \"#utility.yul\":975:990   */\n  revert\n    /* \"#utility.yul\":839:1000   */\ntag_28:\n  pop\n    /* \"#utility.yul\":626:1006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1137:1655   */\ntag_16:\n    /* \"#utility.yul\":1239:1241   */\n  0x1f\n    /* \"#utility.yul\":1234:1237   */\n  dup3\n    /* \"#utility.yul\":1231:1242   */\n  gt\n    /* \"#utility.yul\":1228:1649   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1275:1280   */\n  dup1\n    /* \"#utility.yul\":1272:1273   */\n  0x00\n    /* \"#utility.yul\":1265:1281   */\n  mstore\n    /* \"#utility.yul\":1319:1323   */\n  0x20\n    /* \"#utility.yul\":1316:1317   */\n  0x00\n    /* \"#utility.yul\":1306:1324   */\n  keccak256\n    /* \"#utility.yul\":1389:1391   */\n  0x1f\n    /* \"#utility.yul\":1377:1387   */\n  dup5\n    /* \"#utility.yul\":1373:1392   */\n  add\n    /* \"#utility.yul\":1370:1371   */\n  0x05\n    /* \"#utility.yul\":1366:1393   */\n  shr\n    /* \"#utility.yul\":1360:1364   */\n  dup2\n    /* \"#utility.yul\":1356:1394   */\n  add\n    /* \"#utility.yul\":1425:1429   */\n  0x20\n    /* \"#utility.yul\":1413:1423   */\n  dup6\n    /* \"#utility.yul\":1410:1430   */\n  lt\n    /* \"#utility.yul\":1407:1454   */\n  iszero\n  tag_32\n  jumpi\n  pop\n    /* \"#utility.yul\":1448:1452   */\n  dup1\n    /* \"#utility.yul\":1407:1454   */\ntag_32:\n    /* \"#utility.yul\":1503:1505   */\n  0x1f\n    /* \"#utility.yul\":1498:1501   */\n  dup5\n    /* \"#utility.yul\":1494:1506   */\n  add\n    /* \"#utility.yul\":1491:1492   */\n  0x05\n    /* \"#utility.yul\":1487:1507   */\n  shr\n    /* \"#utility.yul\":1481:1485   */\n  dup3\n    /* \"#utility.yul\":1477:1508   */\n  add\n    /* \"#utility.yul\":1467:1508   */\n  swap2\n  pop\n    /* \"#utility.yul\":1558:1639   */\ntag_33:\n    /* \"#utility.yul\":1576:1578   */\n  dup2\n    /* \"#utility.yul\":1569:1574   */\n  dup2\n    /* \"#utility.yul\":1566:1579   */\n  lt\n    /* \"#utility.yul\":1558:1639   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1621:1637   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1602:1603   */\n  0x01\n    /* \"#utility.yul\":1591:1604   */\n  add\n    /* \"#utility.yul\":1558:1639   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":1562:1565   */\n  pop\n  pop\n    /* \"#utility.yul\":1228:1649   */\ntag_31:\n    /* \"#utility.yul\":1137:1655   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1831:3130   */\ntag_8:\n    /* \"#utility.yul\":1951:1961   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1973:2003   */\n  dup2\n  gt\n    /* \"#utility.yul\":1970:2026   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2006:2024   */\n  tag_39\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":2035:2132   */\n  tag_40\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2085:2123   */\n  tag_41\n    /* \"#utility.yul\":2117:2121   */\n  dup5\n    /* \"#utility.yul\":2111:2122   */\n  sload\n    /* \"#utility.yul\":2085:2123   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2079:2083   */\n  dup5\n    /* \"#utility.yul\":2035:2132   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2212:2214   */\n  0x1f\n    /* \"#utility.yul\":2201:2215   */\n  dup3\n  gt\n    /* \"#utility.yul\":2229:2230   */\n  0x01\n    /* \"#utility.yul\":2224:2873   */\n  dup2\n  eq\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2917:2918   */\n  0x00\n    /* \"#utility.yul\":2934:2940   */\n  dup4\n    /* \"#utility.yul\":2931:3020   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2986:3005   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2980:3006   */\n  mload\n    /* \"#utility.yul\":2931:3020   */\ntag_44:\n  not(0x00)\n    /* \"#utility.yul\":1788:1789   */\n  0x03\n    /* \"#utility.yul\":1784:1795   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1780:1804   */\n  shr\n    /* \"#utility.yul\":1776:1805   */\n  not\n    /* \"#utility.yul\":1766:1806   */\n  and\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1808:1819   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1763:1820   */\n  or\n    /* \"#utility.yul\":3033:3114   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2194:3124   */\n  jump(tag_35)\n    /* \"#utility.yul\":2224:2873   */\ntag_43:\n    /* \"#utility.yul\":1084:1085   */\n  0x00\n    /* \"#utility.yul\":1077:1091   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x20\n    /* \"#utility.yul\":1108:1126   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2260:2280   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2378:2600   */\ntag_47:\n    /* \"#utility.yul\":2392:2399   */\n  dup3\n    /* \"#utility.yul\":2389:2390   */\n  dup2\n    /* \"#utility.yul\":2386:2400   */\n  lt\n    /* \"#utility.yul\":2378:2600   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2474:2493   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2468:2494   */\n  mload\n    /* \"#utility.yul\":2453:2495   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2581:2585   */\n  0x20\n    /* \"#utility.yul\":2566:2586   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2534:2535   */\n  0x01\n    /* \"#utility.yul\":2522:2536   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2408:2420   */\n  add\n    /* \"#utility.yul\":2378:2600   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":2382:2385   */\n  pop\n    /* \"#utility.yul\":2628:2634   */\n  dup5\n    /* \"#utility.yul\":2619:2626   */\n  dup3\n    /* \"#utility.yul\":2616:2635   */\n  lt\n    /* \"#utility.yul\":2613:2814   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2689:2708   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2683:2709   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2772:2773   */\n  0x03\n    /* \"#utility.yul\":2768:2782   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2787   */\n  0xf8\n    /* \"#utility.yul\":2764:2788   */\n  and\n    /* \"#utility.yul\":2760:2797   */\n  shr\n    /* \"#utility.yul\":2756:2798   */\n  not\n    /* \"#utility.yul\":2741:2799   */\n  and\n    /* \"#utility.yul\":2726:2800   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2613:2814   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2860:2861   */\n  0x01\n    /* \"#utility.yul\":2844:2858   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2840:2862   */\n  add\n    /* \"#utility.yul\":2827:2863   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1831:3130   */\n  jump\t// out\ntag_18:\n    /* \"contracts/vault.sol\":178:1380  contract YieldVault is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vault.sol\":178:1380  contract YieldVault is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc1fe3e48\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa8c62e76\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"contracts/vault.sol\":929:1164  function withdraw(uint256 _amount) external {... */\n    tag_7:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2046:2082   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":1904:2088   */\n      jump\n        /* \"contracts/vault.sol\":1210:1377  function harvest() external {... */\n    tag_9:\n      tag_39\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_20\n      tag_55\n      jump\t// in\n        /* \"contracts/vault.sol\":274:297  address public strategy */\n    tag_12:\n      sload(0x06)\n      tag_57\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_57:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"contracts/vault.sol\":274:297  address public strategy */\n      tag_22\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"contracts/vault.sol\":567:898  function deposit(uint256 _amount) external {... */\n    tag_14:\n      tag_39\n      tag_66\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"contracts/vault.sol\":214:233  IERC20 public stETH */\n    tag_15:\n      sload(0x05)\n      tag_57\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_30\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_84:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_94:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault.sol\":929:1164  function withdraw(uint256 _amount) external {... */\n    tag_42:\n        /* \"contracts/vault.sol\":1002:1012  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/vault.sol\":1017:1024  _amount */\n      dup2\n      gt\n        /* \"contracts/vault.sol\":992:1024  balanceOf(msg.sender) >= _amount */\n      iszero\n        /* \"contracts/vault.sol\":984:1047  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3566:3568   */\n      0x20\n        /* \"contracts/vault.sol\":984:1047  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3548:3569   */\n      mstore\n        /* \"#utility.yul\":3605:3607   */\n      0x12\n        /* \"#utility.yul\":3585:3603   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3578:3608   */\n      mstore\n      shl(0x73, 0x09cdee840cadcdeeaced040f2eca6a88aa89)\n        /* \"#utility.yul\":3624:3642   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3617:3665   */\n      mstore\n        /* \"#utility.yul\":3682:3700   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":984:1047  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/vault.sol\":1060:1086  _burn(msg.sender, _amount) */\n      tag_101\n        /* \"contracts/vault.sol\":1066:1076  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":1078:1085  _amount */\n      dup3\n        /* \"contracts/vault.sol\":1060:1065  _burn */\n      tag_102\n        /* \"contracts/vault.sol\":1060:1086  _burn(msg.sender, _amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/vault.sol\":1097:1102  stETH */\n      sload(0x05)\n        /* \"contracts/vault.sol\":1097:1132  stETH.transfer(msg.sender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":1112:1122  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":1097:1132  stETH.transfer(msg.sender, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3885:3936   */\n      mstore\n        /* \"#utility.yul\":3952:3970   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3945:3979   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":1097:1102  stETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":1097:1111  stETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3858:3876   */\n      0x44\n      add\n        /* \"contracts/vault.sol\":1097:1132  stETH.transfer(msg.sender, _amount) */\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts/vault.sol\":929:1164  function withdraw(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/vault.sol\":1210:1377  function harvest() external {... */\n    tag_48:\n        /* \"contracts/vault.sol\":1268:1276  strategy */\n      sload(0x06)\n        /* \"contracts/vault.sol\":1282:1323  abi.encodeWithSignature(\"claimRewards()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x372500ab)\n      or\n      swap1\n      mstore\n        /* \"contracts/vault.sol\":1268:1324  strategy.call(abi.encodeWithSignature(\"claimRewards()\")) */\n      swap1\n      mload\n        /* \"contracts/vault.sol\":1250:1262  bool success */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":1268:1276  strategy */\n      and\n      swap2\n        /* \"contracts/vault.sol\":1268:1324  strategy.call(abi.encodeWithSignature(\"claimRewards()\")) */\n      tag_111\n      swap2\n      tag_112\n      jump\t// in\n    tag_111:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_115\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_114)\n    tag_115:\n      0x60\n      swap2\n      pop\n    tag_114:\n      pop\n        /* \"contracts/vault.sol\":1249:1324  (bool success, ) = strategy.call(abi.encodeWithSignature(\"claimRewards()\")) */\n      pop\n      swap1\n      pop\n        /* \"contracts/vault.sol\":1343:1350  success */\n      dup1\n        /* \"contracts/vault.sol\":1335:1369  require(success, \"Harvest failed\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4780:4782   */\n      0x20\n        /* \"contracts/vault.sol\":1335:1369  require(success, \"Harvest failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4762:4783   */\n      mstore\n        /* \"#utility.yul\":4819:4821   */\n      0x0e\n        /* \"#utility.yul\":4799:4817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4792:4822   */\n      mstore\n      shl(0x92, 0x12185c9d995cdd0819985a5b1959)\n        /* \"#utility.yul\":4838:4856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4831:4875   */\n      mstore\n        /* \"#utility.yul\":4892:4910   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":1335:1369  require(success, \"Harvest failed\") */\n      tag_99\n        /* \"#utility.yul\":4578:4916   */\n      jump\n        /* \"contracts/vault.sol\":1335:1369  require(success, \"Harvest failed\") */\n    tag_116:\n        /* \"contracts/vault.sol\":1238:1377  {... */\n      pop\n        /* \"contracts/vault.sol\":1210:1377  function harvest() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/vault.sol\":567:898  function deposit(uint256 _amount) external {... */\n    tag_67:\n        /* \"contracts/vault.sol\":639:640  0 */\n      0x00\n        /* \"contracts/vault.sol\":629:636  _amount */\n      dup2\n        /* \"contracts/vault.sol\":629:640  _amount > 0 */\n      gt\n        /* \"contracts/vault.sol\":621:663  require(_amount > 0, \"Must deposit stETH\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5123:5125   */\n      0x20\n        /* \"contracts/vault.sol\":621:663  require(_amount > 0, \"Must deposit stETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5105:5126   */\n      mstore\n        /* \"#utility.yul\":5162:5164   */\n      0x12\n        /* \"#utility.yul\":5142:5160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5135:5165   */\n      mstore\n      shl(0x73, 0x09aeae6e840c8cae0dee6d2e840e6e88aa89)\n        /* \"#utility.yul\":5181:5199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5174:5222   */\n      mstore\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":621:663  require(_amount > 0, \"Must deposit stETH\") */\n      tag_99\n        /* \"#utility.yul\":4921:5263   */\n      jump\n        /* \"contracts/vault.sol\":621:663  require(_amount > 0, \"Must deposit stETH\") */\n    tag_130:\n        /* \"contracts/vault.sol\":676:681  stETH */\n      sload(0x05)\n        /* \"contracts/vault.sol\":676:730  stETH.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":695:705  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":676:730  stETH.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5470:5521   */\n      mstore\n        /* \"contracts/vault.sol\":715:719  this */\n      address\n        /* \"#utility.yul\":5537:5555   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5530:5590   */\n      mstore\n        /* \"#utility.yul\":5606:5624   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5599:5633   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":676:681  stETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":676:694  stETH.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5443:5461   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":676:730  stETH.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/vault.sol\":741:767  _mint(msg.sender, _amount) */\n      tag_138\n        /* \"contracts/vault.sol\":747:757  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":759:766  _amount */\n      dup3\n        /* \"contracts/vault.sol\":741:746  _mint */\n      tag_139\n        /* \"contracts/vault.sol\":741:767  _mint(msg.sender, _amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/vault.sol\":857:862  stETH */\n      sload(0x05)\n        /* \"contracts/vault.sol\":872:880  strategy */\n      sload(0x06)\n        /* \"contracts/vault.sol\":857:890  stETH.transfer(strategy, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":872:880  strategy */\n      swap2\n      dup3\n      and\n        /* \"contracts/vault.sol\":857:890  stETH.transfer(strategy, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3885:3936   */\n      mstore\n        /* \"#utility.yul\":3952:3970   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3945:3979   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/vault.sol\":857:862  stETH */\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":857:871  stETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3858:3876   */\n      0x44\n      add\n        /* \"contracts/vault.sol\":857:890  stETH.transfer(strategy, _amount) */\n      tag_103\n        /* \"#utility.yul\":3711:3985   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5864:5896   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5846:5897   */\n      mstore\n        /* \"#utility.yul\":5913:5931   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5906:5940   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5956:5974   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5949:5983   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5819:5837   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_99\n        /* \"#utility.yul\":5644:5989   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_177\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_182\n      swap1\n      pop\n      jump\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5864:5896   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5846:5897   */\n      mstore\n        /* \"#utility.yul\":5913:5931   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5906:5940   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5956:5974   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5949:5983   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5819:5837   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_99\n        /* \"#utility.yul\":5644:5989   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_186)\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_187\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_23:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_188:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_192:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_26:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_194:\n        /* \"#utility.yul\":783:812   */\n      tag_195\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_188\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_36:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_199:\n        /* \"#utility.yul\":1479:1508   */\n      tag_200\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_188\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_201\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_188\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1673:1899   */\n    tag_41:\n        /* \"#utility.yul\":1732:1738   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1805   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      dup1\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1753:1805   */\n    tag_203:\n      pop\n        /* \"#utility.yul\":1846:1869   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1673:1899   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_51:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      dup1\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_206:\n        /* \"#utility.yul\":2244:2273   */\n      tag_207\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_188\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2234:2273   */\n      swap4\n        /* \"#utility.yul\":2093:2279   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2714:2974   */\n    tag_74:\n        /* \"#utility.yul\":2782:2788   */\n      0x00\n        /* \"#utility.yul\":2790:2796   */\n      dup1\n        /* \"#utility.yul\":2843:2845   */\n      0x40\n        /* \"#utility.yul\":2831:2840   */\n      dup4\n        /* \"#utility.yul\":2822:2829   */\n      dup6\n        /* \"#utility.yul\":2818:2841   */\n      sub\n        /* \"#utility.yul\":2814:2846   */\n      slt\n        /* \"#utility.yul\":2811:2863   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2859:2860   */\n      0x00\n        /* \"#utility.yul\":2856:2857   */\n      dup1\n        /* \"#utility.yul\":2849:2861   */\n      revert\n        /* \"#utility.yul\":2811:2863   */\n    tag_211:\n        /* \"#utility.yul\":2882:2911   */\n      tag_212\n        /* \"#utility.yul\":2901:2910   */\n      dup4\n        /* \"#utility.yul\":2882:2911   */\n      tag_188\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2872:2911   */\n      swap2\n      pop\n        /* \"#utility.yul\":2930:2968   */\n      tag_213\n        /* \"#utility.yul\":2964:2966   */\n      0x20\n        /* \"#utility.yul\":2953:2962   */\n      dup5\n        /* \"#utility.yul\":2949:2967   */\n      add\n        /* \"#utility.yul\":2930:2968   */\n      tag_188\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2920:2968   */\n      swap1\n      pop\n        /* \"#utility.yul\":2714:2974   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2979:3359   */\n    tag_79:\n        /* \"#utility.yul\":3058:3059   */\n      0x01\n        /* \"#utility.yul\":3054:3066   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3101:3113   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3122:3183   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3176:3180   */\n      0x7f\n        /* \"#utility.yul\":3168:3174   */\n      dup3\n        /* \"#utility.yul\":3164:3181   */\n      and\n        /* \"#utility.yul\":3154:3181   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3183   */\n    tag_215:\n        /* \"#utility.yul\":3229:3231   */\n      0x20\n        /* \"#utility.yul\":3221:3227   */\n      dup3\n        /* \"#utility.yul\":3218:3232   */\n      lt\n        /* \"#utility.yul\":3198:3216   */\n      dup2\n        /* \"#utility.yul\":3195:3233   */\n      sub\n        /* \"#utility.yul\":3192:3353   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3275:3285   */\n      0x4e487b71\n        /* \"#utility.yul\":3270:3273   */\n      0xe0\n        /* \"#utility.yul\":3266:3286   */\n      shl\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3256:3287   */\n      mstore\n        /* \"#utility.yul\":3310:3314   */\n      0x22\n        /* \"#utility.yul\":3307:3308   */\n      0x04\n        /* \"#utility.yul\":3300:3315   */\n      mstore\n        /* \"#utility.yul\":3338:3342   */\n      0x24\n        /* \"#utility.yul\":3335:3336   */\n      0x00\n        /* \"#utility.yul\":3328:3343   */\n      revert\n        /* \"#utility.yul\":3192:3353   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":2979:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4267   */\n    tag_108:\n        /* \"#utility.yul\":4057:4063   */\n      0x00\n        /* \"#utility.yul\":4110:4112   */\n      0x20\n        /* \"#utility.yul\":4098:4107   */\n      dup3\n        /* \"#utility.yul\":4089:4096   */\n      dup5\n        /* \"#utility.yul\":4085:4108   */\n      sub\n        /* \"#utility.yul\":4081:4113   */\n      slt\n        /* \"#utility.yul\":4078:4130   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":4126:4127   */\n      0x00\n        /* \"#utility.yul\":4123:4124   */\n      dup1\n        /* \"#utility.yul\":4116:4128   */\n      revert\n        /* \"#utility.yul\":4078:4130   */\n    tag_220:\n        /* \"#utility.yul\":4158:4167   */\n      dup2\n        /* \"#utility.yul\":4152:4168   */\n      mload\n        /* \"#utility.yul\":4211:4216   */\n      dup1\n        /* \"#utility.yul\":4204:4217   */\n      iszero\n        /* \"#utility.yul\":4197:4218   */\n      iszero\n        /* \"#utility.yul\":4190:4195   */\n      dup2\n        /* \"#utility.yul\":4187:4219   */\n      eq\n        /* \"#utility.yul\":4177:4237   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4233:4234   */\n      0x00\n        /* \"#utility.yul\":4230:4231   */\n      dup1\n        /* \"#utility.yul\":4223:4235   */\n      revert\n        /* \"#utility.yul\":4272:4573   */\n    tag_112:\n        /* \"#utility.yul\":4401:4404   */\n      0x00\n        /* \"#utility.yul\":4439:4445   */\n      dup3\n        /* \"#utility.yul\":4433:4446   */\n      mload\n        /* \"#utility.yul\":4485:4491   */\n      dup1\n        /* \"#utility.yul\":4478:4482   */\n      0x20\n        /* \"#utility.yul\":4470:4476   */\n      dup6\n        /* \"#utility.yul\":4466:4483   */\n      add\n        /* \"#utility.yul\":4461:4464   */\n      dup5\n        /* \"#utility.yul\":4455:4492   */\n      mcopy\n        /* \"#utility.yul\":4547:4548   */\n      0x00\n        /* \"#utility.yul\":4511:4527   */\n      swap3\n      add\n        /* \"#utility.yul\":4536:4549   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4511:4527   */\n      swap2\n        /* \"#utility.yul\":4272:4573   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6216   */\n    tag_181:\n        /* \"#utility.yul\":6059:6068   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6080:6090   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6077:6210   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":6132:6142   */\n      0x4e487b71\n        /* \"#utility.yul\":6127:6130   */\n      0xe0\n        /* \"#utility.yul\":6123:6143   */\n      shl\n        /* \"#utility.yul\":6120:6121   */\n      0x00\n        /* \"#utility.yul\":6113:6144   */\n      mstore\n        /* \"#utility.yul\":6167:6171   */\n      0x11\n        /* \"#utility.yul\":6164:6165   */\n      0x04\n        /* \"#utility.yul\":6157:6172   */\n      mstore\n        /* \"#utility.yul\":6195:6199   */\n      0x24\n        /* \"#utility.yul\":6192:6193   */\n      0x00\n        /* \"#utility.yul\":6185:6200   */\n      revert\n\n    auxdata: 0xa264697066735822122089fe414b9e230e865eccecbd1afbd10c1b385f78fc05c8dd6843df5b00c8afd764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_818": {
									"entryPoint": null,
									"id": 818,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3132:6",
										"nodeType": "YulBlock",
										"src": "0:3132:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											},
											{
												"body": {
													"nativeSrc": "526:95:6",
													"nodeType": "YulBlock",
													"src": "526:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "543:1:6",
																		"nodeType": "YulLiteral",
																		"src": "543:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "550:3:6",
																				"nodeType": "YulLiteral",
																				"src": "550:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:10:6",
																				"nodeType": "YulLiteral",
																				"src": "555:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:6"
																		},
																		"nativeSrc": "546:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:6"
																},
																"nativeSrc": "536:31:6",
																"nodeType": "YulFunctionCall",
																"src": "536:31:6"
															},
															"nativeSrc": "536:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "536:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "583:1:6",
																		"nodeType": "YulLiteral",
																		"src": "583:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:4:6",
																		"nodeType": "YulLiteral",
																		"src": "586:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:6"
																},
																"nativeSrc": "576:15:6",
																"nodeType": "YulFunctionCall",
																"src": "576:15:6"
															},
															"nativeSrc": "576:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "576:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "607:1:6",
																		"nodeType": "YulLiteral",
																		"src": "607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:4:6",
																		"nodeType": "YulLiteral",
																		"src": "610:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "600:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:6"
																},
																"nativeSrc": "600:15:6",
																"nodeType": "YulFunctionCall",
																"src": "600:15:6"
															},
															"nativeSrc": "600:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "600:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "494:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:6"
											},
											{
												"body": {
													"nativeSrc": "681:325:6",
													"nodeType": "YulBlock",
													"src": "681:325:6",
													"statements": [
														{
															"nativeSrc": "691:22:6",
															"nodeType": "YulAssignment",
															"src": "691:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "705:1:6",
																		"nodeType": "YulLiteral",
																		"src": "705:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "708:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "701:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:6"
																},
																"nativeSrc": "701:12:6",
																"nodeType": "YulFunctionCall",
																"src": "701:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "691:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:6"
																}
															]
														},
														{
															"nativeSrc": "722:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "722:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "752:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "752:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "758:1:6",
																		"nodeType": "YulLiteral",
																		"src": "758:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "748:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:6"
																},
																"nativeSrc": "748:12:6",
																"nodeType": "YulFunctionCall",
																"src": "748:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "726:18:6",
																	"nodeType": "YulTypedName",
																	"src": "726:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "799:31:6",
																"nodeType": "YulBlock",
																"src": "799:31:6",
																"statements": [
																	{
																		"nativeSrc": "801:27:6",
																		"nodeType": "YulAssignment",
																		"src": "801:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "815:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "823:4:6",
																					"nodeType": "YulLiteral",
																					"src": "823:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "811:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:3:6"
																			},
																			"nativeSrc": "811:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "811:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "801:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "779:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "779:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "772:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:6"
																},
																"nativeSrc": "772:26:6",
																"nodeType": "YulFunctionCall",
																"src": "772:26:6"
															},
															"nativeSrc": "769:61:6",
															"nodeType": "YulIf",
															"src": "769:61:6"
														},
														{
															"body": {
																"nativeSrc": "889:111:6",
																"nodeType": "YulBlock",
																"src": "889:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:6",
																					"nodeType": "YulLiteral",
																					"src": "910:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "917:3:6",
																							"nodeType": "YulLiteral",
																							"src": "917:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "922:10:6",
																							"nodeType": "YulLiteral",
																							"src": "922:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "913:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:6"
																					},
																					"nativeSrc": "913:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "913:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			},
																			"nativeSrc": "903:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "903:31:6"
																		},
																		"nativeSrc": "903:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:6",
																					"nodeType": "YulLiteral",
																					"src": "954:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:4:6",
																					"nodeType": "YulLiteral",
																					"src": "957:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "947:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:6"
																			},
																			"nativeSrc": "947:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "947:15:6"
																		},
																		"nativeSrc": "947:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "982:1:6",
																					"nodeType": "YulLiteral",
																					"src": "982:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "985:4:6",
																					"nodeType": "YulLiteral",
																					"src": "985:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "975:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:6"
																			},
																			"nativeSrc": "975:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "975:15:6"
																		},
																		"nativeSrc": "975:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "845:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "845:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "868:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "876:2:6",
																				"nodeType": "YulLiteral",
																				"src": "876:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "865:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "865:2:6"
																		},
																		"nativeSrc": "865:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "865:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "842:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "842:2:6"
																},
																"nativeSrc": "842:38:6",
																"nodeType": "YulFunctionCall",
																"src": "842:38:6"
															},
															"nativeSrc": "839:161:6",
															"nodeType": "YulIf",
															"src": "839:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "626:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "661:4:6",
														"nodeType": "YulTypedName",
														"src": "661:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "670:6:6",
														"nodeType": "YulTypedName",
														"src": "670:6:6",
														"type": ""
													}
												],
												"src": "626:380:6"
											},
											{
												"body": {
													"nativeSrc": "1067:65:6",
													"nodeType": "YulBlock",
													"src": "1067:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1084:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1084:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1087:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1077:6:6"
																},
																"nativeSrc": "1077:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1077:14:6"
															},
															"nativeSrc": "1077:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1077:14:6"
														},
														{
															"nativeSrc": "1100:26:6",
															"nodeType": "YulAssignment",
															"src": "1100:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1108:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1108:9:6"
																},
																"nativeSrc": "1108:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1108:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1100:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1011:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:6",
														"nodeType": "YulTypedName",
														"src": "1050:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1058:4:6",
														"nodeType": "YulTypedName",
														"src": "1058:4:6",
														"type": ""
													}
												],
												"src": "1011:121:6"
											},
											{
												"body": {
													"nativeSrc": "1218:437:6",
													"nodeType": "YulBlock",
													"src": "1218:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1251:398:6",
																"nodeType": "YulBlock",
																"src": "1251:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1272:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1275:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1275:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1265:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:6"
																			},
																			"nativeSrc": "1265:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1265:16:6"
																		},
																		"nativeSrc": "1265:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:16:6"
																	},
																	{
																		"nativeSrc": "1294:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1294:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1319:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1319:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1306:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:6"
																			},
																			"nativeSrc": "1306:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1298:4:6",
																				"nodeType": "YulTypedName",
																				"src": "1298:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1337:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1337:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1360:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1360:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1370:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1370:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1377:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1377:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1389:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1389:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1373:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1373:3:6"
																							},
																							"nativeSrc": "1373:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1373:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1366:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1366:3:6"
																					},
																					"nativeSrc": "1366:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1366:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1356:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1356:3:6"
																			},
																			"nativeSrc": "1356:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1341:11:6",
																				"nodeType": "YulTypedName",
																				"src": "1341:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1431:23:6",
																			"nodeType": "YulBlock",
																			"src": "1431:23:6",
																			"statements": [
																				{
																					"nativeSrc": "1433:19:6",
																					"nodeType": "YulAssignment",
																					"src": "1433:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1448:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1448:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1433:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "1433:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1413:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "1413:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1425:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1410:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1410:2:6"
																			},
																			"nativeSrc": "1410:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:20:6"
																		},
																		"nativeSrc": "1407:47:6",
																		"nodeType": "YulIf",
																		"src": "1407:47:6"
																	},
																	{
																		"nativeSrc": "1467:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1467:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1481:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1481:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1491:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1491:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1498:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1498:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1503:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1503:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1494:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1494:3:6"
																							},
																							"nativeSrc": "1494:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1494:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1487:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1487:3:6"
																					},
																					"nativeSrc": "1487:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1487:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1477:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1477:3:6"
																			},
																			"nativeSrc": "1477:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1477:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1471:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1471:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1521:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1521:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1534:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1534:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1525:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1525:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1619:20:6",
																			"nodeType": "YulBlock",
																			"src": "1619:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1628:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1628:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1635:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1635:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1621:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1621:6:6"
																						},
																						"nativeSrc": "1621:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1621:16:6"
																					},
																					"nativeSrc": "1621:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1621:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1569:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1569:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1576:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1576:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1566:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:6"
																			},
																			"nativeSrc": "1566:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1566:13:6"
																		},
																		"nativeSrc": "1558:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1580:26:6",
																			"nodeType": "YulBlock",
																			"src": "1580:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1582:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1582:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1595:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1595:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1602:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1602:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1591:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:6"
																						},
																						"nativeSrc": "1591:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1582:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1582:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1562:3:6",
																			"nodeType": "YulBlock",
																			"src": "1562:3:6",
																			"statements": []
																		},
																		"src": "1558:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1234:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1231:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:6"
																},
																"nativeSrc": "1231:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:11:6"
															},
															"nativeSrc": "1228:421:6",
															"nodeType": "YulIf",
															"src": "1228:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1137:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1190:5:6",
														"nodeType": "YulTypedName",
														"src": "1190:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1197:3:6",
														"nodeType": "YulTypedName",
														"src": "1197:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1202:10:6",
														"nodeType": "YulTypedName",
														"src": "1202:10:6",
														"type": ""
													}
												],
												"src": "1137:518:6"
											},
											{
												"body": {
													"nativeSrc": "1745:81:6",
													"nodeType": "YulBlock",
													"src": "1745:81:6",
													"statements": [
														{
															"nativeSrc": "1755:65:6",
															"nodeType": "YulAssignment",
															"src": "1755:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1770:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1770:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1788:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1788:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1791:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1791:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1784:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1784:3:6"
																								},
																								"nativeSrc": "1784:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1784:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1801:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1801:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1797:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1797:3:6"
																								},
																								"nativeSrc": "1797:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1797:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1780:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:6"
																						},
																						"nativeSrc": "1780:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1776:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:6"
																				},
																				"nativeSrc": "1776:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1766:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:6"
																		},
																		"nativeSrc": "1766:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1815:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1815:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:6"
																		},
																		"nativeSrc": "1808:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1763:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:6"
																},
																"nativeSrc": "1763:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1763:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1755:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1660:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1722:4:6",
														"nodeType": "YulTypedName",
														"src": "1722:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1728:3:6",
														"nodeType": "YulTypedName",
														"src": "1728:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1736:4:6",
														"nodeType": "YulTypedName",
														"src": "1736:4:6",
														"type": ""
													}
												],
												"src": "1660:166:6"
											},
											{
												"body": {
													"nativeSrc": "1927:1203:6",
													"nodeType": "YulBlock",
													"src": "1927:1203:6",
													"statements": [
														{
															"nativeSrc": "1937:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1937:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1957:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1951:5:6"
																},
																"nativeSrc": "1951:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1951:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1941:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1941:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:22:6",
																"nodeType": "YulBlock",
																"src": "2004:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2006:16:6"
																			},
																			"nativeSrc": "2006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2006:18:6"
																		},
																		"nativeSrc": "2006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1992:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1992:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1996:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1996:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1988:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:6"
																				},
																				"nativeSrc": "1988:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1988:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2000:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:6"
																		},
																		"nativeSrc": "1984:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1973:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1973:2:6"
																},
																"nativeSrc": "1973:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1973:30:6"
															},
															"nativeSrc": "1970:56:6",
															"nodeType": "YulIf",
															"src": "1970:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2079:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2079:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2117:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2117:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2111:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2111:5:6"
																				},
																				"nativeSrc": "2111:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2085:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "2085:25:6"
																		},
																		"nativeSrc": "2085:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2035:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2035:43:6"
																},
																"nativeSrc": "2035:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2035:97:6"
															},
															"nativeSrc": "2035:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2035:97:6"
														},
														{
															"nativeSrc": "2141:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2141:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2158:1:6",
																"nodeType": "YulLiteral",
																"src": "2158:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2145:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2145:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2168:17:6",
															"nodeType": "YulAssignment",
															"src": "2168:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2181:4:6",
																"nodeType": "YulLiteral",
																"src": "2181:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2168:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2168:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2231:642:6",
																		"nodeType": "YulBlock",
																		"src": "2231:642:6",
																		"statements": [
																			{
																				"nativeSrc": "2245:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2245:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2264:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2264:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2276:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2276:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2272:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2272:3:6"
																							},
																							"nativeSrc": "2272:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2272:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2260:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:6"
																					},
																					"nativeSrc": "2260:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2249:7:6",
																						"nodeType": "YulTypedName",
																						"src": "2249:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2293:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2293:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2337:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2337:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2307:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "2307:29:6"
																					},
																					"nativeSrc": "2307:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2307:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2297:6:6",
																						"nodeType": "YulTypedName",
																						"src": "2297:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2355:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2355:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2364:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2359:1:6",
																						"nodeType": "YulTypedName",
																						"src": "2359:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2435:165:6",
																					"nodeType": "YulBlock",
																					"src": "2435:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2460:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2460:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2478:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2478:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2483:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2483:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2474:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2474:3:6"
																												},
																												"nativeSrc": "2474:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2474:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2468:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2468:5:6"
																										},
																										"nativeSrc": "2468:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2468:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2453:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2453:6:6"
																								},
																								"nativeSrc": "2453:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2453:42:6"
																							},
																							"nativeSrc": "2453:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2453:42:6"
																						},
																						{
																							"nativeSrc": "2512:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2512:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2526:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2526:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2534:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2534:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2522:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:6"
																								},
																								"nativeSrc": "2522:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2522:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2512:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2512:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2553:33:6",
																							"nodeType": "YulAssignment",
																							"src": "2553:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2570:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2570:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2581:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2581:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2566:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:6"
																								},
																								"nativeSrc": "2566:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2566:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2553:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2553:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2389:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "2389:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2392:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2392:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2386:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:6"
																					},
																					"nativeSrc": "2386:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2386:14:6"
																				},
																				"nativeSrc": "2378:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2401:21:6",
																					"nodeType": "YulBlock",
																					"src": "2401:21:6",
																					"statements": [
																						{
																							"nativeSrc": "2403:17:6",
																							"nodeType": "YulAssignment",
																							"src": "2403:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2412:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "2412:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2415:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2415:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2408:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2408:3:6"
																								},
																								"nativeSrc": "2408:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2408:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2403:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "2403:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2382:3:6",
																					"nodeType": "YulBlock",
																					"src": "2382:3:6",
																					"statements": []
																				},
																				"src": "2378:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2648:166:6",
																					"nodeType": "YulBlock",
																					"src": "2648:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2666:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2666:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2693:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2693:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2698:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2698:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2689:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2689:3:6"
																										},
																										"nativeSrc": "2689:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2689:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2683:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2683:5:6"
																								},
																								"nativeSrc": "2683:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2683:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2670:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2670:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2733:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2733:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2745:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2745:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2772:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2772:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2775:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2775:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2768:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2768:3:6"
																																		},
																																		"nativeSrc": "2768:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2768:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2784:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2784:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2764:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2764:3:6"
																																},
																																"nativeSrc": "2764:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2764:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2794:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2794:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2790:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2790:3:6"
																																},
																																"nativeSrc": "2790:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2790:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2760:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2760:3:6"
																														},
																														"nativeSrc": "2760:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2760:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2756:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2756:3:6"
																												},
																												"nativeSrc": "2756:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2756:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2741:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:6"
																										},
																										"nativeSrc": "2741:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2726:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2726:6:6"
																								},
																								"nativeSrc": "2726:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2726:74:6"
																							},
																							"nativeSrc": "2726:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2726:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2619:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2619:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2628:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2628:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2616:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2616:2:6"
																					},
																					"nativeSrc": "2616:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2616:19:6"
																				},
																				"nativeSrc": "2613:201:6",
																				"nodeType": "YulIf",
																				"src": "2613:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2834:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2834:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2848:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2848:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2851:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2851:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2844:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2844:3:6"
																									},
																									"nativeSrc": "2844:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2844:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2860:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2860:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2840:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2840:3:6"
																							},
																							"nativeSrc": "2840:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2840:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2827:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2827:6:6"
																					},
																					"nativeSrc": "2827:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2827:36:6"
																				},
																				"nativeSrc": "2827:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2827:36:6"
																			}
																		]
																	},
																	"nativeSrc": "2224:649:6",
																	"nodeType": "YulCase",
																	"src": "2224:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2229:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2890:234:6",
																		"nodeType": "YulBlock",
																		"src": "2890:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2904:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2904:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2917:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2917:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2908:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2908:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2953:67:6",
																					"nodeType": "YulBlock",
																					"src": "2953:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2971:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2971:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2990:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2990:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2995:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2995:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2986:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2986:3:6"
																										},
																										"nativeSrc": "2986:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2986:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2980:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2980:5:6"
																								},
																								"nativeSrc": "2980:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2980:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2971:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2971:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2934:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2934:6:6"
																				},
																				"nativeSrc": "2931:89:6",
																				"nodeType": "YulIf",
																				"src": "2931:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3040:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3040:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3099:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3099:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3106:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3106:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3046:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "3046:52:6"
																							},
																							"nativeSrc": "3046:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3046:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3033:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3033:6:6"
																					},
																					"nativeSrc": "3033:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3033:81:6"
																				},
																				"nativeSrc": "3033:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3033:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2882:242:6",
																	"nodeType": "YulCase",
																	"src": "2882:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2204:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2201:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:6"
																},
																"nativeSrc": "2201:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2201:14:6"
															},
															"nativeSrc": "2194:930:6",
															"nodeType": "YulSwitch",
															"src": "2194:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1831:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1912:4:6",
														"nodeType": "YulTypedName",
														"src": "1912:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1918:3:6",
														"nodeType": "YulTypedName",
														"src": "1918:3:6",
														"type": ""
													}
												],
												"src": "1831:1299:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610d79380380610d7983398101604081905261002e916100f3565b6040518060400160405280601681526020017f5969656c64205661756c74205374616b65642045544800000000000000000000815250604051806040016040528060078152602001660f2eca6a88aa8960cb1b815250816003908161009391906101bc565b5060046100a082826101bc565b5050600580546001600160a01b039485166001600160a01b031991821617909155600680549390941692169190911790915550610276565b80516001600160a01b03811681146100ee575f80fd5b919050565b5f8060408385031215610104575f80fd5b61010d836100d8565b915061011b602084016100d8565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061014c57607f821691505b60208210810361016a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101b757805f5260205f20601f840160051c810160208510156101955750805b601f840160051c820191505b818110156101b4575f81556001016101a1565b50505b505050565b81516001600160401b038111156101d5576101d5610124565b6101e9816101e38454610138565b84610170565b6020601f82116001811461021b575f83156102045750848201515b5f19600385901b1c1916600184901b1784556101b4565b5f84815260208120601f198516915b8281101561024a578785015182556020948501946001909201910161022a565b508482101561026757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610af6806102835f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c806370a0823111610088578063a9059cbb11610063578063a9059cbb146101d6578063b6b55f25146101e9578063c1fe3e48146101fc578063dd62ed3e1461020f575f80fd5b806370a082311461017b57806395d89b41146101a3578063a8c62e76146101ab575f80fd5b806323b872dd116100c357806323b872dd1461013c5780632e1a7d4d1461014f578063313ce567146101645780634641257d14610173575f80fd5b806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a575b5f80fd5b6100f1610247565b6040516100fe919061091a565b60405180910390f35b61011a61011536600461096a565b6102d7565b60405190151581526020016100fe565b6002545b6040519081526020016100fe565b61011a61014a366004610992565b6102f0565b61016261015d3660046109cc565b610313565b005b604051601281526020016100fe565b6101626103ec565b61012e6101893660046109e3565b6001600160a01b03165f9081526020819052604090205490565b6100f16104b1565b6006546101be906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b61011a6101e436600461096a565b6104c0565b6101626101f73660046109cc565b6104cd565b6005546101be906001600160a01b031681565b61012e61021d366004610a03565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461025690610a34565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610a34565b80156102cd5780601f106102a4576101008083540402835291602001916102cd565b820191905f5260205f20905b8154815290600101906020018083116102b057829003601f168201915b5050505050905090565b5f336102e48185856105cf565b60019150505b92915050565b5f336102fd8582856105e1565b61030885858561065d565b506001949350505050565b335f9081526020819052604090205481111561036b5760405162461bcd60e51b815260206004820152601260248201527109cdee840cadcdeeaced040f2eca6a88aa8960731b60448201526064015b60405180910390fd5b61037533826106ba565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b6020604051808303815f875af11580156103c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e89190610a6c565b5050565b60065460408051600481526024810182526020810180516001600160e01b031663372500ab60e01b17905290515f926001600160a01b03169161042e91610a8b565b5f604051808303815f865af19150503d805f8114610467576040519150601f19603f3d011682016040523d82523d5f602084013e61046c565b606091505b50509050806104ae5760405162461bcd60e51b815260206004820152600e60248201526d12185c9d995cdd0819985a5b195960921b6044820152606401610362565b50565b60606004805461025690610a34565b5f336102e481858561065d565b5f81116105115760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b6044820152606401610362565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610565573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105899190610a6c565b5061059433826106ee565b60055460065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016103a8565b6105dc8383836001610722565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610657578181101561064957604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610362565b61065784848484035f610722565b50505050565b6001600160a01b03831661068657604051634b637e8f60e11b81525f6004820152602401610362565b6001600160a01b0382166106af5760405163ec442f0560e01b81525f6004820152602401610362565b6105dc8383836107f4565b6001600160a01b0382166106e357604051634b637e8f60e11b81525f6004820152602401610362565b6103e8825f836107f4565b6001600160a01b0382166107175760405163ec442f0560e01b81525f6004820152602401610362565b6103e85f83836107f4565b6001600160a01b03841661074b5760405163e602df0560e01b81525f6004820152602401610362565b6001600160a01b03831661077457604051634a1406b160e11b81525f6004820152602401610362565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561065757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e691815260200190565b60405180910390a350505050565b6001600160a01b03831661081e578060025f8282546108139190610aa1565b9091555061088e9050565b6001600160a01b0383165f90815260208190526040902054818110156108705760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610362565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108aa576002805482900390556108c8565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161090d91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610965575f80fd5b919050565b5f806040838503121561097b575f80fd5b6109848361094f565b946020939093013593505050565b5f805f606084860312156109a4575f80fd5b6109ad8461094f565b92506109bb6020850161094f565b929592945050506040919091013590565b5f602082840312156109dc575f80fd5b5035919050565b5f602082840312156109f3575f80fd5b6109fc8261094f565b9392505050565b5f8060408385031215610a14575f80fd5b610a1d8361094f565b9150610a2b6020840161094f565b90509250929050565b600181811c90821680610a4857607f821691505b602082108103610a6657634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610a7c575f80fd5b815180151581146109fc575f80fd5b5f82518060208501845e5f920191825250919050565b808201808211156102ea57634e487b7160e01b5f52601160045260245ffdfea264697066735822122089fe414b9e230e865eccecbd1afbd10c1b385f78fc05c8dd6843df5b00c8afd764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD79 CODESIZE SUB DUP1 PUSH2 0xD79 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5969656C64205661756C74205374616B65642045544800000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xF2ECA6A88AA89 PUSH1 0xCB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xA0 DUP3 DUP3 PUSH2 0x1BC JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE POP PUSH2 0x276 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10D DUP4 PUSH2 0xD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B PUSH1 0x20 DUP5 ADD PUSH2 0xD8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B7 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x195 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D5 PUSH2 0x124 JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x1E3 DUP5 SLOAD PUSH2 0x138 JUMP JUMPDEST DUP5 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21B JUMPI PUSH0 DUP4 ISZERO PUSH2 0x204 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1B4 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x22A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x267 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAF6 DUP1 PUSH2 0x283 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x1AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x162 PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x256 SWAP1 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xA34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP2 DUP6 DUP6 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FD DUP6 DUP3 DUP6 PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x308 DUP6 DUP6 DUP6 PUSH2 0x65D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9CDEE840CADCDEEACED040F2ECA6A88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x375 CALLER DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x372500AB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x42E SWAP2 PUSH2 0xA8B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185C9D995CDD0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x256 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP2 DUP6 DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST POP PUSH2 0x594 CALLER DUP3 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x722 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x657 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x657 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x722 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH0 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x3E8 PUSH0 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x657 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x88E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8AA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x965 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x984 DUP4 PUSH2 0x94F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AD DUP5 PUSH2 0x94F JUMP JUMPDEST SWAP3 POP PUSH2 0x9BB PUSH1 0x20 DUP6 ADD PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA1D DUP4 PUSH2 0x94F JUMP JUMPDEST SWAP2 POP PUSH2 0xA2B PUSH1 0x20 DUP5 ADD PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA48 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9FC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 INVALID COINBASE 0x4B SWAP15 0x23 0xE DUP7 MCOPY 0xCC 0xEC 0xBD BYTE 0xFB 0xD1 0xC SHL CODESIZE PUSH0 PUSH25 0xFC05C8DD6843DF5B00C8AFD764736F6C634300081A00330000 ",
							"sourceMap": "178:1202:5:-:0;;;346:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:1;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;461:5:5::1;:22:::0;;-1:-1:-1;;;;;461:22:5;;::::1;-1:-1:-1::0;;;;;;461:22:5;;::::1;;::::0;;;494:8:::1;:20:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;178:1202:5;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:518::-;1239:2;1234:3;1231:11;1228:421;;;1275:5;1272:1;1265:16;1319:4;1316:1;1306:18;1389:2;1377:10;1373:19;1370:1;1366:27;1360:4;1356:38;1425:4;1413:10;1410:20;1407:47;;;-1:-1:-1;1448:4:6;1407:47;1503:2;1498:3;1494:12;1491:1;1487:20;1481:4;1477:31;1467:41;;1558:81;1576:2;1569:5;1566:13;1558:81;;;1635:1;1621:16;;1602:1;1591:13;1558:81;;;1562:3;;1228:421;1137:518;;;:::o;1831:1299::-;1951:10;;-1:-1:-1;;;;;1973:30:6;;1970:56;;;2006:18;;:::i;:::-;2035:97;2125:6;2085:38;2117:4;2111:11;2085:38;:::i;:::-;2079:4;2035:97;:::i;:::-;2181:4;2212:2;2201:14;;2229:1;2224:649;;;;2917:1;2934:6;2931:89;;;-1:-1:-1;2986:19:6;;;2980:26;2931:89;-1:-1:-1;;1788:1:6;1784:11;;;1780:24;1776:29;1766:40;1812:1;1808:11;;;1763:57;3033:81;;2194:930;;2224:649;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2260:20:6;;;2378:222;2392:7;2389:1;2386:14;2378:222;;;2474:19;;;2468:26;2453:42;;2581:4;2566:20;;;;2534:1;2522:14;;;;2408:12;2378:222;;;2382:3;2628:6;2619:7;2616:19;2613:201;;;2689:19;;;2683:26;-1:-1:-1;;2772:1:6;2768:14;;;2784:3;2764:24;2760:37;2756:42;2741:58;2726:74;;2613:201;-1:-1:-1;;;;2860:1:6;2844:14;;;2840:22;2827:36;;-1:-1:-1;1831:1299:6:o;:::-;178:1202:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1487,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1826,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 1722,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 1774,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1505,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1629,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2036,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 727,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_856": {
									"entryPoint": 1229,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@harvest_905": {
									"entryPoint": 1004,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 583,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stETH_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@strategy_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1201,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 752,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1216,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_886": {
									"entryPoint": 787,
									"id": 886,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49dc11f970ab90405405e88db8796593046612f8277dbff056ef799656f025cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6218:6",
										"nodeType": "YulBlock",
										"src": "0:6218:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:6",
													"nodeType": "YulBlock",
													"src": "135:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:6"
																		},
																		"nativeSrc": "260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:6"
																		},
																		"nativeSrc": "280:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:6"
																},
																"nativeSrc": "254:50:6",
																"nodeType": "YulFunctionCall",
																"src": "254:50:6"
															},
															"nativeSrc": "254:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:6"
																				},
																				"nativeSrc": "324:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:6",
																				"nodeType": "YulLiteral",
																				"src": "348:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:6"
																		},
																		"nativeSrc": "320:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:6"
																},
																"nativeSrc": "313:42:6",
																"nodeType": "YulFunctionCall",
																"src": "313:42:6"
															},
															"nativeSrc": "313:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:6"
														},
														{
															"nativeSrc": "364:62:6",
															"nodeType": "YulAssignment",
															"src": "364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:6"
																						},
																						"nativeSrc": "395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:6",
																								"nodeType": "YulLiteral",
																								"src": "416:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:6"
																						},
																						"nativeSrc": "412:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nativeSrc": "391:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:6"
																		},
																		"nativeSrc": "376:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "423:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:6"
																},
																"nativeSrc": "372:54:6",
																"nodeType": "YulFunctionCall",
																"src": "372:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:418:6"
											},
											{
												"body": {
													"nativeSrc": "486:124:6",
													"nodeType": "YulBlock",
													"src": "486:124:6",
													"statements": [
														{
															"nativeSrc": "496:29:6",
															"nodeType": "YulAssignment",
															"src": "496:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:6"
																},
																"nativeSrc": "505:20:6",
																"nodeType": "YulFunctionCall",
																"src": "505:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:6",
																"nodeType": "YulBlock",
																"src": "588:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "597:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "600:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:6"
																			},
																			"nativeSrc": "590:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:6"
																		},
																		"nativeSrc": "590:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:6",
																										"nodeType": "YulLiteral",
																										"src": "573:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:6",
																										"nodeType": "YulLiteral",
																										"src": "578:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:6"
																								},
																								"nativeSrc": "569:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:6",
																								"nodeType": "YulLiteral",
																								"src": "582:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:6"
																						},
																						"nativeSrc": "565:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:6"
																				},
																				"nativeSrc": "554:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:6"
																		},
																		"nativeSrc": "544:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:6"
																},
																"nativeSrc": "537:50:6",
																"nodeType": "YulFunctionCall",
																"src": "537:50:6"
															},
															"nativeSrc": "534:70:6",
															"nodeType": "YulIf",
															"src": "534:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:6",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:6",
														"nodeType": "YulTypedName",
														"src": "476:5:6",
														"type": ""
													}
												],
												"src": "437:173:6"
											},
											{
												"body": {
													"nativeSrc": "702:213:6",
													"nodeType": "YulBlock",
													"src": "702:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:6",
																"nodeType": "YulBlock",
																"src": "748:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:6",
																					"nodeType": "YulLiteral",
																					"src": "757:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:6",
																					"nodeType": "YulLiteral",
																					"src": "760:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:6"
																			},
																			"nativeSrc": "750:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:6"
																		},
																		"nativeSrc": "750:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:6"
																		},
																		"nativeSrc": "719:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "744:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:6"
																},
																"nativeSrc": "715:32:6",
																"nodeType": "YulFunctionCall",
																"src": "715:32:6"
															},
															"nativeSrc": "712:52:6",
															"nodeType": "YulIf",
															"src": "712:52:6"
														},
														{
															"nativeSrc": "773:39:6",
															"nodeType": "YulAssignment",
															"src": "773:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:6"
																},
																"nativeSrc": "783:29:6",
																"nodeType": "YulFunctionCall",
																"src": "783:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																}
															]
														},
														{
															"nativeSrc": "821:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:6",
																"nodeType": "YulLiteral",
																"src": "834:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:6",
																	"nodeType": "YulTypedName",
																	"src": "825:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:6",
															"nodeType": "YulAssignment",
															"src": "844:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:6",
																				"nodeType": "YulLiteral",
																				"src": "881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:6"
																		},
																		"nativeSrc": "866:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:6"
																},
																"nativeSrc": "853:32:6",
																"nodeType": "YulFunctionCall",
																"src": "853:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:6"
																}
															]
														},
														{
															"nativeSrc": "894:15:6",
															"nodeType": "YulAssignment",
															"src": "894:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:6",
																"nodeType": "YulIdentifier",
																"src": "904:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:6",
														"nodeType": "YulTypedName",
														"src": "660:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:6",
														"nodeType": "YulTypedName",
														"src": "671:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:6",
														"nodeType": "YulTypedName",
														"src": "683:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:6",
														"nodeType": "YulTypedName",
														"src": "691:6:6",
														"type": ""
													}
												],
												"src": "615:300:6"
											},
											{
												"body": {
													"nativeSrc": "1015:92:6",
													"nodeType": "YulBlock",
													"src": "1015:92:6",
													"statements": [
														{
															"nativeSrc": "1025:26:6",
															"nodeType": "YulAssignment",
															"src": "1025:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:6"
																},
																"nativeSrc": "1033:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:6"
																				},
																				"nativeSrc": "1085:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:6"
																		},
																		"nativeSrc": "1078:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:6"
																},
																"nativeSrc": "1060:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:6"
															},
															"nativeSrc": "1060:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:6",
														"nodeType": "YulTypedName",
														"src": "984:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:6",
														"nodeType": "YulTypedName",
														"src": "995:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:6",
														"nodeType": "YulTypedName",
														"src": "1006:4:6",
														"type": ""
													}
												],
												"src": "920:187:6"
											},
											{
												"body": {
													"nativeSrc": "1213:76:6",
													"nodeType": "YulBlock",
													"src": "1213:76:6",
													"statements": [
														{
															"nativeSrc": "1223:26:6",
															"nodeType": "YulAssignment",
															"src": "1223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:6"
																},
																"nativeSrc": "1231:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:6"
																},
																"nativeSrc": "1258:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:6"
															},
															"nativeSrc": "1258:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:6",
														"nodeType": "YulTypedName",
														"src": "1182:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:6",
														"nodeType": "YulTypedName",
														"src": "1193:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:6",
														"nodeType": "YulTypedName",
														"src": "1204:4:6",
														"type": ""
													}
												],
												"src": "1112:177:6"
											},
											{
												"body": {
													"nativeSrc": "1398:270:6",
													"nodeType": "YulBlock",
													"src": "1398:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:6",
																"nodeType": "YulBlock",
																"src": "1444:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:6"
																			},
																			"nativeSrc": "1446:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:6"
																		},
																		"nativeSrc": "1446:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:6"
																		},
																		"nativeSrc": "1415:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:6"
																},
																"nativeSrc": "1411:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:6"
															},
															"nativeSrc": "1408:52:6",
															"nodeType": "YulIf",
															"src": "1408:52:6"
														},
														{
															"nativeSrc": "1469:39:6",
															"nodeType": "YulAssignment",
															"src": "1469:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:6"
																},
																"nativeSrc": "1479:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:6"
																}
															]
														},
														{
															"nativeSrc": "1517:48:6",
															"nodeType": "YulAssignment",
															"src": "1517:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:6"
																		},
																		"nativeSrc": "1546:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:6"
																},
																"nativeSrc": "1527:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:6"
																}
															]
														},
														{
															"nativeSrc": "1574:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:6",
																"nodeType": "YulLiteral",
																"src": "1587:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:6",
															"nodeType": "YulAssignment",
															"src": "1597:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:6"
																		},
																		"nativeSrc": "1619:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:6"
																},
																"nativeSrc": "1606:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:6"
																}
															]
														},
														{
															"nativeSrc": "1647:15:6",
															"nodeType": "YulAssignment",
															"src": "1647:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:6",
																"nodeType": "YulIdentifier",
																"src": "1657:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:6",
														"nodeType": "YulTypedName",
														"src": "1348:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:6",
														"nodeType": "YulTypedName",
														"src": "1359:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:6",
														"nodeType": "YulTypedName",
														"src": "1371:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:6",
														"nodeType": "YulTypedName",
														"src": "1379:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:6",
														"nodeType": "YulTypedName",
														"src": "1387:6:6",
														"type": ""
													}
												],
												"src": "1294:374:6"
											},
											{
												"body": {
													"nativeSrc": "1743:156:6",
													"nodeType": "YulBlock",
													"src": "1743:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1789:16:6",
																"nodeType": "YulBlock",
																"src": "1789:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1801:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1801:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1791:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1791:6:6"
																			},
																			"nativeSrc": "1791:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1791:12:6"
																		},
																		"nativeSrc": "1791:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1764:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1760:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:6"
																		},
																		"nativeSrc": "1760:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1756:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:6"
																},
																"nativeSrc": "1756:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:6"
															},
															"nativeSrc": "1753:52:6",
															"nodeType": "YulIf",
															"src": "1753:52:6"
														},
														{
															"nativeSrc": "1814:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1814:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1827:1:6",
																"nodeType": "YulLiteral",
																"src": "1827:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1818:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1818:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1837:32:6",
															"nodeType": "YulAssignment",
															"src": "1837:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1859:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1859:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1846:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1846:12:6"
																},
																"nativeSrc": "1846:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1846:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1837:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1837:5:6"
																}
															]
														},
														{
															"nativeSrc": "1878:15:6",
															"nodeType": "YulAssignment",
															"src": "1878:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1888:5:6",
																"nodeType": "YulIdentifier",
																"src": "1888:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1673:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1709:9:6",
														"nodeType": "YulTypedName",
														"src": "1709:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1720:7:6",
														"nodeType": "YulTypedName",
														"src": "1720:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1732:6:6",
														"nodeType": "YulTypedName",
														"src": "1732:6:6",
														"type": ""
													}
												],
												"src": "1673:226:6"
											},
											{
												"body": {
													"nativeSrc": "2001:87:6",
													"nodeType": "YulBlock",
													"src": "2001:87:6",
													"statements": [
														{
															"nativeSrc": "2011:26:6",
															"nodeType": "YulAssignment",
															"src": "2011:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2023:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2023:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2034:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:6"
																},
																"nativeSrc": "2019:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2019:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2011:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2053:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2068:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2076:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2076:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2064:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:6"
																		},
																		"nativeSrc": "2064:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2046:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:6"
																},
																"nativeSrc": "2046:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2046:36:6"
															},
															"nativeSrc": "2046:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2046:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1904:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1970:9:6",
														"nodeType": "YulTypedName",
														"src": "1970:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1981:6:6",
														"nodeType": "YulTypedName",
														"src": "1981:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1992:4:6",
														"nodeType": "YulTypedName",
														"src": "1992:4:6",
														"type": ""
													}
												],
												"src": "1904:184:6"
											},
											{
												"body": {
													"nativeSrc": "2163:116:6",
													"nodeType": "YulBlock",
													"src": "2163:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:6",
																"nodeType": "YulBlock",
																"src": "2209:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:6"
																			},
																			"nativeSrc": "2211:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:6"
																		},
																		"nativeSrc": "2211:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:6"
																},
																"nativeSrc": "2176:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:6"
															},
															"nativeSrc": "2173:52:6",
															"nodeType": "YulIf",
															"src": "2173:52:6"
														},
														{
															"nativeSrc": "2234:39:6",
															"nodeType": "YulAssignment",
															"src": "2234:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:6"
																},
																"nativeSrc": "2244:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:6",
														"nodeType": "YulTypedName",
														"src": "2129:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:6",
														"nodeType": "YulTypedName",
														"src": "2140:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:6",
														"nodeType": "YulTypedName",
														"src": "2152:6:6",
														"type": ""
													}
												],
												"src": "2093:186:6"
											},
											{
												"body": {
													"nativeSrc": "2385:102:6",
													"nodeType": "YulBlock",
													"src": "2385:102:6",
													"statements": [
														{
															"nativeSrc": "2395:26:6",
															"nodeType": "YulAssignment",
															"src": "2395:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:6"
																},
																"nativeSrc": "2403:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:6"
																						},
																						"nativeSrc": "2464:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:6"
																				},
																				"nativeSrc": "2460:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:6"
																		},
																		"nativeSrc": "2448:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:6"
																},
																"nativeSrc": "2430:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:6"
															},
															"nativeSrc": "2430:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:6",
														"nodeType": "YulTypedName",
														"src": "2354:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:6",
														"nodeType": "YulTypedName",
														"src": "2365:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:6",
														"nodeType": "YulTypedName",
														"src": "2376:4:6",
														"type": ""
													}
												],
												"src": "2284:203:6"
											},
											{
												"body": {
													"nativeSrc": "2607:102:6",
													"nodeType": "YulBlock",
													"src": "2607:102:6",
													"statements": [
														{
															"nativeSrc": "2617:26:6",
															"nodeType": "YulAssignment",
															"src": "2617:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2629:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2625:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:6"
																},
																"nativeSrc": "2625:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2625:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2617:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2617:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2659:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2674:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2674:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2690:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2690:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2695:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2695:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2686:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2686:3:6"
																						},
																						"nativeSrc": "2686:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2686:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2699:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2699:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2682:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2682:3:6"
																				},
																				"nativeSrc": "2682:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2682:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2670:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:6"
																		},
																		"nativeSrc": "2670:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:6"
																},
																"nativeSrc": "2652:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2652:51:6"
															},
															"nativeSrc": "2652:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2652:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "2492:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2576:9:6",
														"nodeType": "YulTypedName",
														"src": "2576:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2587:6:6",
														"nodeType": "YulTypedName",
														"src": "2587:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2598:4:6",
														"nodeType": "YulTypedName",
														"src": "2598:4:6",
														"type": ""
													}
												],
												"src": "2492:217:6"
											},
											{
												"body": {
													"nativeSrc": "2801:173:6",
													"nodeType": "YulBlock",
													"src": "2801:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2847:16:6",
																"nodeType": "YulBlock",
																"src": "2847:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2856:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2856:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2859:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2849:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:6"
																			},
																			"nativeSrc": "2849:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2849:12:6"
																		},
																		"nativeSrc": "2849:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2849:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2822:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2831:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2831:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2818:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:6"
																		},
																		"nativeSrc": "2818:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2818:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2843:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2843:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2814:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:6"
																},
																"nativeSrc": "2814:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2814:32:6"
															},
															"nativeSrc": "2811:52:6",
															"nodeType": "YulIf",
															"src": "2811:52:6"
														},
														{
															"nativeSrc": "2872:39:6",
															"nodeType": "YulAssignment",
															"src": "2872:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2901:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2882:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2882:18:6"
																},
																"nativeSrc": "2882:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2882:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2872:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:6"
																}
															]
														},
														{
															"nativeSrc": "2920:48:6",
															"nodeType": "YulAssignment",
															"src": "2920:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2953:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2964:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2964:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:6"
																		},
																		"nativeSrc": "2949:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2949:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2930:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2930:18:6"
																},
																"nativeSrc": "2930:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2930:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2714:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2759:9:6",
														"nodeType": "YulTypedName",
														"src": "2759:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2770:7:6",
														"nodeType": "YulTypedName",
														"src": "2770:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2782:6:6",
														"nodeType": "YulTypedName",
														"src": "2782:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2790:6:6",
														"nodeType": "YulTypedName",
														"src": "2790:6:6",
														"type": ""
													}
												],
												"src": "2714:260:6"
											},
											{
												"body": {
													"nativeSrc": "3034:325:6",
													"nodeType": "YulBlock",
													"src": "3034:325:6",
													"statements": [
														{
															"nativeSrc": "3044:22:6",
															"nodeType": "YulAssignment",
															"src": "3044:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3058:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3058:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3061:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3061:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3054:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:6"
																},
																"nativeSrc": "3054:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3054:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:6"
																}
															]
														},
														{
															"nativeSrc": "3075:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3075:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3105:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3105:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3111:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3101:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:6"
																},
																"nativeSrc": "3101:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3101:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3079:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3079:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3152:31:6",
																"nodeType": "YulBlock",
																"src": "3152:31:6",
																"statements": [
																	{
																		"nativeSrc": "3154:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3154:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3168:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3168:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3176:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3176:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3164:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3164:3:6"
																			},
																			"nativeSrc": "3164:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3164:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3154:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3154:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3132:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3132:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:6"
																},
																"nativeSrc": "3125:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3125:26:6"
															},
															"nativeSrc": "3122:61:6",
															"nodeType": "YulIf",
															"src": "3122:61:6"
														},
														{
															"body": {
																"nativeSrc": "3242:111:6",
																"nodeType": "YulBlock",
																"src": "3242:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3270:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3270:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3275:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3275:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3266:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3266:3:6"
																					},
																					"nativeSrc": "3266:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3266:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3256:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3256:6:6"
																			},
																			"nativeSrc": "3256:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3256:31:6"
																		},
																		"nativeSrc": "3256:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3256:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3307:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3307:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3310:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3310:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3300:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3300:6:6"
																			},
																			"nativeSrc": "3300:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3300:15:6"
																		},
																		"nativeSrc": "3300:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3300:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3335:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3335:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3338:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3338:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3328:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3328:6:6"
																			},
																			"nativeSrc": "3328:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3328:15:6"
																		},
																		"nativeSrc": "3328:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3328:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3198:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3198:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3221:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3229:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3229:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3218:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3218:2:6"
																		},
																		"nativeSrc": "3218:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3218:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3195:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3195:2:6"
																},
																"nativeSrc": "3195:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3195:38:6"
															},
															"nativeSrc": "3192:161:6",
															"nodeType": "YulIf",
															"src": "3192:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2979:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3014:4:6",
														"nodeType": "YulTypedName",
														"src": "3014:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3023:6:6",
														"nodeType": "YulTypedName",
														"src": "3023:6:6",
														"type": ""
													}
												],
												"src": "2979:380:6"
											},
											{
												"body": {
													"nativeSrc": "3538:168:6",
													"nodeType": "YulBlock",
													"src": "3538:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3555:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3555:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3548:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3548:6:6"
																},
																"nativeSrc": "3548:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3548:21:6"
															},
															"nativeSrc": "3548:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3548:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3589:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3589:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3600:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3600:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3585:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3585:3:6"
																		},
																		"nativeSrc": "3585:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3585:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3605:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3605:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3578:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3578:6:6"
																},
																"nativeSrc": "3578:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3578:30:6"
															},
															"nativeSrc": "3578:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3578:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3628:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3639:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3639:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3624:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3624:3:6"
																		},
																		"nativeSrc": "3624:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:18:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682079765354455448",
																		"kind": "string",
																		"nativeSrc": "3644:20:6",
																		"nodeType": "YulLiteral",
																		"src": "3644:20:6",
																		"type": "",
																		"value": "Not enough yvSTETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:6"
																},
																"nativeSrc": "3617:48:6",
																"nodeType": "YulFunctionCall",
																"src": "3617:48:6"
															},
															"nativeSrc": "3617:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "3617:48:6"
														},
														{
															"nativeSrc": "3674:26:6",
															"nodeType": "YulAssignment",
															"src": "3674:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3686:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3697:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:6"
																},
																"nativeSrc": "3682:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3682:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3674:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3674:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3364:342:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3515:9:6",
														"nodeType": "YulTypedName",
														"src": "3515:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3529:4:6",
														"nodeType": "YulTypedName",
														"src": "3529:4:6",
														"type": ""
													}
												],
												"src": "3364:342:6"
											},
											{
												"body": {
													"nativeSrc": "3840:145:6",
													"nodeType": "YulBlock",
													"src": "3840:145:6",
													"statements": [
														{
															"nativeSrc": "3850:26:6",
															"nodeType": "YulAssignment",
															"src": "3850:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3862:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3862:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3873:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3873:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:6"
																},
																"nativeSrc": "3858:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3858:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3850:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3850:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3892:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3892:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3907:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3907:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3923:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3923:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3928:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3928:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3919:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3919:3:6"
																						},
																						"nativeSrc": "3919:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3919:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3932:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3932:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3915:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3915:3:6"
																				},
																				"nativeSrc": "3915:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3915:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3903:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3903:3:6"
																		},
																		"nativeSrc": "3903:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3885:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:6"
																},
																"nativeSrc": "3885:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3885:51:6"
															},
															"nativeSrc": "3885:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3885:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3956:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3967:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:6"
																		},
																		"nativeSrc": "3952:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3952:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3972:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3945:6:6"
																},
																"nativeSrc": "3945:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3945:34:6"
															},
															"nativeSrc": "3945:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3945:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3711:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:6",
														"nodeType": "YulTypedName",
														"src": "3801:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3812:6:6",
														"nodeType": "YulTypedName",
														"src": "3812:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3820:6:6",
														"nodeType": "YulTypedName",
														"src": "3820:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3831:4:6",
														"nodeType": "YulTypedName",
														"src": "3831:4:6",
														"type": ""
													}
												],
												"src": "3711:274:6"
											},
											{
												"body": {
													"nativeSrc": "4068:199:6",
													"nodeType": "YulBlock",
													"src": "4068:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4114:16:6",
																"nodeType": "YulBlock",
																"src": "4114:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4123:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4123:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4126:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4126:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4116:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4116:6:6"
																			},
																			"nativeSrc": "4116:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4116:12:6"
																		},
																		"nativeSrc": "4116:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4116:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4089:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4089:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4098:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4085:3:6"
																		},
																		"nativeSrc": "4085:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4085:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4110:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4081:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:6"
																},
																"nativeSrc": "4081:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4081:32:6"
															},
															"nativeSrc": "4078:52:6",
															"nodeType": "YulIf",
															"src": "4078:52:6"
														},
														{
															"nativeSrc": "4139:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4139:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4158:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4158:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4152:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4152:5:6"
																},
																"nativeSrc": "4152:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4152:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4143:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4143:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4221:16:6",
																"nodeType": "YulBlock",
																"src": "4221:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4230:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4230:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4233:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4233:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4223:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:6"
																			},
																			"nativeSrc": "4223:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4223:12:6"
																		},
																		"nativeSrc": "4223:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4190:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4211:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4211:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4204:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4204:6:6"
																						},
																						"nativeSrc": "4204:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4204:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4197:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4197:6:6"
																				},
																				"nativeSrc": "4197:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4197:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4187:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4187:2:6"
																		},
																		"nativeSrc": "4187:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4187:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4180:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:6"
																},
																"nativeSrc": "4180:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4180:40:6"
															},
															"nativeSrc": "4177:60:6",
															"nodeType": "YulIf",
															"src": "4177:60:6"
														},
														{
															"nativeSrc": "4246:15:6",
															"nodeType": "YulAssignment",
															"src": "4246:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4256:5:6",
																"nodeType": "YulIdentifier",
																"src": "4256:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4246:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3990:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4034:9:6",
														"nodeType": "YulTypedName",
														"src": "4034:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4045:7:6",
														"nodeType": "YulTypedName",
														"src": "4045:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4057:6:6",
														"nodeType": "YulTypedName",
														"src": "4057:6:6",
														"type": ""
													}
												],
												"src": "3990:277:6"
											},
											{
												"body": {
													"nativeSrc": "4409:164:6",
													"nodeType": "YulBlock",
													"src": "4409:164:6",
													"statements": [
														{
															"nativeSrc": "4419:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4419:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4439:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4433:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4433:5:6"
																},
																"nativeSrc": "4433:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4433:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4423:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4423:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4461:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4461:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4470:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4470:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4478:4:6",
																				"nodeType": "YulLiteral",
																				"src": "4478:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4485:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4485:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4455:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4455:5:6"
																},
																"nativeSrc": "4455:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4455:37:6"
															},
															"nativeSrc": "4455:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4455:37:6"
														},
														{
															"nativeSrc": "4501:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4501:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4515:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4515:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4520:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4520:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:6"
																},
																"nativeSrc": "4511:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4511:16:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4505:2:6",
																	"nodeType": "YulTypedName",
																	"src": "4505:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4543:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "4543:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4547:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4547:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4536:6:6"
																},
																"nativeSrc": "4536:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4536:13:6"
															},
															"nativeSrc": "4536:13:6",
															"nodeType": "YulExpressionStatement",
															"src": "4536:13:6"
														},
														{
															"nativeSrc": "4558:9:6",
															"nodeType": "YulAssignment",
															"src": "4558:9:6",
															"value": {
																"name": "_1",
																"nativeSrc": "4565:2:6",
																"nodeType": "YulIdentifier",
																"src": "4565:2:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4272:301:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4385:3:6",
														"nodeType": "YulTypedName",
														"src": "4385:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4390:6:6",
														"nodeType": "YulTypedName",
														"src": "4390:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4401:3:6",
														"nodeType": "YulTypedName",
														"src": "4401:3:6",
														"type": ""
													}
												],
												"src": "4272:301:6"
											},
											{
												"body": {
													"nativeSrc": "4752:164:6",
													"nodeType": "YulBlock",
													"src": "4752:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4769:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4769:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4780:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4780:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:6"
																},
																"nativeSrc": "4762:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:6"
															},
															"nativeSrc": "4762:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4762:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4803:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4799:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:6"
																		},
																		"nativeSrc": "4799:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4819:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4819:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4792:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:6"
																},
																"nativeSrc": "4792:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4792:30:6"
															},
															"nativeSrc": "4792:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4792:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4853:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4853:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:6"
																		},
																		"nativeSrc": "4838:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4838:18:6"
																	},
																	{
																		"hexValue": "48617276657374206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4858:16:6",
																		"nodeType": "YulLiteral",
																		"src": "4858:16:6",
																		"type": "",
																		"value": "Harvest failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:6"
																},
																"nativeSrc": "4831:44:6",
																"nodeType": "YulFunctionCall",
																"src": "4831:44:6"
															},
															"nativeSrc": "4831:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "4831:44:6"
														},
														{
															"nativeSrc": "4884:26:6",
															"nodeType": "YulAssignment",
															"src": "4884:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4896:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4896:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4907:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4907:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4892:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:6"
																},
																"nativeSrc": "4892:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4892:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4884:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4884:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49dc11f970ab90405405e88db8796593046612f8277dbff056ef799656f025cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4578:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4729:9:6",
														"nodeType": "YulTypedName",
														"src": "4729:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4743:4:6",
														"nodeType": "YulTypedName",
														"src": "4743:4:6",
														"type": ""
													}
												],
												"src": "4578:338:6"
											},
											{
												"body": {
													"nativeSrc": "5095:168:6",
													"nodeType": "YulBlock",
													"src": "5095:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5112:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5112:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5123:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5123:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:6"
																},
																"nativeSrc": "5105:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5105:21:6"
															},
															"nativeSrc": "5105:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5105:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5146:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5146:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5157:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5157:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5142:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5142:3:6"
																		},
																		"nativeSrc": "5142:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5142:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5162:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5135:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5135:6:6"
																},
																"nativeSrc": "5135:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5135:30:6"
															},
															"nativeSrc": "5135:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5135:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5185:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5196:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5196:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:18:6"
																	},
																	{
																		"hexValue": "4d757374206465706f736974207374455448",
																		"kind": "string",
																		"nativeSrc": "5201:20:6",
																		"nodeType": "YulLiteral",
																		"src": "5201:20:6",
																		"type": "",
																		"value": "Must deposit stETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5174:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:6"
																},
																"nativeSrc": "5174:48:6",
																"nodeType": "YulFunctionCall",
																"src": "5174:48:6"
															},
															"nativeSrc": "5174:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "5174:48:6"
														},
														{
															"nativeSrc": "5231:26:6",
															"nodeType": "YulAssignment",
															"src": "5231:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5243:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5243:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5254:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5254:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5239:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:6"
																},
																"nativeSrc": "5239:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5239:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5231:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5231:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4921:342:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5072:9:6",
														"nodeType": "YulTypedName",
														"src": "5072:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5086:4:6",
														"nodeType": "YulTypedName",
														"src": "5086:4:6",
														"type": ""
													}
												],
												"src": "4921:342:6"
											},
											{
												"body": {
													"nativeSrc": "5425:214:6",
													"nodeType": "YulBlock",
													"src": "5425:214:6",
													"statements": [
														{
															"nativeSrc": "5435:26:6",
															"nodeType": "YulAssignment",
															"src": "5435:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5447:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5458:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5458:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:6"
																},
																"nativeSrc": "5443:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5443:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5435:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5477:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5477:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5492:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5492:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5508:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5508:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5513:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5513:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5504:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5504:3:6"
																						},
																						"nativeSrc": "5504:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5504:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5517:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5517:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5500:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5500:3:6"
																				},
																				"nativeSrc": "5500:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5500:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5488:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5488:3:6"
																		},
																		"nativeSrc": "5488:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5488:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5470:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5470:6:6"
																},
																"nativeSrc": "5470:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5470:51:6"
															},
															"nativeSrc": "5470:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5470:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5541:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5541:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5552:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5552:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5537:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5537:3:6"
																		},
																		"nativeSrc": "5537:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5561:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5561:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5577:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5577:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5582:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5582:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5573:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5573:3:6"
																						},
																						"nativeSrc": "5573:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5573:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5586:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5586:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5569:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:6"
																				},
																				"nativeSrc": "5569:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5569:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:6"
																		},
																		"nativeSrc": "5557:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5530:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5530:6:6"
																},
																"nativeSrc": "5530:60:6",
																"nodeType": "YulFunctionCall",
																"src": "5530:60:6"
															},
															"nativeSrc": "5530:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "5530:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5621:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5621:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:6"
																		},
																		"nativeSrc": "5606:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5606:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5626:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5626:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:34:6"
															},
															"nativeSrc": "5599:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5268:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5378:9:6",
														"nodeType": "YulTypedName",
														"src": "5378:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5389:6:6",
														"nodeType": "YulTypedName",
														"src": "5389:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5397:6:6",
														"nodeType": "YulTypedName",
														"src": "5397:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5405:6:6",
														"nodeType": "YulTypedName",
														"src": "5405:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5416:4:6",
														"nodeType": "YulTypedName",
														"src": "5416:4:6",
														"type": ""
													}
												],
												"src": "5268:371:6"
											},
											{
												"body": {
													"nativeSrc": "5801:188:6",
													"nodeType": "YulBlock",
													"src": "5801:188:6",
													"statements": [
														{
															"nativeSrc": "5811:26:6",
															"nodeType": "YulAssignment",
															"src": "5811:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5823:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5823:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5834:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5834:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5819:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5819:3:6"
																},
																"nativeSrc": "5819:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5819:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5811:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5811:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5853:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5868:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5868:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5884:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5884:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5889:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5889:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5880:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5880:3:6"
																						},
																						"nativeSrc": "5880:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5880:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5893:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5893:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5876:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5876:3:6"
																				},
																				"nativeSrc": "5876:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5876:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5864:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5864:3:6"
																		},
																		"nativeSrc": "5864:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5864:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5846:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5846:6:6"
																},
																"nativeSrc": "5846:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5846:51:6"
															},
															"nativeSrc": "5846:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5846:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5917:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5917:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5928:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5928:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5913:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5913:3:6"
																		},
																		"nativeSrc": "5913:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5913:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5933:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5933:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5906:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:6"
																},
																"nativeSrc": "5906:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5906:34:6"
															},
															"nativeSrc": "5906:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5906:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5960:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5960:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5971:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5971:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:6"
																		},
																		"nativeSrc": "5956:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5976:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5949:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:6"
																},
																"nativeSrc": "5949:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5949:34:6"
															},
															"nativeSrc": "5949:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5949:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5644:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5754:9:6",
														"nodeType": "YulTypedName",
														"src": "5754:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5765:6:6",
														"nodeType": "YulTypedName",
														"src": "5765:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5773:6:6",
														"nodeType": "YulTypedName",
														"src": "5773:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5781:6:6",
														"nodeType": "YulTypedName",
														"src": "5781:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5792:4:6",
														"nodeType": "YulTypedName",
														"src": "5792:4:6",
														"type": ""
													}
												],
												"src": "5644:345:6"
											},
											{
												"body": {
													"nativeSrc": "6042:174:6",
													"nodeType": "YulBlock",
													"src": "6042:174:6",
													"statements": [
														{
															"nativeSrc": "6052:16:6",
															"nodeType": "YulAssignment",
															"src": "6052:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6063:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6063:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6066:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6059:3:6"
																},
																"nativeSrc": "6059:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6059:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6052:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6052:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6099:111:6",
																"nodeType": "YulBlock",
																"src": "6099:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6120:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6120:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6127:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6127:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6132:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6132:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6123:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6123:3:6"
																					},
																					"nativeSrc": "6123:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6123:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6113:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			"nativeSrc": "6113:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6113:31:6"
																		},
																		"nativeSrc": "6113:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6113:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6164:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6164:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6167:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6167:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6157:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6157:6:6"
																			},
																			"nativeSrc": "6157:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6157:15:6"
																		},
																		"nativeSrc": "6157:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6157:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6192:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6192:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6195:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6195:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6185:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6185:6:6"
																			},
																			"nativeSrc": "6185:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6185:15:6"
																		},
																		"nativeSrc": "6185:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6185:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6086:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6086:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6080:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6080:2:6"
																},
																"nativeSrc": "6080:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6080:10:6"
															},
															"nativeSrc": "6077:133:6",
															"nodeType": "YulIf",
															"src": "6077:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5994:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6025:1:6",
														"nodeType": "YulTypedName",
														"src": "6025:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6028:1:6",
														"nodeType": "YulTypedName",
														"src": "6028:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6034:3:6",
														"nodeType": "YulTypedName",
														"src": "6034:3:6",
														"type": ""
													}
												],
												"src": "5994:222:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough yvSTETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_49dc11f970ab90405405e88db8796593046612f8277dbff056ef799656f025cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Harvest failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Must deposit stETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e5575f3560e01c806370a0823111610088578063a9059cbb11610063578063a9059cbb146101d6578063b6b55f25146101e9578063c1fe3e48146101fc578063dd62ed3e1461020f575f80fd5b806370a082311461017b57806395d89b41146101a3578063a8c62e76146101ab575f80fd5b806323b872dd116100c357806323b872dd1461013c5780632e1a7d4d1461014f578063313ce567146101645780634641257d14610173575f80fd5b806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a575b5f80fd5b6100f1610247565b6040516100fe919061091a565b60405180910390f35b61011a61011536600461096a565b6102d7565b60405190151581526020016100fe565b6002545b6040519081526020016100fe565b61011a61014a366004610992565b6102f0565b61016261015d3660046109cc565b610313565b005b604051601281526020016100fe565b6101626103ec565b61012e6101893660046109e3565b6001600160a01b03165f9081526020819052604090205490565b6100f16104b1565b6006546101be906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b61011a6101e436600461096a565b6104c0565b6101626101f73660046109cc565b6104cd565b6005546101be906001600160a01b031681565b61012e61021d366004610a03565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461025690610a34565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610a34565b80156102cd5780601f106102a4576101008083540402835291602001916102cd565b820191905f5260205f20905b8154815290600101906020018083116102b057829003601f168201915b5050505050905090565b5f336102e48185856105cf565b60019150505b92915050565b5f336102fd8582856105e1565b61030885858561065d565b506001949350505050565b335f9081526020819052604090205481111561036b5760405162461bcd60e51b815260206004820152601260248201527109cdee840cadcdeeaced040f2eca6a88aa8960731b60448201526064015b60405180910390fd5b61037533826106ba565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b6020604051808303815f875af11580156103c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e89190610a6c565b5050565b60065460408051600481526024810182526020810180516001600160e01b031663372500ab60e01b17905290515f926001600160a01b03169161042e91610a8b565b5f604051808303815f865af19150503d805f8114610467576040519150601f19603f3d011682016040523d82523d5f602084013e61046c565b606091505b50509050806104ae5760405162461bcd60e51b815260206004820152600e60248201526d12185c9d995cdd0819985a5b195960921b6044820152606401610362565b50565b60606004805461025690610a34565b5f336102e481858561065d565b5f81116105115760405162461bcd60e51b815260206004820152601260248201527109aeae6e840c8cae0dee6d2e840e6e88aa8960731b6044820152606401610362565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610565573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105899190610a6c565b5061059433826106ee565b60055460065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016103a8565b6105dc8383836001610722565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610657578181101561064957604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610362565b61065784848484035f610722565b50505050565b6001600160a01b03831661068657604051634b637e8f60e11b81525f6004820152602401610362565b6001600160a01b0382166106af5760405163ec442f0560e01b81525f6004820152602401610362565b6105dc8383836107f4565b6001600160a01b0382166106e357604051634b637e8f60e11b81525f6004820152602401610362565b6103e8825f836107f4565b6001600160a01b0382166107175760405163ec442f0560e01b81525f6004820152602401610362565b6103e85f83836107f4565b6001600160a01b03841661074b5760405163e602df0560e01b81525f6004820152602401610362565b6001600160a01b03831661077457604051634a1406b160e11b81525f6004820152602401610362565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561065757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e691815260200190565b60405180910390a350505050565b6001600160a01b03831661081e578060025f8282546108139190610aa1565b9091555061088e9050565b6001600160a01b0383165f90815260208190526040902054818110156108705760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610362565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108aa576002805482900390556108c8565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161090d91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610965575f80fd5b919050565b5f806040838503121561097b575f80fd5b6109848361094f565b946020939093013593505050565b5f805f606084860312156109a4575f80fd5b6109ad8461094f565b92506109bb6020850161094f565b929592945050506040919091013590565b5f602082840312156109dc575f80fd5b5035919050565b5f602082840312156109f3575f80fd5b6109fc8261094f565b9392505050565b5f8060408385031215610a14575f80fd5b610a1d8361094f565b9150610a2b6020840161094f565b90509250929050565b600181811c90821680610a4857607f821691505b602082108103610a6657634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610a7c575f80fd5b815180151581146109fc575f80fd5b5f82518060208501845e5f920191825250919050565b808201808211156102ea57634e487b7160e01b5f52601160045260245ffdfea264697066735822122089fe414b9e230e865eccecbd1afbd10c1b385f78fc05c8dd6843df5b00c8afd764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x1AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x162 PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x256 SWAP1 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xA34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP2 DUP6 DUP6 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2FD DUP6 DUP3 DUP6 PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x308 DUP6 DUP6 DUP6 PUSH2 0x65D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9CDEE840CADCDEEACED040F2ECA6A88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x375 CALLER DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x372500AB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x42E SWAP2 PUSH2 0xA8B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185C9D995CDD0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x256 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP2 DUP6 DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9AEAE6E840C8CAE0DEE6D2E840E6E88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST POP PUSH2 0x594 CALLER DUP3 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x722 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x657 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x657 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x722 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH0 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0x3E8 PUSH0 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x657 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x81E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x88E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8AA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x965 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x984 DUP4 PUSH2 0x94F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9AD DUP5 PUSH2 0x94F JUMP JUMPDEST SWAP3 POP PUSH2 0x9BB PUSH1 0x20 DUP6 ADD PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA1D DUP4 PUSH2 0x94F JUMP JUMPDEST SWAP2 POP PUSH2 0xA2B PUSH1 0x20 DUP5 ADD PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA48 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9FC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 INVALID COINBASE 0x4B SWAP15 0x23 0xE DUP7 MCOPY 0xCC 0xEC 0xBD BYTE 0xFB 0xD1 0xC SHL CODESIZE PUSH0 PUSH25 0xFC05C8DD6843DF5B00C8AFD764736F6C634300081A00330000 ",
							"sourceMap": "178:1202:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:6;;1078:22;1060:41;;1048:2;1033:18;3998:186:1;920:187:6;2849:97:1;2927:12;;2849:97;;;1258:25:6;;;1246:2;1231:18;2849:97:1;1112:177:6;4776:244:1;;;;;;:::i;:::-;;:::i;929:235:5:-;;;;;;:::i;:::-;;:::i;:::-;;2707:82:1;;;2780:2;2046:36:6;;2034:2;2019:18;2707:82:1;1904:184:6;1210:167:5;;;:::i;3004:116:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;274:23:5:-;;;;;-1:-1:-1;;;;;274:23:5;;;;;;-1:-1:-1;;;;;2448:32:6;;;2430:51;;2418:2;2403:18;274:23:5;2284:203:6;3315:178:1;;;;;;:::i;:::-;;:::i;567:331:5:-;;;;;;:::i;:::-;;:::i;214:19::-;;;;;-1:-1:-1;;;;;214:19:5;;;3551:140:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;929:235:5:-;1002:10;3069:7:1;3095:18;;;;;;;;;;;1017:7:5;-1:-1:-1;992:32:5;984:63;;;;-1:-1:-1;;;984:63:5;;3566:2:6;984:63:5;;;3548:21:6;3605:2;3585:18;;;3578:30;-1:-1:-1;;;3624:18:6;;;3617:48;3682:18;;984:63:5;;;;;;;;;1060:26;1066:10;1078:7;1060:5;:26::i;:::-;1097:5;;:35;;-1:-1:-1;;;1097:35:5;;1112:10;1097:35;;;3885:51:6;3952:18;;;3945:34;;;-1:-1:-1;;;;;1097:5:5;;;;:14;;3858:18:6;;1097:35:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;929:235;:::o;1210:167::-;1268:8;;1282:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1282:41:5;-1:-1:-1;;;1282:41:5;;;1268:56;;1250:12;;-1:-1:-1;;;;;1268:8:5;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:75;;;1343:7;1335:34;;;;-1:-1:-1;;;1335:34:5;;4780:2:6;1335:34:5;;;4762:21:6;4819:2;4799:18;;;4792:30;-1:-1:-1;;;4838:18:6;;;4831:44;4892:18;;1335:34:5;4578:338:6;1335:34:5;1238:139;1210:167::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;567:331:5:-;639:1;629:7;:11;621:42;;;;-1:-1:-1;;;621:42:5;;5123:2:6;621:42:5;;;5105:21:6;5162:2;5142:18;;;5135:30;-1:-1:-1;;;5181:18:6;;;5174:48;5239:18;;621:42:5;4921:342:6;621:42:5;676:5;;:54;;-1:-1:-1;;;676:54:5;;695:10;676:54;;;5470:51:6;715:4:5;5537:18:6;;;5530:60;5606:18;;;5599:34;;;-1:-1:-1;;;;;676:5:5;;;;:18;;5443::6;;676:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;741:26;747:10;759:7;741:5;:26::i;:::-;857:5;;872:8;;857:33;;-1:-1:-1;;;857:33:5;;-1:-1:-1;;;;;872:8:5;;;857:33;;;3885:51:6;3952:18;;;3945:34;;;857:5:5;;;:14;;3858:18:6;;857:33:5;3711:274:6;8726:128:1;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:1;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:1;;-1:-1:-1;;;;;5864:32:6;;10687:60:1;;;5846:51:6;5913:18;;;5906:34;;;5956:18;;;5949:34;;;5819:18;;10687:60:1;5644:345:6;10632:130:1;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;2430:51:6;2403:18;;5517:30:1;2284:203:6;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;2430:51:6;2403:18;;5610:32:1;2284:203:6;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7984:206::-;-1:-1:-1;;;;;8054:21:1;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:1;;8125:1;8098:30;;;2430:51:6;2403:18;;8098:30:1;2284:203:6;8050:89:1;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;7458:208::-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;2430:51:6;2403:18;;7572:32:1;2284:203:6;7524:91:1;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;2430:51:6;2403:18;;9855:32:1;2284:203:6;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;2430:51:6;2403:18;;9955:31:1;2284:203:6;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1258:25:6;;1246:2;1231:18;;1112:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;5864:32:6;;6386:50:1;;;5846:51:6;5913:18;;;5906:34;;;5956:18;;;5949:34;;;5819:18;;6386:50:1;5644:345:6;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1258::6;;1246:2;1231:18;;1112:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:418:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:6;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:6:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:6;1619:18;;;;1606:32;;1294:374::o;1673:226::-;1732:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:52;;;1801:1;1798;1791:12;1753:52;-1:-1:-1;1846:23:6;;1673:226;-1:-1:-1;1673:226:6:o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;:::-;2234:39;2093:186;-1:-1:-1;;;2093:186:6:o;2714:260::-;2782:6;2790;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2882:29;2901:9;2882:29;:::i;:::-;2872:39;;2930:38;2964:2;2953:9;2949:18;2930:38;:::i;:::-;2920:48;;2714:260;;;;;:::o;2979:380::-;3058:1;3054:12;;;;3101;;;3122:61;;3176:4;3168:6;3164:17;3154:27;;3122:61;3229:2;3221:6;3218:14;3198:18;3195:38;3192:161;;3275:10;3270:3;3266:20;3263:1;3256:31;3310:4;3307:1;3300:15;3338:4;3335:1;3328:15;3192:161;;2979:380;;;:::o;3990:277::-;4057:6;4110:2;4098:9;4089:7;4085:23;4081:32;4078:52;;;4126:1;4123;4116:12;4078:52;4158:9;4152:16;4211:5;4204:13;4197:21;4190:5;4187:32;4177:60;;4233:1;4230;4223:12;4272:301;4401:3;4439:6;4433:13;4485:6;4478:4;4470:6;4466:17;4461:3;4455:37;4547:1;4511:16;;4536:13;;;-1:-1:-1;4511:16:6;4272:301;-1:-1:-1;4272:301:6:o;5994:222::-;6059:9;;;6080:10;;;6077:133;;;6132:10;6127:3;6123:20;6120:1;6113:31;6167:4;6164:1;6157:15;6195:4;6192:1;6185:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "561200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2560",
								"decimals()": "243",
								"deposit(uint256)": "infinite",
								"harvest()": "infinite",
								"name()": "infinite",
								"stETH()": "2402",
								"strategy()": "2403",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51238",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 346,
									"end": 522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 522,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 346,
									"end": 522,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "5969656C64205661756C74205374616B65642045544800000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2ECA6A88AA89"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 461,
									"end": 466,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 461,
									"end": 483,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 461,
									"end": 483,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 494,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 494,
									"end": 514,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 514,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 494,
									"end": 621,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 494,
									"end": 621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 555,
									"end": 565,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 550,
									"end": 553,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 546,
									"end": 566,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 567,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 586,
									"end": 590,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 576,
									"end": 591,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 610,
									"end": 614,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 615,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 811,
									"end": 828,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 801,
									"end": 828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 769,
									"end": 830,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 865,
									"end": 879,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 845,
									"end": 863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 842,
									"end": 880,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 922,
									"end": 932,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 917,
									"end": 920,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 913,
									"end": 933,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 934,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 947,
									"end": 962,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 985,
									"end": 989,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 990,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1241,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1234,
									"end": 1237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1242,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1281,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1323,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1392,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1366,
									"end": 1393,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1394,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1429,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1452,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1498,
									"end": 1501,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1487,
									"end": 1507,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1578,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1579,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1602,
									"end": 1603,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1591,
									"end": 1604,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2006,
									"end": 2024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2122,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2085,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2035,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2212,
									"end": 2214,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2940,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 3006,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1804,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1805,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1806,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1820,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1084,
									"end": 1085,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2392,
									"end": 2399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2386,
									"end": 2400,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2581,
									"end": 2585,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2535,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2382,
									"end": 2385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2628,
									"end": 2634,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2626,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2616,
									"end": 2635,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2683,
									"end": 2709,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2764,
									"end": 2788,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2797,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2756,
									"end": 2798,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2799,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2861,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 3130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 1380,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089fe414b9e230e865eccecbd1afbd10c1b385f78fc05c8dd6843df5b00c8afd764736f6c634300081a0033",
									".code": [
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "C1FE3E48"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "A8C62E76"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "4641257D"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 178,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 929,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 929,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1904,
											"end": 2088,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1210,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 274,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 274,
											"end": 297,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 274,
											"end": 297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 274,
											"end": 297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 274,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 274,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 567,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 567,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 567,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 233,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 233,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 233,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 214,
											"end": 233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 214,
											"end": 233,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 214,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 233,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9CDEE840CADCDEEACED040F2ECA6A88AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 984,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1060,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1086,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1060,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1097,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1210,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1268,
											"end": 1276,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "372500AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1262,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1268,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12185C9D995CDD0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4578,
											"end": 4916,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1335,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 567,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 629,
											"end": 640,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 663,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 621,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 663,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 621,
											"end": 663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 621,
											"end": 663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 621,
											"end": 663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 621,
											"end": 663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5165,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AEAE6E840C8CAE0DEE6D2E840E6E88AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5222,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 621,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4921,
											"end": 5263,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 621,
											"end": 663,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 695,
											"end": 705,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5521,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 715,
											"end": 719,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5530,
											"end": 5590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 676,
											"end": 694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 676,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 676,
											"end": 730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 676,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 741,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 747,
											"end": 757,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 741,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 741,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 741,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 857,
											"end": 862,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 872,
											"end": 880,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 880,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 872,
											"end": 880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 872,
											"end": 880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 872,
											"end": 880,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 857,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 857,
											"end": 862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 857,
											"end": 862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 857,
											"end": 862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 857,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 857,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3711,
											"end": 3985,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5644,
											"end": 5989,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5644,
											"end": 5989,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2273,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2841,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2846,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2861,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2882,
											"end": 2911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2930,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3359,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2979,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3181,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3218,
											"end": 3232,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3233,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3192,
											"end": 3353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3342,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3335,
											"end": 3336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3353,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3192,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4267,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3990,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4113,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4078,
											"end": 4130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4078,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4218,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4219,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4177,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4177,
											"end": 4237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4235,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4573,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4272,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4439,
											"end": 4445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4464,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4492,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6090,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6090,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6077,
											"end": 6210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6077,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6077,
											"end": 6210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6127,
											"end": 6130,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6123,
											"end": 6143,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6199,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6192,
											"end": 6193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6185,
											"end": 6200,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit(uint256)": "b6b55f25",
							"harvest()": "4641257d",
							"name()": "06fdde03",
							"stETH()": "c1fe3e48",
							"strategy()": "a8c62e76",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault.sol\":\"YieldVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/vault.sol\":{\"keccak256\":\"0xab7fb626ae82a9a419b16217d01afe9ddc64e3ced680fe342a45bbcb22f1898a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a59762204f33f3a32bc6bc93e2e76ca2c98e154f7263b9ac20a943b4c6d49cc\",\"dweb:/ipfs/QmYoNhQihSZ3wTVYXY1JcVZtsK3EsZevggWZRfoSM48ozh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "stETH",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 796,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "strategy",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/vault.sol": {
				"ast": {
					"absolutePath": "contracts/vault.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"YieldVault": [
							906
						]
					},
					"id": 907,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 907,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 907,
							"sourceUnit": 730,
							"src": "118:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"201:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "201:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "201:5:5"
								}
							],
							"canonicalName": "YieldVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 906,
							"linearizedBaseContracts": [
								906,
								651,
								41,
								755,
								729,
								785
							],
							"name": "YieldVault",
							"nameLocation": "187:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c1fe3e48",
									"id": 794,
									"mutability": "mutable",
									"name": "stETH",
									"nameLocation": "228:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "214:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"214:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "214:6:5"
										},
										"referencedDeclaration": 729,
										"src": "214:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8c62e76",
									"id": 796,
									"mutability": "mutable",
									"name": "strategy",
									"nameLocation": "289:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "274:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 795,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "450:72:5",
										"statements": [
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "stETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "461:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 809,
																"name": "_stETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "476:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 808,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "469:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "469:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "461:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "461:22:5"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "494:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "_strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "505:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "494:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "494:20:5"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5969656c64205661756c74205374616b656420455448",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "408:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac8d9d719462e511b9c6043967cd1e5acdb3a3c42c151fd29a87e86db429c404",
														"typeString": "literal_string \"Yield Vault Staked ETH\""
													},
													"value": "Yield Vault Staked ETH"
												},
												{
													"hexValue": "79765354455448",
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "434:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_26bbf1fc94cee67a84d9fafd3822ee41a8fbba668e3cd0785fba9ca4b976b106",
														"typeString": "literal_string \"yvSTETH\""
													},
													"value": "yvSTETH"
												}
											],
											"id": 805,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 802,
												"name": "ERC20",
												"nameLocations": [
													"402:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "402:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "402:42:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_stETH",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "382:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "374:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:35:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:0:5"
									},
									"scope": 906,
									"src": "346:176:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "610:288:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "629:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "639:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "629:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f736974207374455448",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "642:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															},
															"value": "Must deposit stETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d38ad2d89b66752cc58109bcaa22f7ea93175445e623a92190d587f3c0bbb0f0",
																"typeString": "literal_string \"Must deposit stETH\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "621:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "621:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "621:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "695:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "699:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "695:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 837,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "715:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$906",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$906",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "707:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "707:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "707:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "722:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 830,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "676:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "682:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "676:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "676:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "676:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 843,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "747:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "751:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "759:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "741:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "741:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "741:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "872:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 848,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "857:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "863:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "857:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "857:33:5"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "576:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "592:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "584:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:17:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:5"
									},
									"scope": 906,
									"src": "567:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "973:191:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 863,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1002:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1006:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1002:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 862,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "992:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "992:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 866,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1017:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "992:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682079765354455448",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87",
																"typeString": "literal_string \"Not enough yvSTETH\""
															},
															"value": "Not enough yvSTETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87",
																"typeString": "literal_string \"Not enough yvSTETH\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "984:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "984:63:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1066:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1070:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1066:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1078:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1060:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1060:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 880,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1112:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1116:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1112:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1124:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 877,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1097:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1103:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "1097:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "1097:35:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "938:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "955:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "947:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:17:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:5"
									},
									"scope": 906,
									"src": "929:235:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "1238:139:5",
										"statements": [
											{
												"assignments": [
													890,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1255:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1250:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 889,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1250:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 898,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "636c61696d526577617264732829",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1306:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_372500ab14476302935a8023d9a8931cdc1c5b81bbe897f6b1b931a2b0b1054a",
																		"typeString": "literal_string \"claimRewards()\""
																	},
																	"value": "claimRewards()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_372500ab14476302935a8023d9a8931cdc1c5b81bbe897f6b1b931a2b0b1054a",
																		"typeString": "literal_string \"claimRewards()\""
																	}
																],
																"expression": {
																	"id": 893,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1282:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1286:19:5",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1282:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1282:41:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 891,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1268:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1277:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1268:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1249:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "1343:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48617276657374206661696c6564",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49dc11f970ab90405405e88db8796593046612f8277dbff056ef799656f025cb",
																"typeString": "literal_string \"Harvest failed\""
															},
															"value": "Harvest failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49dc11f970ab90405405e88db8796593046612f8277dbff056ef799656f025cb",
																"typeString": "literal_string \"Harvest failed\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1335:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1335:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "1335:34:5"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "1219:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:5"
									},
									"scope": 906,
									"src": "1210:167:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 907,
							"src": "178:1202:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:1349:5"
				},
				"id": 5
			}
		}
	}
}