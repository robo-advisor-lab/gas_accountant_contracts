{
	"id": "6d22ce5531ae3bf55a5ebb2ce7aa321a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/vault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface IGasReserve {\r\n    function requestGas(uint256 _amount) external;\r\n}\r\n\r\ninterface ILiquidStaking {\r\n    function claimRewards() external;\r\n    function stake() external payable;\r\n}\r\n\r\ncontract YieldVault is ERC20, Ownable {\r\n    IERC20 public stETH;  // Reference to stETH (LiquidStaking contract)\r\n    IGasReserve public gasReserve;\r\n\r\n    uint256 public lastHarvestTime;\r\n    uint256 public totalRewardsDistributed; // Tracks total earned rewards\r\n\r\n    constructor(address _liquidStaking, address _gasReserve)\r\n        ERC20(\"Yield Vault Staked ETH\", \"yvSTETH\")\r\n        Ownable(msg.sender)\r\n    {\r\n        stETH = IERC20(_liquidStaking); // Assign stETH to the LiquidStaking contract\r\n        gasReserve = IGasReserve(_gasReserve);\r\n        lastHarvestTime = block.timestamp;\r\n    }\r\n\r\n    // ðŸ“Œ Users deposit Sepolia ETH â†’ Vault stakes into Liquid Staking â†’ Mints yvSTETH\r\n    function deposit() external payable {\r\n        require(msg.value > 0, \"Must deposit ETH\");\r\n\r\n        // Stake ETH into Liquid Staking contract (which is also the stETH contract)\r\n        ILiquidStaking(address(stETH)).stake{value: msg.value}();\r\n\r\n        // Get stETH balance after staking\r\n        uint256 stETHBalance = stETH.balanceOf(address(this));\r\n\r\n        // Mint yvSTETH to user\r\n        _mint(msg.sender, stETHBalance);\r\n    }\r\n\r\n    // ðŸ“Œ Users withdraw by burning yvSTETH & receiving their share of stETH\r\n    function withdraw(uint256 _amount) external {\r\n        require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\");\r\n\r\n        uint256 totalSupplyVault = totalSupply();\r\n        uint256 vaultBalance = stETH.balanceOf(address(this));\r\n\r\n        // Calculate the user's share of stETH, including rewards\r\n        uint256 userShare = (vaultBalance * _amount) / totalSupplyVault;\r\n\r\n        _burn(msg.sender, _amount); // Burn user's yvSTETH\r\n        stETH.transfer(msg.sender, userShare); // Transfer stETH to user\r\n    }\r\n\r\n    // ðŸ“Œ Manual Harvest by Owner (Gas Reserve Pays) - NO time restriction\r\n    function harvest() external onlyOwner {\r\n        // Request gas from Gas Reserve before harvesting\r\n        gasReserve.requestGas(0.01 ether);\r\n\r\n        // Claim rewards from Liquid Staking contract (which is also stETH)\r\n        uint256 preBalance = stETH.balanceOf(address(this)); // Track balance before claim\r\n        ILiquidStaking(address(stETH)).claimRewards();\r\n        uint256 postBalance = stETH.balanceOf(address(this)); // Track balance after claim\r\n\r\n        // Calculate how much stETH was earned\r\n        uint256 earnedRewards = postBalance - preBalance;\r\n        totalRewardsDistributed += earnedRewards; // Track total rewards for monitoring\r\n\r\n        lastHarvestTime = block.timestamp; // Update last harvest time\r\n    }\r\n\r\n    // ðŸ“Œ View function: Get a user's share of stETH, including rewards\r\n    function earned(address user) external view returns (uint256) {\r\n        uint256 totalSupplyVault = totalSupply();\r\n        uint256 vaultBalance = stETH.balanceOf(address(this));\r\n        uint256 userShare = (vaultBalance * balanceOf(user)) / totalSupplyVault;\r\n        return userShare;\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vault.sol": {
				"IGasReserve": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "requestGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"requestGas(uint256)": "6e1cdf89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault.sol\":\"IGasReserve\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/vault.sol\":{\"keccak256\":\"0x75087970c8cc70f30fc633bc7e260e05dbd6389b6ccf15175f795a57e2562366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01034ac0c82f2a3b07f5eb552d7961a0e2d282144a9fac90027a75a95b6e9f4f\",\"dweb:/ipfs/QmSLAPHy9pXFV4DkDq5r7FWsVSPCvtxB5mwTcoUnhttwMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ILiquidStaking": {
					"abi": [
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"stake()": "3a4b66f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault.sol\":\"ILiquidStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/vault.sol\":{\"keccak256\":\"0x75087970c8cc70f30fc633bc7e260e05dbd6389b6ccf15175f795a57e2562366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01034ac0c82f2a3b07f5eb552d7961a0e2d282144a9fac90027a75a95b6e9f4f\",\"dweb:/ipfs/QmSLAPHy9pXFV4DkDq5r7FWsVSPCvtxB5mwTcoUnhttwMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"YieldVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidStaking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gasReserve",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasReserve",
							"outputs": [
								{
									"internalType": "contract IGasReserve",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHarvestTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardsDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vault.sol\":426:3422  contract YieldVault is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/vault.sol\":698:1028  constructor(address _liquidStaking, address _gasReserve)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/vault.sol\":824:834  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x16\n  dup2\n  mstore\n  0x20\n  add\n  0x5969656c64205661756c74205374616b65642045544800000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xcb, 0x0f2eca6a88aa89)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3281:3332   */\n  mstore\n    /* \"#utility.yul\":3254:3272   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/vault.sol\":852:857  stETH */\n  0x06\n    /* \"contracts/vault.sol\":852:882  stETH = IERC20(_liquidStaking) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/vault.sol\":939:949  gasReserve */\n  0x07\n    /* \"contracts/vault.sol\":939:976  gasReserve = IGasReserve(_gasReserve) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/vault.sol\":1005:1020  block.timestamp */\n  timestamp\n    /* \"contracts/vault.sol\":987:1002  lastHarvestTime */\n  0x08\n    /* \"contracts/vault.sol\":987:1020  lastHarvestTime = block.timestamp */\n  sstore\n    /* \"contracts/vault.sol\":426:3422  contract YieldVault is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_28:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_30:\n    /* \"#utility.yul\":375:415   */\n  tag_31\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_32\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:621   */\ntag_21:\n    /* \"#utility.yul\":555:565   */\n  0x4e487b71\n    /* \"#utility.yul\":550:553   */\n  0xe0\n    /* \"#utility.yul\":546:566   */\n  shl\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":536:567   */\n  mstore\n    /* \"#utility.yul\":586:590   */\n  0x41\n    /* \"#utility.yul\":583:584   */\n  0x04\n    /* \"#utility.yul\":576:591   */\n  mstore\n    /* \"#utility.yul\":610:614   */\n  0x24\n    /* \"#utility.yul\":607:608   */\n  0x00\n    /* \"#utility.yul\":600:615   */\n  revert\n    /* \"#utility.yul\":626:1006   */\ntag_22:\n    /* \"#utility.yul\":705:706   */\n  0x01\n    /* \"#utility.yul\":701:713   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":748:760   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":769:830   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":823:827   */\n  0x7f\n    /* \"#utility.yul\":815:821   */\n  dup3\n    /* \"#utility.yul\":811:828   */\n  and\n    /* \"#utility.yul\":801:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":769:830   */\ntag_35:\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":868:874   */\n  dup3\n    /* \"#utility.yul\":865:879   */\n  lt\n    /* \"#utility.yul\":845:863   */\n  dup2\n    /* \"#utility.yul\":842:880   */\n  sub\n    /* \"#utility.yul\":839:1000   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":922:932   */\n  0x4e487b71\n    /* \"#utility.yul\":917:920   */\n  0xe0\n    /* \"#utility.yul\":913:933   */\n  shl\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":903:934   */\n  mstore\n    /* \"#utility.yul\":957:961   */\n  0x22\n    /* \"#utility.yul\":954:955   */\n  0x04\n    /* \"#utility.yul\":947:962   */\n  mstore\n    /* \"#utility.yul\":985:989   */\n  0x24\n    /* \"#utility.yul\":982:983   */\n  0x00\n    /* \"#utility.yul\":975:990   */\n  revert\n    /* \"#utility.yul\":839:1000   */\ntag_36:\n  pop\n    /* \"#utility.yul\":626:1006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1137:1655   */\ntag_24:\n    /* \"#utility.yul\":1239:1241   */\n  0x1f\n    /* \"#utility.yul\":1234:1237   */\n  dup3\n    /* \"#utility.yul\":1231:1242   */\n  gt\n    /* \"#utility.yul\":1228:1649   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1275:1280   */\n  dup1\n    /* \"#utility.yul\":1272:1273   */\n  0x00\n    /* \"#utility.yul\":1265:1281   */\n  mstore\n    /* \"#utility.yul\":1319:1323   */\n  0x20\n    /* \"#utility.yul\":1316:1317   */\n  0x00\n    /* \"#utility.yul\":1306:1324   */\n  keccak256\n    /* \"#utility.yul\":1389:1391   */\n  0x1f\n    /* \"#utility.yul\":1377:1387   */\n  dup5\n    /* \"#utility.yul\":1373:1392   */\n  add\n    /* \"#utility.yul\":1370:1371   */\n  0x05\n    /* \"#utility.yul\":1366:1393   */\n  shr\n    /* \"#utility.yul\":1360:1364   */\n  dup2\n    /* \"#utility.yul\":1356:1394   */\n  add\n    /* \"#utility.yul\":1425:1429   */\n  0x20\n    /* \"#utility.yul\":1413:1423   */\n  dup6\n    /* \"#utility.yul\":1410:1430   */\n  lt\n    /* \"#utility.yul\":1407:1454   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":1448:1452   */\n  dup1\n    /* \"#utility.yul\":1407:1454   */\ntag_40:\n    /* \"#utility.yul\":1503:1505   */\n  0x1f\n    /* \"#utility.yul\":1498:1501   */\n  dup5\n    /* \"#utility.yul\":1494:1506   */\n  add\n    /* \"#utility.yul\":1491:1492   */\n  0x05\n    /* \"#utility.yul\":1487:1507   */\n  shr\n    /* \"#utility.yul\":1481:1485   */\n  dup3\n    /* \"#utility.yul\":1477:1508   */\n  add\n    /* \"#utility.yul\":1467:1508   */\n  swap2\n  pop\n    /* \"#utility.yul\":1558:1639   */\ntag_41:\n    /* \"#utility.yul\":1576:1578   */\n  dup2\n    /* \"#utility.yul\":1569:1574   */\n  dup2\n    /* \"#utility.yul\":1566:1579   */\n  lt\n    /* \"#utility.yul\":1558:1639   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1621:1637   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1602:1603   */\n  0x01\n    /* \"#utility.yul\":1591:1604   */\n  add\n    /* \"#utility.yul\":1558:1639   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":1562:1565   */\n  pop\n  pop\n    /* \"#utility.yul\":1228:1649   */\ntag_39:\n    /* \"#utility.yul\":1137:1655   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1831:3130   */\ntag_9:\n    /* \"#utility.yul\":1951:1961   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1973:2003   */\n  dup2\n  gt\n    /* \"#utility.yul\":1970:2026   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2006:2024   */\n  tag_47\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2035:2132   */\n  tag_48\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2085:2123   */\n  tag_49\n    /* \"#utility.yul\":2117:2121   */\n  dup5\n    /* \"#utility.yul\":2111:2122   */\n  sload\n    /* \"#utility.yul\":2085:2123   */\n  tag_22\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2079:2083   */\n  dup5\n    /* \"#utility.yul\":2035:2132   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2212:2214   */\n  0x1f\n    /* \"#utility.yul\":2201:2215   */\n  dup3\n  gt\n    /* \"#utility.yul\":2229:2230   */\n  0x01\n    /* \"#utility.yul\":2224:2873   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2917:2918   */\n  0x00\n    /* \"#utility.yul\":2934:2940   */\n  dup4\n    /* \"#utility.yul\":2931:3020   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":2986:3005   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2980:3006   */\n  mload\n    /* \"#utility.yul\":2931:3020   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":1788:1789   */\n  0x03\n    /* \"#utility.yul\":1784:1795   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1780:1804   */\n  shr\n    /* \"#utility.yul\":1776:1805   */\n  not\n    /* \"#utility.yul\":1766:1806   */\n  and\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1808:1819   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1763:1820   */\n  or\n    /* \"#utility.yul\":3033:3114   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2194:3124   */\n  jump(tag_43)\n    /* \"#utility.yul\":2224:2873   */\ntag_51:\n    /* \"#utility.yul\":1084:1085   */\n  0x00\n    /* \"#utility.yul\":1077:1091   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x20\n    /* \"#utility.yul\":1108:1126   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2260:2280   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2378:2600   */\ntag_55:\n    /* \"#utility.yul\":2392:2399   */\n  dup3\n    /* \"#utility.yul\":2389:2390   */\n  dup2\n    /* \"#utility.yul\":2386:2400   */\n  lt\n    /* \"#utility.yul\":2378:2600   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2474:2493   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2468:2494   */\n  mload\n    /* \"#utility.yul\":2453:2495   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2581:2585   */\n  0x20\n    /* \"#utility.yul\":2566:2586   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2534:2535   */\n  0x01\n    /* \"#utility.yul\":2522:2536   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2408:2420   */\n  add\n    /* \"#utility.yul\":2378:2600   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2382:2385   */\n  pop\n    /* \"#utility.yul\":2628:2634   */\n  dup5\n    /* \"#utility.yul\":2619:2626   */\n  dup3\n    /* \"#utility.yul\":2616:2635   */\n  lt\n    /* \"#utility.yul\":2613:2814   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2689:2708   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2683:2709   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2772:2773   */\n  0x03\n    /* \"#utility.yul\":2768:2782   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2787   */\n  0xf8\n    /* \"#utility.yul\":2764:2788   */\n  and\n    /* \"#utility.yul\":2760:2797   */\n  shr\n    /* \"#utility.yul\":2756:2798   */\n  not\n    /* \"#utility.yul\":2741:2799   */\n  and\n    /* \"#utility.yul\":2726:2800   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2613:2814   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2860:2861   */\n  0x01\n    /* \"#utility.yul\":2844:2858   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2840:2862   */\n  add\n    /* \"#utility.yul\":2827:2863   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1831:3130   */\n  jump\t// out\n    /* \"#utility.yul\":3135:3338   */\ntag_26:\n    /* \"contracts/vault.sol\":426:3422  contract YieldVault is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vault.sol\":426:3422  contract YieldVault is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd0e30db0\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xee172546\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeea7570e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc1fe3e48\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xceb0f626\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/vault.sol\":3088:3382  function earned(address user) external view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/vault.sol\":3088:3382  function earned(address user) external view returns (uint256) {... */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1458:1472   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1451:1473   */\n      iszero\n        /* \"#utility.yul\":1433:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1421:1423   */\n      0x20\n        /* \"#utility.yul\":1406:1424   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_33\n        /* \"#utility.yul\":1293:1480   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_29)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_41\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"contracts/vault.sol\":1657:2179  function withdraw(uint256 _amount) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2237:2273   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_33\n        /* \"#utility.yul\":2095:2279   */\n      jump\n        /* \"contracts/vault.sol\":2265:3005  function harvest() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_58\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_29\n      tag_72\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_58\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_33\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_36\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_41\n      tag_89\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/vault.sol\":471:490  IERC20 public stETH */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      sload(0x06)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/vault.sol\":583:613  uint256 public lastHarvestTime */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_29\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/vault.sol\":1130:1569  function deposit() external payable {... */\n    tag_18:\n      tag_58\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_29\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/vault.sol\":620:658  uint256 public totalRewardsDistributed */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_29\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/vault.sol\":545:574  IGasReserve public gasReserve */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      sload(0x07)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_58\n      tag_120\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/vault.sol\":3088:3382  function earned(address user) external view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/vault.sol\":3141:3148  uint256 */\n      0x00\n        /* \"contracts/vault.sol\":3161:3185  uint256 totalSupplyVault */\n      dup1\n        /* \"contracts/vault.sol\":3188:3201  totalSupply() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/vault.sol\":3188:3201  totalSupply() */\n    tag_123:\n        /* \"contracts/vault.sol\":3235:3240  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":3235:3265  stETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":3259:3263  this */\n      address\n        /* \"contracts/vault.sol\":3235:3265  stETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"contracts/vault.sol\":3161:3201  uint256 totalSupplyVault = totalSupply() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/vault.sol\":3212:3232  uint256 vaultBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":3235:3240  stETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":3235:3250  stETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":3235:3265  stETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/vault.sol\":3212:3265  uint256 vaultBalance = stETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":3276:3293  uint256 userShare */\n      0x00\n        /* \"contracts/vault.sol\":3331:3347  totalSupplyVault */\n      dup3\n        /* \"contracts/vault.sol\":3312:3327  balanceOf(user) */\n      tag_129\n        /* \"contracts/vault.sol\":3322:3326  user */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/vault.sol\":3312:3327  balanceOf(user) */\n    tag_129:\n        /* \"contracts/vault.sol\":3297:3327  vaultBalance * balanceOf(user) */\n      tag_130\n      swap1\n        /* \"contracts/vault.sol\":3297:3309  vaultBalance */\n      dup5\n        /* \"contracts/vault.sol\":3297:3327  vaultBalance * balanceOf(user) */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/vault.sol\":3296:3347  (vaultBalance * balanceOf(user)) / totalSupplyVault */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/vault.sol\":3276:3347  uint256 userShare = (vaultBalance * balanceOf(user)) / totalSupplyVault */\n      swap6\n        /* \"contracts/vault.sol\":3088:3382  function earned(address user) external view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_136\n      jump\t// in\n    tag_137:\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_141:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vault.sol\":1657:2179  function withdraw(uint256 _amount) external {... */\n    tag_61:\n        /* \"contracts/vault.sol\":1730:1740  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/vault.sol\":1745:1752  _amount */\n      dup2\n      gt\n        /* \"contracts/vault.sol\":1720:1752  balanceOf(msg.sender) >= _amount */\n      iszero\n        /* \"contracts/vault.sol\":1712:1775  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x20\n        /* \"contracts/vault.sol\":1712:1775  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4491:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4550   */\n      0x12\n        /* \"#utility.yul\":4528:4546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4521:4551   */\n      mstore\n      shl(0x73, 0x09cdee840cadcdeeaced040f2eca6a88aa89)\n        /* \"#utility.yul\":4567:4585   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4560:4608   */\n      mstore\n        /* \"#utility.yul\":4625:4643   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":1712:1775  require(balanceOf(msg.sender) >= _amount, \"Not enough yvSTETH\") */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/vault.sol\":1788:1812  uint256 totalSupplyVault */\n      0x00\n        /* \"contracts/vault.sol\":1815:1828  totalSupply() */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/vault.sol\":1815:1828  totalSupply() */\n    tag_158:\n        /* \"contracts/vault.sol\":1862:1867  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":1862:1892  stETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":1886:1890  this */\n      address\n        /* \"contracts/vault.sol\":1862:1892  stETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"contracts/vault.sol\":1788:1828  uint256 totalSupplyVault = totalSupply() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/vault.sol\":1839:1859  uint256 vaultBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":1862:1867  stETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":1862:1877  stETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":1862:1892  stETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_162:\n        /* \"contracts/vault.sol\":1839:1892  uint256 vaultBalance = stETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":1972:1989  uint256 userShare */\n      0x00\n        /* \"contracts/vault.sol\":2019:2035  totalSupplyVault */\n      dup3\n        /* \"contracts/vault.sol\":1993:2015  vaultBalance * _amount */\n      tag_163\n        /* \"contracts/vault.sol\":2008:2015  _amount */\n      dup6\n        /* \"contracts/vault.sol\":1839:1892  uint256 vaultBalance = stETH.balanceOf(address(this)) */\n      dup5\n        /* \"contracts/vault.sol\":1993:2015  vaultBalance * _amount */\n      tag_131\n      jump\t// in\n    tag_163:\n        /* \"contracts/vault.sol\":1992:2035  (vaultBalance * _amount) / totalSupplyVault */\n      tag_164\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_164:\n        /* \"contracts/vault.sol\":1972:2035  uint256 userShare = (vaultBalance * _amount) / totalSupplyVault */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":2048:2074  _burn(msg.sender, _amount) */\n      tag_165\n        /* \"contracts/vault.sol\":2054:2064  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":2066:2073  _amount */\n      dup6\n        /* \"contracts/vault.sol\":2048:2053  _burn */\n      tag_166\n        /* \"contracts/vault.sol\":2048:2074  _burn(msg.sender, _amount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/vault.sol\":2108:2113  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":2108:2145  stETH.transfer(msg.sender, userShare) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":2123:2133  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":2108:2145  stETH.transfer(msg.sender, userShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4828:4879   */\n      mstore\n        /* \"#utility.yul\":4895:4913   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4888:4922   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":2108:2113  stETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":2108:2122  stETH.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4801:4819   */\n      0x44\n      add\n        /* \"contracts/vault.sol\":2108:2145  stETH.transfer(msg.sender, userShare) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      pop\n        /* \"contracts/vault.sol\":1701:2179  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/vault.sol\":1657:2179  function withdraw(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/vault.sol\":2265:3005  function harvest() external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/vault.sol\":2373:2383  gasReserve */\n      sload(0x07)\n        /* \"contracts/vault.sol\":2373:2406  gasReserve.requestGas(0.01 ether) */\n      mload(0x40)\n      shl(0xe0, 0x6e1cdf89)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":2395:2405  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/vault.sol\":2373:2406  gasReserve.requestGas(0.01 ether) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":529:554   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":2373:2383  gasReserve */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vault.sol\":2373:2394  gasReserve.requestGas */\n      0x6e1cdf89\n      swap1\n        /* \"#utility.yul\":502:520   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":2373:2406  gasReserve.requestGas(0.01 ether) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n        /* \"contracts/vault.sol\":2517:2522  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":2517:2547  stETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":2541:2545  this */\n      address\n        /* \"contracts/vault.sol\":2517:2547  stETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"contracts/vault.sol\":2496:2514  uint256 preBalance */\n      0x00\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":2517:2522  stETH */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n        /* \"contracts/vault.sol\":2517:2532  stETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":2517:2547  stETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_186:\n        /* \"contracts/vault.sol\":2496:2547  uint256 preBalance = stETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":2611:2616  stETH */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":2588:2631  ILiquidStaking(address(stETH)).claimRewards */\n      and\n      0x372500ab\n        /* \"contracts/vault.sol\":2588:2633  ILiquidStaking(address(stETH)).claimRewards() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n        /* \"contracts/vault.sol\":2666:2671  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":2666:2696  stETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":2690:2694  this */\n      address\n        /* \"contracts/vault.sol\":2666:2696  stETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"contracts/vault.sol\":2644:2663  uint256 postBalance */\n      0x00\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":2666:2671  stETH */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n        /* \"contracts/vault.sol\":2666:2681  stETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":2666:2696  stETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_193:\n        /* \"contracts/vault.sol\":2644:2696  uint256 postBalance = stETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":2786:2807  uint256 earnedRewards */\n      0x00\n        /* \"contracts/vault.sol\":2810:2834  postBalance - preBalance */\n      tag_194\n        /* \"contracts/vault.sol\":2824:2834  preBalance */\n      dup4\n        /* \"contracts/vault.sol\":2644:2696  uint256 postBalance = stETH.balanceOf(address(this)) */\n      dup4\n        /* \"contracts/vault.sol\":2810:2834  postBalance - preBalance */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/vault.sol\":2786:2834  uint256 earnedRewards = postBalance - preBalance */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":2872:2885  earnedRewards */\n      dup1\n        /* \"contracts/vault.sol\":2845:2868  totalRewardsDistributed */\n      0x09\n      0x00\n        /* \"contracts/vault.sol\":2845:2885  totalRewardsDistributed += earnedRewards */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/vault.sol\":2954:2969  block.timestamp */\n      timestamp\n        /* \"contracts/vault.sol\":2936:2951  lastHarvestTime */\n      0x08\n        /* \"contracts/vault.sol\":2936:2969  lastHarvestTime = block.timestamp */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/vault.sol\":2265:3005  function harvest() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/vault.sol\":1130:1569  function deposit() external payable {... */\n    tag_102:\n        /* \"contracts/vault.sol\":1197:1198  0 */\n      0x00\n        /* \"contracts/vault.sol\":1185:1194  msg.value */\n      callvalue\n        /* \"contracts/vault.sol\":1185:1198  msg.value > 0 */\n      gt\n        /* \"contracts/vault.sol\":1177:1219  require(msg.value > 0, \"Must deposit ETH\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5886:5888   */\n      0x20\n        /* \"contracts/vault.sol\":1177:1219  require(msg.value > 0, \"Must deposit ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5868:5889   */\n      mstore\n        /* \"#utility.yul\":5925:5927   */\n      0x10\n        /* \"#utility.yul\":5905:5923   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5898:5928   */\n      mstore\n      shl(0x83, 0x09aeae6e840c8cae0dee6d2e8408aa89)\n        /* \"#utility.yul\":5944:5962   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5937:5983   */\n      mstore\n        /* \"#utility.yul\":6000:6018   */\n      0x64\n      add\n        /* \"contracts/vault.sol\":1177:1219  require(msg.value > 0, \"Must deposit ETH\") */\n      tag_156\n        /* \"#utility.yul\":5684:6024   */\n      jump\n        /* \"contracts/vault.sol\":1177:1219  require(msg.value > 0, \"Must deposit ETH\") */\n    tag_215:\n        /* \"contracts/vault.sol\":1341:1346  stETH */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":1318:1354  ILiquidStaking(address(stETH)).stake */\n      and\n      0x3a4b66f1\n        /* \"contracts/vault.sol\":1362:1371  msg.value */\n      callvalue\n        /* \"contracts/vault.sol\":1318:1374  ILiquidStaking(address(stETH)).stake{value: msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n        /* \"contracts/vault.sol\":1454:1459  stETH */\n      sload(0x06)\n        /* \"contracts/vault.sol\":1454:1484  stETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/vault.sol\":1478:1482  this */\n      address\n        /* \"contracts/vault.sol\":1454:1484  stETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"contracts/vault.sol\":1431:1451  uint256 stETHBalance */\n      0x00\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vault.sol\":1454:1459  stETH */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"contracts/vault.sol\":1454:1469  stETH.balanceOf */\n      0x70a08231\n      swap2\n      pop\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"contracts/vault.sol\":1454:1484  stETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_224:\n        /* \"contracts/vault.sol\":1431:1484  uint256 stETHBalance = stETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/vault.sol\":1530:1561  _mint(msg.sender, stETHBalance) */\n      tag_225\n        /* \"contracts/vault.sol\":1536:1546  msg.sender */\n      caller\n        /* \"contracts/vault.sol\":1548:1560  stETHBalance */\n      dup3\n        /* \"contracts/vault.sol\":1530:1535  _mint */\n      tag_226\n        /* \"contracts/vault.sol\":1530:1561  _mint(msg.sender, stETHBalance) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/vault.sol\":1166:1569  {... */\n      pop\n        /* \"contracts/vault.sol\":1130:1569  function deposit() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6249:6281   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6231:6282   */\n      mstore\n        /* \"#utility.yul\":6298:6316   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6291:6325   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6341:6359   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6334:6368   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6204:6222   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_156\n        /* \"#utility.yul\":6029:6374   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_156\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_273\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_276\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_276:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_277\n      swap1\n      pop\n      jump\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6249:6281   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6231:6282   */\n      mstore\n        /* \"#utility.yul\":6298:6316   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6291:6325   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6341:6359   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6334:6368   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6204:6222   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_156\n        /* \"#utility.yul\":6029:6374   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_281)\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_282\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_283:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_287:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_31:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_289:\n        /* \"#utility.yul\":343:372   */\n      tag_290\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_283\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:983   */\n    tag_39:\n        /* \"#utility.yul\":714:716   */\n      0x20\n        /* \"#utility.yul\":703:712   */\n      dup2\n        /* \"#utility.yul\":696:717   */\n      mstore\n        /* \"#utility.yul\":677:681   */\n      0x00\n        /* \"#utility.yul\":746:752   */\n      dup3\n        /* \"#utility.yul\":740:753   */\n      mload\n        /* \"#utility.yul\":789:795   */\n      dup1\n        /* \"#utility.yul\":784:786   */\n      0x20\n        /* \"#utility.yul\":773:782   */\n      dup5\n        /* \"#utility.yul\":769:787   */\n      add\n        /* \"#utility.yul\":762:796   */\n      mstore\n        /* \"#utility.yul\":848:854   */\n      dup1\n        /* \"#utility.yul\":843:845   */\n      0x20\n        /* \"#utility.yul\":835:841   */\n      dup6\n        /* \"#utility.yul\":831:846   */\n      add\n        /* \"#utility.yul\":826:828   */\n      0x40\n        /* \"#utility.yul\":815:824   */\n      dup6\n        /* \"#utility.yul\":811:829   */\n      add\n        /* \"#utility.yul\":805:855   */\n      mcopy\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":899:901   */\n      0x40\n        /* \"#utility.yul\":890:896   */\n      dup3\n        /* \"#utility.yul\":879:888   */\n      dup6\n        /* \"#utility.yul\":875:897   */\n      add\n        /* \"#utility.yul\":871:902   */\n      add\n        /* \"#utility.yul\":864:906   */\n      mstore\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":967:969   */\n      0x1f\n        /* \"#utility.yul\":963:970   */\n      not\n        /* \"#utility.yul\":958:960   */\n      0x1f\n        /* \"#utility.yul\":950:956   */\n      dup4\n        /* \"#utility.yul\":946:961   */\n      add\n        /* \"#utility.yul\":942:971   */\n      and\n        /* \"#utility.yul\":931:940   */\n      dup5\n        /* \"#utility.yul\":927:972   */\n      add\n        /* \"#utility.yul\":923:977   */\n      add\n        /* \"#utility.yul\":915:977   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":565:983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1288   */\n    tag_43:\n        /* \"#utility.yul\":1056:1062   */\n      0x00\n        /* \"#utility.yul\":1064:1070   */\n      dup1\n        /* \"#utility.yul\":1117:1119   */\n      0x40\n        /* \"#utility.yul\":1105:1114   */\n      dup4\n        /* \"#utility.yul\":1096:1103   */\n      dup6\n        /* \"#utility.yul\":1092:1115   */\n      sub\n        /* \"#utility.yul\":1088:1120   */\n      slt\n        /* \"#utility.yul\":1085:1137   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1133:1134   */\n      0x00\n        /* \"#utility.yul\":1130:1131   */\n      dup1\n        /* \"#utility.yul\":1123:1135   */\n      revert\n        /* \"#utility.yul\":1085:1137   */\n    tag_294:\n        /* \"#utility.yul\":1156:1185   */\n      tag_295\n        /* \"#utility.yul\":1175:1184   */\n      dup4\n        /* \"#utility.yul\":1156:1185   */\n      tag_283\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1146:1185   */\n      swap5\n        /* \"#utility.yul\":1254:1256   */\n      0x20\n        /* \"#utility.yul\":1239:1257   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1226:1258   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":988:1288   */\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_54:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_298:\n        /* \"#utility.yul\":1670:1699   */\n      tag_299\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_283\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_300\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_283\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":1864:2090   */\n    tag_60:\n        /* \"#utility.yul\":1923:1929   */\n      0x00\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1964:1973   */\n      dup3\n        /* \"#utility.yul\":1955:1962   */\n      dup5\n        /* \"#utility.yul\":1951:1974   */\n      sub\n        /* \"#utility.yul\":1947:1979   */\n      slt\n        /* \"#utility.yul\":1944:1996   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":1989:1990   */\n      dup1\n        /* \"#utility.yul\":1982:1994   */\n      revert\n        /* \"#utility.yul\":1944:1996   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":2037:2060   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1864:2090   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2714:2974   */\n    tag_106:\n        /* \"#utility.yul\":2782:2788   */\n      0x00\n        /* \"#utility.yul\":2790:2796   */\n      dup1\n        /* \"#utility.yul\":2843:2845   */\n      0x40\n        /* \"#utility.yul\":2831:2840   */\n      dup4\n        /* \"#utility.yul\":2822:2829   */\n      dup6\n        /* \"#utility.yul\":2818:2841   */\n      sub\n        /* \"#utility.yul\":2814:2846   */\n      slt\n        /* \"#utility.yul\":2811:2863   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2859:2860   */\n      0x00\n        /* \"#utility.yul\":2856:2857   */\n      dup1\n        /* \"#utility.yul\":2849:2861   */\n      revert\n        /* \"#utility.yul\":2811:2863   */\n    tag_307:\n        /* \"#utility.yul\":2882:2911   */\n      tag_308\n        /* \"#utility.yul\":2901:2910   */\n      dup4\n        /* \"#utility.yul\":2882:2911   */\n      tag_283\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2872:2911   */\n      swap2\n      pop\n        /* \"#utility.yul\":2930:2968   */\n      tag_309\n        /* \"#utility.yul\":2964:2966   */\n      0x20\n        /* \"#utility.yul\":2953:2962   */\n      dup5\n        /* \"#utility.yul\":2949:2967   */\n      add\n        /* \"#utility.yul\":2930:2968   */\n      tag_283\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2920:2968   */\n      swap1\n      pop\n        /* \"#utility.yul\":2714:2974   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3206:3390   */\n    tag_128:\n        /* \"#utility.yul\":3276:3282   */\n      0x00\n        /* \"#utility.yul\":3329:3331   */\n      0x20\n        /* \"#utility.yul\":3317:3326   */\n      dup3\n        /* \"#utility.yul\":3308:3315   */\n      dup5\n        /* \"#utility.yul\":3304:3327   */\n      sub\n        /* \"#utility.yul\":3300:3332   */\n      slt\n        /* \"#utility.yul\":3297:3349   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3345:3346   */\n      0x00\n        /* \"#utility.yul\":3342:3343   */\n      dup1\n        /* \"#utility.yul\":3335:3347   */\n      revert\n        /* \"#utility.yul\":3297:3349   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":3368:3384   */\n      mload\n      swap2\n        /* \"#utility.yul\":3206:3390   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3395:3522   */\n    tag_284:\n        /* \"#utility.yul\":3456:3466   */\n      0x4e487b71\n        /* \"#utility.yul\":3451:3454   */\n      0xe0\n        /* \"#utility.yul\":3447:3467   */\n      shl\n        /* \"#utility.yul\":3444:3445   */\n      0x00\n        /* \"#utility.yul\":3437:3468   */\n      mstore\n        /* \"#utility.yul\":3487:3491   */\n      0x11\n        /* \"#utility.yul\":3484:3485   */\n      0x04\n        /* \"#utility.yul\":3477:3492   */\n      mstore\n        /* \"#utility.yul\":3511:3515   */\n      0x24\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3501:3516   */\n      revert\n        /* \"#utility.yul\":3527:3695   */\n    tag_131:\n        /* \"#utility.yul\":3600:3609   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3631:3640   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3648:3663   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3642:3664   */\n      dup5\n      eq\n        /* \"#utility.yul\":3628:3665   */\n      or\n        /* \"#utility.yul\":3618:3689   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3669:3687   */\n      tag_141\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":3700:3917   */\n    tag_133:\n        /* \"#utility.yul\":3740:3741   */\n      0x00\n        /* \"#utility.yul\":3766:3767   */\n      dup3\n        /* \"#utility.yul\":3756:3888   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3810:3820   */\n      0x4e487b71\n        /* \"#utility.yul\":3805:3808   */\n      0xe0\n        /* \"#utility.yul\":3801:3821   */\n      shl\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3791:3822   */\n      mstore\n        /* \"#utility.yul\":3845:3849   */\n      0x12\n        /* \"#utility.yul\":3842:3843   */\n      0x04\n        /* \"#utility.yul\":3835:3850   */\n      mstore\n        /* \"#utility.yul\":3873:3877   */\n      0x24\n        /* \"#utility.yul\":3870:3871   */\n      0x00\n        /* \"#utility.yul\":3863:3878   */\n      revert\n        /* \"#utility.yul\":3756:3888   */\n    tag_318:\n      pop\n        /* \"#utility.yul\":3902:3911   */\n      div\n      swap1\n        /* \"#utility.yul\":3700:3917   */\n      jump\t// out\n        /* \"#utility.yul\":3922:4302   */\n    tag_136:\n        /* \"#utility.yul\":4001:4002   */\n      0x01\n        /* \"#utility.yul\":3997:4009   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4044:4056   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4065:4126   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4119:4123   */\n      0x7f\n        /* \"#utility.yul\":4111:4117   */\n      dup3\n        /* \"#utility.yul\":4107:4124   */\n      and\n        /* \"#utility.yul\":4097:4124   */\n      swap2\n      pop\n        /* \"#utility.yul\":4065:4126   */\n    tag_320:\n        /* \"#utility.yul\":4172:4174   */\n      0x20\n        /* \"#utility.yul\":4164:4170   */\n      dup3\n        /* \"#utility.yul\":4161:4175   */\n      lt\n        /* \"#utility.yul\":4141:4159   */\n      dup2\n        /* \"#utility.yul\":4138:4176   */\n      sub\n        /* \"#utility.yul\":4135:4296   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4218:4228   */\n      0x4e487b71\n        /* \"#utility.yul\":4213:4216   */\n      0xe0\n        /* \"#utility.yul\":4209:4229   */\n      shl\n        /* \"#utility.yul\":4206:4207   */\n      0x00\n        /* \"#utility.yul\":4199:4230   */\n      mstore\n        /* \"#utility.yul\":4253:4257   */\n      0x22\n        /* \"#utility.yul\":4250:4251   */\n      0x04\n        /* \"#utility.yul\":4243:4258   */\n      mstore\n        /* \"#utility.yul\":4281:4285   */\n      0x24\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4271:4286   */\n      revert\n        /* \"#utility.yul\":4135:4296   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":3922:4302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4933:5210   */\n    tag_172:\n        /* \"#utility.yul\":5000:5006   */\n      0x00\n        /* \"#utility.yul\":5053:5055   */\n      0x20\n        /* \"#utility.yul\":5041:5050   */\n      dup3\n        /* \"#utility.yul\":5032:5039   */\n      dup5\n        /* \"#utility.yul\":5028:5051   */\n      sub\n        /* \"#utility.yul\":5024:5056   */\n      slt\n        /* \"#utility.yul\":5021:5073   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5066:5067   */\n      dup1\n        /* \"#utility.yul\":5059:5071   */\n      revert\n        /* \"#utility.yul\":5021:5073   */\n    tag_325:\n        /* \"#utility.yul\":5101:5110   */\n      dup2\n        /* \"#utility.yul\":5095:5111   */\n      mload\n        /* \"#utility.yul\":5154:5159   */\n      dup1\n        /* \"#utility.yul\":5147:5160   */\n      iszero\n        /* \"#utility.yul\":5140:5161   */\n      iszero\n        /* \"#utility.yul\":5133:5138   */\n      dup2\n        /* \"#utility.yul\":5130:5162   */\n      eq\n        /* \"#utility.yul\":5120:5180   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5173:5174   */\n      dup1\n        /* \"#utility.yul\":5166:5178   */\n      revert\n        /* \"#utility.yul\":5421:5549   */\n    tag_195:\n        /* \"#utility.yul\":5488:5497   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5509:5520   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5506:5543   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":5523:5541   */\n      tag_141\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":5554:5679   */\n    tag_197:\n        /* \"#utility.yul\":5619:5628   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5640:5650   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5637:5673   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":5653:5671   */\n      tag_141\n      tag_284\n      jump\t// in\n\n    auxdata: 0xa264697066735822122043a956470bbec98af181333b1d65759dfaf825be45e19f3fedba94b17d6f184d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_998": {
									"entryPoint": null,
									"id": 998,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 272,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3340:7",
										"nodeType": "YulBlock",
										"src": "0:3340:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "294:195:7",
													"nodeType": "YulBlock",
													"src": "294:195:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:7",
																"nodeType": "YulBlock",
																"src": "340:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:7",
																					"nodeType": "YulLiteral",
																					"src": "349:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:7",
																					"nodeType": "YulLiteral",
																					"src": "352:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:7"
																			},
																			"nativeSrc": "342:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:7"
																		},
																		"nativeSrc": "342:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:7"
																		},
																		"nativeSrc": "311:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "336:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:7"
																},
																"nativeSrc": "307:32:7",
																"nodeType": "YulFunctionCall",
																"src": "307:32:7"
															},
															"nativeSrc": "304:52:7",
															"nodeType": "YulIf",
															"src": "304:52:7"
														},
														{
															"nativeSrc": "365:50:7",
															"nodeType": "YulAssignment",
															"src": "365:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:7"
																},
																"nativeSrc": "375:40:7",
																"nodeType": "YulFunctionCall",
																"src": "375:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:7"
																}
															]
														},
														{
															"nativeSrc": "424:59:7",
															"nodeType": "YulAssignment",
															"src": "424:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:7",
																				"nodeType": "YulLiteral",
																				"src": "479:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:7"
																		},
																		"nativeSrc": "464:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:7"
																},
																"nativeSrc": "434:49:7",
																"nodeType": "YulFunctionCall",
																"src": "434:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:7",
														"nodeType": "YulTypedName",
														"src": "252:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:7",
														"nodeType": "YulTypedName",
														"src": "263:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:7",
														"nodeType": "YulTypedName",
														"src": "275:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:7",
														"nodeType": "YulTypedName",
														"src": "283:6:7",
														"type": ""
													}
												],
												"src": "196:293:7"
											},
											{
												"body": {
													"nativeSrc": "526:95:7",
													"nodeType": "YulBlock",
													"src": "526:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "543:1:7",
																		"nodeType": "YulLiteral",
																		"src": "543:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "550:3:7",
																				"nodeType": "YulLiteral",
																				"src": "550:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:10:7",
																				"nodeType": "YulLiteral",
																				"src": "555:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "546:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:7"
																		},
																		"nativeSrc": "546:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:7"
																},
																"nativeSrc": "536:31:7",
																"nodeType": "YulFunctionCall",
																"src": "536:31:7"
															},
															"nativeSrc": "536:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "536:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "583:1:7",
																		"nodeType": "YulLiteral",
																		"src": "583:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:4:7",
																		"nodeType": "YulLiteral",
																		"src": "586:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:7"
																},
																"nativeSrc": "576:15:7",
																"nodeType": "YulFunctionCall",
																"src": "576:15:7"
															},
															"nativeSrc": "576:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "576:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "607:1:7",
																		"nodeType": "YulLiteral",
																		"src": "607:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:4:7",
																		"nodeType": "YulLiteral",
																		"src": "610:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:7"
																},
																"nativeSrc": "600:15:7",
																"nodeType": "YulFunctionCall",
																"src": "600:15:7"
															},
															"nativeSrc": "600:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "600:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "494:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:7"
											},
											{
												"body": {
													"nativeSrc": "681:325:7",
													"nodeType": "YulBlock",
													"src": "681:325:7",
													"statements": [
														{
															"nativeSrc": "691:22:7",
															"nodeType": "YulAssignment",
															"src": "691:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "705:1:7",
																		"nodeType": "YulLiteral",
																		"src": "705:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "708:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "708:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:7"
																},
																"nativeSrc": "701:12:7",
																"nodeType": "YulFunctionCall",
																"src": "701:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "691:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:7"
																}
															]
														},
														{
															"nativeSrc": "722:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "722:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "752:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "752:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "758:1:7",
																		"nodeType": "YulLiteral",
																		"src": "758:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "748:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:7"
																},
																"nativeSrc": "748:12:7",
																"nodeType": "YulFunctionCall",
																"src": "748:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "726:18:7",
																	"nodeType": "YulTypedName",
																	"src": "726:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "799:31:7",
																"nodeType": "YulBlock",
																"src": "799:31:7",
																"statements": [
																	{
																		"nativeSrc": "801:27:7",
																		"nodeType": "YulAssignment",
																		"src": "801:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "815:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "823:4:7",
																					"nodeType": "YulLiteral",
																					"src": "823:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "811:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:3:7"
																			},
																			"nativeSrc": "811:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "811:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "801:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "779:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "779:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:7"
																},
																"nativeSrc": "772:26:7",
																"nodeType": "YulFunctionCall",
																"src": "772:26:7"
															},
															"nativeSrc": "769:61:7",
															"nodeType": "YulIf",
															"src": "769:61:7"
														},
														{
															"body": {
																"nativeSrc": "889:111:7",
																"nodeType": "YulBlock",
																"src": "889:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:7",
																					"nodeType": "YulLiteral",
																					"src": "910:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "917:3:7",
																							"nodeType": "YulLiteral",
																							"src": "917:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "922:10:7",
																							"nodeType": "YulLiteral",
																							"src": "922:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "913:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:7"
																					},
																					"nativeSrc": "913:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "913:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			},
																			"nativeSrc": "903:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "903:31:7"
																		},
																		"nativeSrc": "903:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:7",
																					"nodeType": "YulLiteral",
																					"src": "954:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:4:7",
																					"nodeType": "YulLiteral",
																					"src": "957:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "947:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:7"
																			},
																			"nativeSrc": "947:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "947:15:7"
																		},
																		"nativeSrc": "947:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "982:1:7",
																					"nodeType": "YulLiteral",
																					"src": "982:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "985:4:7",
																					"nodeType": "YulLiteral",
																					"src": "985:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "975:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:7"
																			},
																			"nativeSrc": "975:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "975:15:7"
																		},
																		"nativeSrc": "975:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "845:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "845:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "868:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "876:2:7",
																				"nodeType": "YulLiteral",
																				"src": "876:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "865:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "865:2:7"
																		},
																		"nativeSrc": "865:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "865:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "842:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "842:2:7"
																},
																"nativeSrc": "842:38:7",
																"nodeType": "YulFunctionCall",
																"src": "842:38:7"
															},
															"nativeSrc": "839:161:7",
															"nodeType": "YulIf",
															"src": "839:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "626:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "661:4:7",
														"nodeType": "YulTypedName",
														"src": "661:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "670:6:7",
														"nodeType": "YulTypedName",
														"src": "670:6:7",
														"type": ""
													}
												],
												"src": "626:380:7"
											},
											{
												"body": {
													"nativeSrc": "1067:65:7",
													"nodeType": "YulBlock",
													"src": "1067:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1084:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1084:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1087:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1077:6:7"
																},
																"nativeSrc": "1077:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1077:14:7"
															},
															"nativeSrc": "1077:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1077:14:7"
														},
														{
															"nativeSrc": "1100:26:7",
															"nodeType": "YulAssignment",
															"src": "1100:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1108:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1108:9:7"
																},
																"nativeSrc": "1108:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1108:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1100:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1011:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:7",
														"nodeType": "YulTypedName",
														"src": "1050:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1058:4:7",
														"nodeType": "YulTypedName",
														"src": "1058:4:7",
														"type": ""
													}
												],
												"src": "1011:121:7"
											},
											{
												"body": {
													"nativeSrc": "1218:437:7",
													"nodeType": "YulBlock",
													"src": "1218:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1251:398:7",
																"nodeType": "YulBlock",
																"src": "1251:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1272:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1275:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1275:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1265:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:7"
																			},
																			"nativeSrc": "1265:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1265:16:7"
																		},
																		"nativeSrc": "1265:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:16:7"
																	},
																	{
																		"nativeSrc": "1294:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1294:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1319:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1319:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1306:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:7"
																			},
																			"nativeSrc": "1306:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1298:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1298:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1337:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1337:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1360:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1360:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1370:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1370:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1377:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1377:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1389:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1389:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1373:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1373:3:7"
																							},
																							"nativeSrc": "1373:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1373:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1366:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1366:3:7"
																					},
																					"nativeSrc": "1366:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1366:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1356:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1356:3:7"
																			},
																			"nativeSrc": "1356:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1341:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1341:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1431:23:7",
																			"nodeType": "YulBlock",
																			"src": "1431:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1433:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1433:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1448:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1448:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1433:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1433:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1413:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1413:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1425:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1410:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1410:2:7"
																			},
																			"nativeSrc": "1410:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:20:7"
																		},
																		"nativeSrc": "1407:47:7",
																		"nodeType": "YulIf",
																		"src": "1407:47:7"
																	},
																	{
																		"nativeSrc": "1467:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1467:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1481:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1481:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1491:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1491:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1498:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1498:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1503:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1503:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1494:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1494:3:7"
																							},
																							"nativeSrc": "1494:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1494:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1487:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1487:3:7"
																					},
																					"nativeSrc": "1487:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1487:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1477:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1477:3:7"
																			},
																			"nativeSrc": "1477:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1477:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1471:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1471:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1521:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1521:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1534:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1534:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1525:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1525:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1619:20:7",
																			"nodeType": "YulBlock",
																			"src": "1619:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1628:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1628:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1635:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1635:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1621:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1621:6:7"
																						},
																						"nativeSrc": "1621:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1621:16:7"
																					},
																					"nativeSrc": "1621:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1621:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1569:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1569:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1576:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1576:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1566:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:7"
																			},
																			"nativeSrc": "1566:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1566:13:7"
																		},
																		"nativeSrc": "1558:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1580:26:7",
																			"nodeType": "YulBlock",
																			"src": "1580:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1582:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1582:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1595:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1595:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1602:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1602:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1591:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:7"
																						},
																						"nativeSrc": "1591:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1582:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1582:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1562:3:7",
																			"nodeType": "YulBlock",
																			"src": "1562:3:7",
																			"statements": []
																		},
																		"src": "1558:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1234:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1231:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:7"
																},
																"nativeSrc": "1231:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1231:11:7"
															},
															"nativeSrc": "1228:421:7",
															"nodeType": "YulIf",
															"src": "1228:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1137:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1190:5:7",
														"nodeType": "YulTypedName",
														"src": "1190:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1197:3:7",
														"nodeType": "YulTypedName",
														"src": "1197:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1202:10:7",
														"nodeType": "YulTypedName",
														"src": "1202:10:7",
														"type": ""
													}
												],
												"src": "1137:518:7"
											},
											{
												"body": {
													"nativeSrc": "1745:81:7",
													"nodeType": "YulBlock",
													"src": "1745:81:7",
													"statements": [
														{
															"nativeSrc": "1755:65:7",
															"nodeType": "YulAssignment",
															"src": "1755:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1770:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1770:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1788:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1788:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1791:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1791:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1784:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1784:3:7"
																								},
																								"nativeSrc": "1784:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1784:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1801:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1801:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1797:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1797:3:7"
																								},
																								"nativeSrc": "1797:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1797:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1780:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:7"
																						},
																						"nativeSrc": "1780:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1776:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:7"
																				},
																				"nativeSrc": "1776:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:7"
																		},
																		"nativeSrc": "1766:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1815:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1815:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:7"
																		},
																		"nativeSrc": "1808:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1763:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:7"
																},
																"nativeSrc": "1763:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1763:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1660:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1722:4:7",
														"nodeType": "YulTypedName",
														"src": "1722:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1728:3:7",
														"nodeType": "YulTypedName",
														"src": "1728:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1736:4:7",
														"nodeType": "YulTypedName",
														"src": "1736:4:7",
														"type": ""
													}
												],
												"src": "1660:166:7"
											},
											{
												"body": {
													"nativeSrc": "1927:1203:7",
													"nodeType": "YulBlock",
													"src": "1927:1203:7",
													"statements": [
														{
															"nativeSrc": "1937:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1937:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1951:5:7"
																},
																"nativeSrc": "1951:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1951:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1941:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1941:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:22:7",
																"nodeType": "YulBlock",
																"src": "2004:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2006:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2006:16:7"
																			},
																			"nativeSrc": "2006:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2006:18:7"
																		},
																		"nativeSrc": "2006:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2006:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1976:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1992:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1992:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1996:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1996:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1988:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:7"
																				},
																				"nativeSrc": "1988:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1988:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2000:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:7"
																		},
																		"nativeSrc": "1984:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1973:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1973:2:7"
																},
																"nativeSrc": "1973:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1973:30:7"
															},
															"nativeSrc": "1970:56:7",
															"nodeType": "YulIf",
															"src": "1970:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2079:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2079:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2117:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2117:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2111:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2111:5:7"
																				},
																				"nativeSrc": "2111:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2085:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2085:25:7"
																		},
																		"nativeSrc": "2085:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2125:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2035:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2035:43:7"
																},
																"nativeSrc": "2035:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2035:97:7"
															},
															"nativeSrc": "2035:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2035:97:7"
														},
														{
															"nativeSrc": "2141:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2141:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2158:1:7",
																"nodeType": "YulLiteral",
																"src": "2158:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2145:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2145:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2168:17:7",
															"nodeType": "YulAssignment",
															"src": "2168:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2181:4:7",
																"nodeType": "YulLiteral",
																"src": "2181:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2168:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2168:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2231:642:7",
																		"nodeType": "YulBlock",
																		"src": "2231:642:7",
																		"statements": [
																			{
																				"nativeSrc": "2245:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2245:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2264:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2264:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2276:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2276:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2272:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2272:3:7"
																							},
																							"nativeSrc": "2272:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2272:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2260:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:7"
																					},
																					"nativeSrc": "2260:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2249:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2249:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2293:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2293:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2337:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2337:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2307:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2307:29:7"
																					},
																					"nativeSrc": "2307:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2307:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2297:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2297:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2355:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2355:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2364:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2359:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2359:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2435:165:7",
																					"nodeType": "YulBlock",
																					"src": "2435:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2460:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2460:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2478:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2478:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2483:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2483:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2474:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2474:3:7"
																												},
																												"nativeSrc": "2474:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2474:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2468:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2468:5:7"
																										},
																										"nativeSrc": "2468:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2468:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2453:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2453:6:7"
																								},
																								"nativeSrc": "2453:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2453:42:7"
																							},
																							"nativeSrc": "2453:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2453:42:7"
																						},
																						{
																							"nativeSrc": "2512:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2512:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2526:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2526:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2534:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2534:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2522:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:7"
																								},
																								"nativeSrc": "2522:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2522:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2512:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2512:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2553:33:7",
																							"nodeType": "YulAssignment",
																							"src": "2553:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2570:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2570:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2581:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2581:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2566:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:7"
																								},
																								"nativeSrc": "2566:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2566:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2553:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2553:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2389:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2389:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2392:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2392:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2386:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:7"
																					},
																					"nativeSrc": "2386:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2386:14:7"
																				},
																				"nativeSrc": "2378:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2401:21:7",
																					"nodeType": "YulBlock",
																					"src": "2401:21:7",
																					"statements": [
																						{
																							"nativeSrc": "2403:17:7",
																							"nodeType": "YulAssignment",
																							"src": "2403:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2412:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2412:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2415:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2415:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2408:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2408:3:7"
																								},
																								"nativeSrc": "2408:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2408:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2403:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2403:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2382:3:7",
																					"nodeType": "YulBlock",
																					"src": "2382:3:7",
																					"statements": []
																				},
																				"src": "2378:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2648:166:7",
																					"nodeType": "YulBlock",
																					"src": "2648:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2666:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2666:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2693:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2693:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2698:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2698:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2689:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2689:3:7"
																										},
																										"nativeSrc": "2689:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2689:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2683:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2683:5:7"
																								},
																								"nativeSrc": "2683:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2683:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2670:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2670:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2733:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2733:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2745:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2745:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2772:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2772:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2775:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2775:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2768:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2768:3:7"
																																		},
																																		"nativeSrc": "2768:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2768:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2784:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2784:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2764:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2764:3:7"
																																},
																																"nativeSrc": "2764:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2764:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2794:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2794:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2790:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2790:3:7"
																																},
																																"nativeSrc": "2790:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2790:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2760:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2760:3:7"
																														},
																														"nativeSrc": "2760:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2760:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2756:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2756:3:7"
																												},
																												"nativeSrc": "2756:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2756:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2741:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:7"
																										},
																										"nativeSrc": "2741:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2726:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2726:6:7"
																								},
																								"nativeSrc": "2726:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2726:74:7"
																							},
																							"nativeSrc": "2726:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2726:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2619:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2619:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2628:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2628:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2616:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2616:2:7"
																					},
																					"nativeSrc": "2616:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2616:19:7"
																				},
																				"nativeSrc": "2613:201:7",
																				"nodeType": "YulIf",
																				"src": "2613:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2834:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2834:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2848:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2848:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2851:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2851:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2844:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2844:3:7"
																									},
																									"nativeSrc": "2844:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2844:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2860:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2860:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2840:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2840:3:7"
																							},
																							"nativeSrc": "2840:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2840:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2827:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2827:6:7"
																					},
																					"nativeSrc": "2827:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2827:36:7"
																				},
																				"nativeSrc": "2827:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2827:36:7"
																			}
																		]
																	},
																	"nativeSrc": "2224:649:7",
																	"nodeType": "YulCase",
																	"src": "2224:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2229:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2890:234:7",
																		"nodeType": "YulBlock",
																		"src": "2890:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2904:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2904:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2917:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2917:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2908:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2908:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2953:67:7",
																					"nodeType": "YulBlock",
																					"src": "2953:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2971:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2971:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2990:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2990:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2995:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2995:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2986:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2986:3:7"
																										},
																										"nativeSrc": "2986:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2986:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2980:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2980:5:7"
																								},
																								"nativeSrc": "2980:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2980:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2971:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2971:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2934:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2934:6:7"
																				},
																				"nativeSrc": "2931:89:7",
																				"nodeType": "YulIf",
																				"src": "2931:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3040:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3040:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3099:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3099:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3106:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3106:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3046:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3046:52:7"
																							},
																							"nativeSrc": "3046:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3046:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3033:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3033:6:7"
																					},
																					"nativeSrc": "3033:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3033:81:7"
																				},
																				"nativeSrc": "3033:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3033:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2882:242:7",
																	"nodeType": "YulCase",
																	"src": "2882:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2204:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2201:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:7"
																},
																"nativeSrc": "2201:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2201:14:7"
															},
															"nativeSrc": "2194:930:7",
															"nodeType": "YulSwitch",
															"src": "2194:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1831:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1912:4:7",
														"nodeType": "YulTypedName",
														"src": "1912:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1918:3:7",
														"nodeType": "YulTypedName",
														"src": "1918:3:7",
														"type": ""
													}
												],
												"src": "1831:1299:7"
											},
											{
												"body": {
													"nativeSrc": "3236:102:7",
													"nodeType": "YulBlock",
													"src": "3236:102:7",
													"statements": [
														{
															"nativeSrc": "3246:26:7",
															"nodeType": "YulAssignment",
															"src": "3246:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:7"
																},
																"nativeSrc": "3254:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3254:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3246:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3246:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3288:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3288:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3303:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3303:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3319:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3319:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3324:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3324:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3315:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3315:3:7"
																						},
																						"nativeSrc": "3315:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3315:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3328:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3328:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3311:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3311:3:7"
																				},
																				"nativeSrc": "3311:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3311:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nativeSrc": "3299:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:7"
																},
																"nativeSrc": "3281:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3281:51:7"
															},
															"nativeSrc": "3281:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3281:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3135:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3205:9:7",
														"nodeType": "YulTypedName",
														"src": "3205:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3216:6:7",
														"nodeType": "YulTypedName",
														"src": "3216:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3227:4:7",
														"nodeType": "YulTypedName",
														"src": "3227:4:7",
														"type": ""
													}
												],
												"src": "3135:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161130138038061130183398101604081905261002e9161017c565b336040518060400160405280601681526020017f5969656c64205661756c74205374616b65642045544800000000000000000000815250604051806040016040528060078152602001660f2eca6a88aa8960cb1b81525081600390816100949190610245565b5060046100a18282610245565b5050506001600160a01b0381166100d157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100da81610110565b50600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055426008556102ff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b0381168114610177575f80fd5b919050565b5f806040838503121561018d575f80fd5b61019683610161565b91506101a460208401610161565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806101d557607f821691505b6020821081036101f357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561024057805f5260205f20601f840160051c8101602085101561021e5750805b601f840160051c820191505b8181101561023d575f815560010161022a565b50505b505050565b81516001600160401b0381111561025e5761025e6101ad565b6102728161026c84546101c1565b846101f9565b6020601f8211600181146102a4575f831561028d5750848201515b5f19600385901b1c1916600184901b17845561023d565b5f84815260208120601f198516915b828110156102d357878501518255602094850194600190920191016102b3565b50848210156102f057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610ff58061030c5f395ff3fe60806040526004361061011d575f3560e01c80638da5cb5b1161009d578063d0e30db011610062578063d0e30db01461030d578063dd62ed3e14610315578063ee17254614610359578063eea7570e1461036e578063f2fde38b1461038d575f80fd5b80638da5cb5b1461027557806395d89b41146102a6578063a9059cbb146102ba578063c1fe3e48146102d9578063ceb0f626146102f8575f80fd5b80632e1a7d4d116100e35780632e1a7d4d146101dd578063313ce567146101fe5780634641257d1461021957806370a082311461022d578063715018a614610261575f80fd5b80628cc2621461012857806306fdde031461015a578063095ea7b31461017b57806318160ddd146101aa57806323b872dd146101be575f80fd5b3661012457005b5f80fd5b348015610133575f80fd5b50610147610142366004610de2565b6103ac565b6040519081526020015b60405180910390f35b348015610165575f80fd5b5061016e610465565b6040516101519190610e02565b348015610186575f80fd5b5061019a610195366004610e37565b6104f5565b6040519015158152602001610151565b3480156101b5575f80fd5b50600254610147565b3480156101c9575f80fd5b5061019a6101d8366004610e5f565b61050e565b3480156101e8575f80fd5b506101fc6101f7366004610e99565b610531565b005b348015610209575f80fd5b5060405160128152602001610151565b348015610224575f80fd5b506101fc61069f565b348015610238575f80fd5b50610147610247366004610de2565b6001600160a01b03165f9081526020819052604090205490565b34801561026c575f80fd5b506101fc610870565b348015610280575f80fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610151565b3480156102b1575f80fd5b5061016e610883565b3480156102c5575f80fd5b5061019a6102d4366004610e37565b610892565b3480156102e4575f80fd5b5060065461028e906001600160a01b031681565b348015610303575f80fd5b5061014760085481565b6101fc61089f565b348015610320575f80fd5b5061014761032f366004610eb0565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610364575f80fd5b5061014760095481565b348015610379575f80fd5b5060075461028e906001600160a01b031681565b348015610398575f80fd5b506101fc6103a7366004610de2565b6109c0565b5f806103b760025490565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610402573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104269190610ee1565b90505f82610448866001600160a01b03165f9081526020819052604090205490565b6104529084610f0c565b61045c9190610f23565b95945050505050565b60606003805461047490610f42565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090610f42565b80156104eb5780601f106104c2576101008083540402835291602001916104eb565b820191905f5260205f20905b8154815290600101906020018083116104ce57829003601f168201915b5050505050905090565b5f336105028185856109fa565b60019150505b92915050565b5f3361051b858285610a0c565b610526858585610a88565b506001949350505050565b335f908152602081905260409020548111156105895760405162461bcd60e51b815260206004820152601260248201527109cdee840cadcdeeaced040f2eca6a88aa8960731b60448201526064015b60405180910390fd5b5f61059360025490565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156105de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106029190610ee1565b90505f826106108584610f0c565b61061a9190610f23565b90506106263385610ae5565b60065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610674573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106989190610f7a565b5050505050565b6106a7610b1d565b600754604051636e1cdf8960e01b8152662386f26fc1000060048201526001600160a01b0390911690636e1cdf89906024015f604051808303815f87803b1580156106f0575f80fd5b505af1158015610702573d5f803e3d5ffd5b50506006546040516370a0823160e01b81523060048201525f93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561074e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107729190610ee1565b905060065f9054906101000a90046001600160a01b03166001600160a01b031663372500ab6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156107c0575f80fd5b505af11580156107d2573d5f803e3d5ffd5b50506006546040516370a0823160e01b81523060048201525f93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561081e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108429190610ee1565b90505f61084f8383610f99565b90508060095f8282546108629190610fac565b909155505042600855505050565b610878610b1d565b6108815f610b4a565b565b60606004805461047490610f42565b5f33610502818585610a88565b5f34116108e15760405162461bcd60e51b815260206004820152601060248201526f09aeae6e840c8cae0dee6d2e8408aa8960831b6044820152606401610580565b60065f9054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1346040518263ffffffff1660e01b81526004015f604051808303818588803b15801561092e575f80fd5b505af1158015610940573d5f803e3d5ffd5b50506006546040516370a0823160e01b81523060048201525f94506001600160a01b0390911692506370a082319150602401602060405180830381865afa15801561098d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b19190610ee1565b90506109bd3382610b9b565b50565b6109c8610b1d565b6001600160a01b0381166109f157604051631e4fbdf760e01b81525f6004820152602401610580565b6109bd81610b4a565b610a078383836001610bcf565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610a825781811015610a7457604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610580565b610a8284848484035f610bcf565b50505050565b6001600160a01b038316610ab157604051634b637e8f60e11b81525f6004820152602401610580565b6001600160a01b038216610ada5760405163ec442f0560e01b81525f6004820152602401610580565b610a07838383610ca1565b6001600160a01b038216610b0e57604051634b637e8f60e11b81525f6004820152602401610580565b610b19825f83610ca1565b5050565b6005546001600160a01b031633146108815760405163118cdaa760e01b8152336004820152602401610580565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610bc45760405163ec442f0560e01b81525f6004820152602401610580565b610b195f8383610ca1565b6001600160a01b038416610bf85760405163e602df0560e01b81525f6004820152602401610580565b6001600160a01b038316610c2157604051634a1406b160e11b81525f6004820152602401610580565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610a8257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c9391815260200190565b60405180910390a350505050565b6001600160a01b038316610ccb578060025f828254610cc09190610fac565b90915550610d3b9050565b6001600160a01b0383165f9081526020819052604090205481811015610d1d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610580565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610d5757600280548290039055610d75565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dba91815260200190565b60405180910390a3505050565b80356001600160a01b0381168114610ddd575f80fd5b919050565b5f60208284031215610df2575f80fd5b610dfb82610dc7565b9392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060408385031215610e48575f80fd5b610e5183610dc7565b946020939093013593505050565b5f805f60608486031215610e71575f80fd5b610e7a84610dc7565b9250610e8860208501610dc7565b929592945050506040919091013590565b5f60208284031215610ea9575f80fd5b5035919050565b5f8060408385031215610ec1575f80fd5b610eca83610dc7565b9150610ed860208401610dc7565b90509250929050565b5f60208284031215610ef1575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761050857610508610ef8565b5f82610f3d57634e487b7160e01b5f52601260045260245ffd5b500490565b600181811c90821680610f5657607f821691505b602082108103610f7457634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610f8a575f80fd5b81518015158114610dfb575f80fd5b8181038181111561050857610508610ef8565b8082018082111561050857610508610ef856fea264697066735822122043a956470bbec98af181333b1d65759dfaf825be45e19f3fedba94b17d6f184d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1301 CODESIZE SUB DUP1 PUSH2 0x1301 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x17C JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5969656C64205661756C74205374616B65642045544800000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xF2ECA6A88AA89 PUSH1 0xCB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xA1 DUP3 DUP3 PUSH2 0x245 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA DUP2 PUSH2 0x110 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x196 DUP4 PUSH2 0x161 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4 PUSH1 0x20 DUP5 ADD PUSH2 0x161 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x240 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25E JUMPI PUSH2 0x25E PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x26C DUP5 SLOAD PUSH2 0x1C1 JUMP JUMPDEST DUP5 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x28D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x23D JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2B3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2F0 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xFF5 DUP1 PUSH2 0x30C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xCEB0F626 EQ PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x124 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x147 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x69F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x870 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x28E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x28E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3B7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x448 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x452 SWAP1 DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x502 DUP2 DUP6 DUP6 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x51B DUP6 DUP3 DUP6 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x526 DUP6 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9CDEE840CADCDEEACED040F2ECA6A88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x593 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x610 DUP6 DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x61A SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP1 POP PUSH2 0x626 CALLER DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6E1CDF89 PUSH1 0xE0 SHL DUP2 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E1CDF89 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x372500AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x84F DUP4 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x8 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x878 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x881 PUSH0 PUSH2 0xB4A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x502 DUP2 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x9AEAE6E840C8CAE0DEE6D2E8408AA89 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A4B66F1 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BD CALLER DUP3 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C8 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xA07 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xA82 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xA82 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBCF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xA07 DUP4 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xB19 DUP3 PUSH0 DUP4 PUSH2 0xCA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xB19 PUSH0 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA82 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC93 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCCB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD3B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD57 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDBA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDDD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDFB DUP3 PUSH2 0xDC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE48 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE51 DUP4 PUSH2 0xDC7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE7A DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 POP PUSH2 0xE88 PUSH1 0x20 DUP6 ADD PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xDC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xED8 PUSH1 0x20 DUP5 ADD PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xA9 JUMP SELFBALANCE SIGNEXTEND 0xBE 0xC9 DUP11 CALL DUP2 CALLER EXTCODESIZE SAR PUSH6 0x759DFAF825BE GASLIMIT 0xE1 SWAP16 EXTCODEHASH 0xED 0xBA SWAP5 0xB1 PUSH30 0x6F184D64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "426:2996:6:-:0;;;698:330;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;824:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3281:51:7;3254:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;852:5:6::2;:30:::0;;-1:-1:-1;;;;;852:30:6;;::::2;-1:-1:-1::0;;;;;;852:30:6;;::::2;;::::0;;;939:10:::2;:37:::0;;;;;::::2;::::0;::::2;;::::0;;1005:15:::2;987;:33:::0;426:2996;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:518::-;1239:2;1234:3;1231:11;1228:421;;;1275:5;1272:1;1265:16;1319:4;1316:1;1306:18;1389:2;1377:10;1373:19;1370:1;1366:27;1360:4;1356:38;1425:4;1413:10;1410:20;1407:47;;;-1:-1:-1;1448:4:7;1407:47;1503:2;1498:3;1494:12;1491:1;1487:20;1481:4;1477:31;1467:41;;1558:81;1576:2;1569:5;1566:13;1558:81;;;1635:1;1621:16;;1602:1;1591:13;1558:81;;;1562:3;;1228:421;1137:518;;;:::o;1831:1299::-;1951:10;;-1:-1:-1;;;;;1973:30:7;;1970:56;;;2006:18;;:::i;:::-;2035:97;2125:6;2085:38;2117:4;2111:11;2085:38;:::i;:::-;2079:4;2035:97;:::i;:::-;2181:4;2212:2;2201:14;;2229:1;2224:649;;;;2917:1;2934:6;2931:89;;;-1:-1:-1;2986:19:7;;;2980:26;2931:89;-1:-1:-1;;1788:1:7;1784:11;;;1780:24;1776:29;1766:40;1812:1;1808:11;;;1763:57;3033:81;;2194:930;;2224:649;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2260:20:7;;;2378:222;2392:7;2389:1;2386:14;2378:222;;;2474:19;;;2468:26;2453:42;;2581:4;2566:20;;;;2534:1;2522:14;;;;2408:12;2378:222;;;2382:3;2628:6;2619:7;2616:19;2613:201;;;2689:19;;;2683:26;-1:-1:-1;;2772:1:7;2768:14;;;2784:3;2764:24;2760:37;2756:42;2741:58;2726:74;;2613:201;-1:-1:-1;;;;2860:1:7;2844:14;;;2840:22;2827:36;;-1:-1:-1;1831:1299:7:o;3135:203::-;426:2996:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 2554,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3023,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2789,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2845,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2971,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2572,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2890,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2696,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3233,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1269,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_1038": {
									"entryPoint": 2207,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_1184": {
									"entryPoint": 940,
									"id": 1184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@gasReserve_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_1148": {
									"entryPoint": 1695,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastHarvestTime_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1125,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2160,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stETH_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2179,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewardsDistributed_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1294,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2496,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2194,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1092": {
									"entryPoint": 1329,
									"id": 1092,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IGasReserve_$944__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6376:7",
										"nodeType": "YulBlock",
										"src": "0:6376:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:7",
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nativeSrc": "73:29:7",
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nativeSrc": "82:20:7",
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:7",
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:7",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nativeSrc": "167:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nativeSrc": "167:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:7",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:7",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nativeSrc": "146:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:7",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nativeSrc": "142:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nativeSrc": "131:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nativeSrc": "121:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nativeSrc": "114:50:7",
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nativeSrc": "111:70:7",
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:7",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:7",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nativeSrc": "262:116:7",
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:7",
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:7",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nativeSrc": "310:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nativeSrc": "310:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nativeSrc": "279:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:32:7",
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nativeSrc": "272:52:7",
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nativeSrc": "333:39:7",
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nativeSrc": "343:29:7",
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:7",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:7",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:7",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nativeSrc": "484:76:7",
													"nodeType": "YulBlock",
													"src": "484:76:7",
													"statements": [
														{
															"nativeSrc": "494:26:7",
															"nodeType": "YulAssignment",
															"src": "494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nativeSrc": "502:18:7",
																"nodeType": "YulFunctionCall",
																"src": "502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:7"
																},
																"nativeSrc": "529:25:7",
																"nodeType": "YulFunctionCall",
																"src": "529:25:7"
															},
															"nativeSrc": "529:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:7",
														"nodeType": "YulTypedName",
														"src": "453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:7",
														"nodeType": "YulTypedName",
														"src": "464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:7",
														"nodeType": "YulTypedName",
														"src": "475:4:7",
														"type": ""
													}
												],
												"src": "383:177:7"
											},
											{
												"body": {
													"nativeSrc": "686:297:7",
													"nodeType": "YulBlock",
													"src": "686:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "703:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "703:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "714:2:7",
																		"nodeType": "YulLiteral",
																		"src": "714:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:7"
																},
																"nativeSrc": "696:21:7",
																"nodeType": "YulFunctionCall",
																"src": "696:21:7"
															},
															"nativeSrc": "696:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "696:21:7"
														},
														{
															"nativeSrc": "726:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "726:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "746:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "746:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "740:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "740:5:7"
																},
																"nativeSrc": "740:13:7",
																"nodeType": "YulFunctionCall",
																"src": "740:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "730:6:7",
																	"nodeType": "YulTypedName",
																	"src": "730:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "784:2:7",
																				"nodeType": "YulLiteral",
																				"src": "784:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:7"
																		},
																		"nativeSrc": "769:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "769:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "789:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "789:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "762:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:7"
																},
																"nativeSrc": "762:34:7",
																"nodeType": "YulFunctionCall",
																"src": "762:34:7"
															},
															"nativeSrc": "762:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "762:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "815:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "815:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "826:2:7",
																				"nodeType": "YulLiteral",
																				"src": "826:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "811:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:7"
																		},
																		"nativeSrc": "811:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "811:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "835:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "835:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "843:2:7",
																				"nodeType": "YulLiteral",
																				"src": "843:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "831:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:7"
																		},
																		"nativeSrc": "831:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "831:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "848:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "848:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "805:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "805:5:7"
																},
																"nativeSrc": "805:50:7",
																"nodeType": "YulFunctionCall",
																"src": "805:50:7"
															},
															"nativeSrc": "805:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "805:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "879:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "879:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "890:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "890:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "875:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "875:3:7"
																				},
																				"nativeSrc": "875:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "875:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "899:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "871:3:7"
																		},
																		"nativeSrc": "871:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "871:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "904:1:7",
																		"nodeType": "YulLiteral",
																		"src": "904:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "864:6:7"
																},
																"nativeSrc": "864:42:7",
																"nodeType": "YulFunctionCall",
																"src": "864:42:7"
															},
															"nativeSrc": "864:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "864:42:7"
														},
														{
															"nativeSrc": "915:62:7",
															"nodeType": "YulAssignment",
															"src": "915:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "931:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "950:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "950:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "958:2:7",
																								"nodeType": "YulLiteral",
																								"src": "958:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "946:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "946:3:7"
																						},
																						"nativeSrc": "946:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "946:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "967:2:7",
																								"nodeType": "YulLiteral",
																								"src": "967:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "963:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "963:3:7"
																						},
																						"nativeSrc": "963:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "963:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "942:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "942:3:7"
																				},
																				"nativeSrc": "942:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "942:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:7"
																		},
																		"nativeSrc": "927:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "927:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "974:2:7",
																		"nodeType": "YulLiteral",
																		"src": "974:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:7"
																},
																"nativeSrc": "923:54:7",
																"nodeType": "YulFunctionCall",
																"src": "923:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "915:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "565:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "655:9:7",
														"nodeType": "YulTypedName",
														"src": "655:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "666:6:7",
														"nodeType": "YulTypedName",
														"src": "666:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "677:4:7",
														"nodeType": "YulTypedName",
														"src": "677:4:7",
														"type": ""
													}
												],
												"src": "565:418:7"
											},
											{
												"body": {
													"nativeSrc": "1075:213:7",
													"nodeType": "YulBlock",
													"src": "1075:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1121:16:7",
																"nodeType": "YulBlock",
																"src": "1121:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1130:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1130:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1133:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1123:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:7"
																			},
																			"nativeSrc": "1123:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1123:12:7"
																		},
																		"nativeSrc": "1123:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1123:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1096:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1096:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1105:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1105:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1092:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:7"
																		},
																		"nativeSrc": "1092:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1092:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1117:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1117:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:7"
																},
																"nativeSrc": "1088:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1088:32:7"
															},
															"nativeSrc": "1085:52:7",
															"nodeType": "YulIf",
															"src": "1085:52:7"
														},
														{
															"nativeSrc": "1146:39:7",
															"nodeType": "YulAssignment",
															"src": "1146:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1175:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1175:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1156:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1156:18:7"
																},
																"nativeSrc": "1156:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1156:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1146:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1146:6:7"
																}
															]
														},
														{
															"nativeSrc": "1194:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1194:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1207:1:7",
																"nodeType": "YulLiteral",
																"src": "1207:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1198:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1217:41:7",
															"nodeType": "YulAssignment",
															"src": "1217:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1243:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1243:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1254:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1239:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1239:3:7"
																		},
																		"nativeSrc": "1239:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1226:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:7"
																},
																"nativeSrc": "1226:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1226:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1217:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1217:5:7"
																}
															]
														},
														{
															"nativeSrc": "1267:15:7",
															"nodeType": "YulAssignment",
															"src": "1267:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1277:5:7",
																"nodeType": "YulIdentifier",
																"src": "1277:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "988:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1033:9:7",
														"nodeType": "YulTypedName",
														"src": "1033:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1044:7:7",
														"nodeType": "YulTypedName",
														"src": "1044:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1056:6:7",
														"nodeType": "YulTypedName",
														"src": "1056:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1064:6:7",
														"nodeType": "YulTypedName",
														"src": "1064:6:7",
														"type": ""
													}
												],
												"src": "988:300:7"
											},
											{
												"body": {
													"nativeSrc": "1388:92:7",
													"nodeType": "YulBlock",
													"src": "1388:92:7",
													"statements": [
														{
															"nativeSrc": "1398:26:7",
															"nodeType": "YulAssignment",
															"src": "1398:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1410:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1406:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:7"
																},
																"nativeSrc": "1406:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1406:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1398:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1398:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1440:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1465:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1458:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1458:6:7"
																				},
																				"nativeSrc": "1458:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1458:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1451:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1451:6:7"
																		},
																		"nativeSrc": "1451:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1451:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:7"
																},
																"nativeSrc": "1433:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1433:41:7"
															},
															"nativeSrc": "1433:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1433:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1293:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1357:9:7",
														"nodeType": "YulTypedName",
														"src": "1357:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1368:6:7",
														"nodeType": "YulTypedName",
														"src": "1368:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1379:4:7",
														"nodeType": "YulTypedName",
														"src": "1379:4:7",
														"type": ""
													}
												],
												"src": "1293:187:7"
											},
											{
												"body": {
													"nativeSrc": "1589:270:7",
													"nodeType": "YulBlock",
													"src": "1589:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:7",
																"nodeType": "YulBlock",
																"src": "1635:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:7"
																			},
																			"nativeSrc": "1637:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:7"
																		},
																		"nativeSrc": "1637:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:7"
																		},
																		"nativeSrc": "1606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:7"
																},
																"nativeSrc": "1602:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:7"
															},
															"nativeSrc": "1599:52:7",
															"nodeType": "YulIf",
															"src": "1599:52:7"
														},
														{
															"nativeSrc": "1660:39:7",
															"nodeType": "YulAssignment",
															"src": "1660:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:7"
																},
																"nativeSrc": "1670:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:7"
																}
															]
														},
														{
															"nativeSrc": "1708:48:7",
															"nodeType": "YulAssignment",
															"src": "1708:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:7"
																		},
																		"nativeSrc": "1737:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:7"
																},
																"nativeSrc": "1718:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:7"
																}
															]
														},
														{
															"nativeSrc": "1765:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:7",
																"nodeType": "YulLiteral",
																"src": "1778:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:7",
															"nodeType": "YulAssignment",
															"src": "1788:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:7"
																		},
																		"nativeSrc": "1810:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:7"
																},
																"nativeSrc": "1797:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:7"
																}
															]
														},
														{
															"nativeSrc": "1838:15:7",
															"nodeType": "YulAssignment",
															"src": "1838:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:7",
																"nodeType": "YulIdentifier",
																"src": "1848:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:7",
														"nodeType": "YulTypedName",
														"src": "1539:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:7",
														"nodeType": "YulTypedName",
														"src": "1550:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:7",
														"nodeType": "YulTypedName",
														"src": "1562:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:7",
														"nodeType": "YulTypedName",
														"src": "1570:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:7",
														"nodeType": "YulTypedName",
														"src": "1578:6:7",
														"type": ""
													}
												],
												"src": "1485:374:7"
											},
											{
												"body": {
													"nativeSrc": "1934:156:7",
													"nodeType": "YulBlock",
													"src": "1934:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1980:16:7",
																"nodeType": "YulBlock",
																"src": "1980:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1989:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1989:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1992:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1992:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1982:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1982:6:7"
																			},
																			"nativeSrc": "1982:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1982:12:7"
																		},
																		"nativeSrc": "1982:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1982:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1955:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1955:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1964:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:7"
																		},
																		"nativeSrc": "1951:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1947:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:7"
																},
																"nativeSrc": "1947:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1947:32:7"
															},
															"nativeSrc": "1944:52:7",
															"nodeType": "YulIf",
															"src": "1944:52:7"
														},
														{
															"nativeSrc": "2005:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2005:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2018:1:7",
																"nodeType": "YulLiteral",
																"src": "2018:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2009:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2009:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2028:32:7",
															"nodeType": "YulAssignment",
															"src": "2028:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2050:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2050:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2037:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2037:12:7"
																},
																"nativeSrc": "2037:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2037:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2028:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:7"
																}
															]
														},
														{
															"nativeSrc": "2069:15:7",
															"nodeType": "YulAssignment",
															"src": "2069:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2079:5:7",
																"nodeType": "YulIdentifier",
																"src": "2079:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1864:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1900:9:7",
														"nodeType": "YulTypedName",
														"src": "1900:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1911:7:7",
														"nodeType": "YulTypedName",
														"src": "1911:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1923:6:7",
														"nodeType": "YulTypedName",
														"src": "1923:6:7",
														"type": ""
													}
												],
												"src": "1864:226:7"
											},
											{
												"body": {
													"nativeSrc": "2192:87:7",
													"nodeType": "YulBlock",
													"src": "2192:87:7",
													"statements": [
														{
															"nativeSrc": "2202:26:7",
															"nodeType": "YulAssignment",
															"src": "2202:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:7"
																},
																"nativeSrc": "2210:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2267:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2267:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:7"
																		},
																		"nativeSrc": "2255:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:7"
																},
																"nativeSrc": "2237:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2237:36:7"
															},
															"nativeSrc": "2237:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2237:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2095:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:7",
														"nodeType": "YulTypedName",
														"src": "2161:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:7",
														"nodeType": "YulTypedName",
														"src": "2172:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:7",
														"nodeType": "YulTypedName",
														"src": "2183:4:7",
														"type": ""
													}
												],
												"src": "2095:184:7"
											},
											{
												"body": {
													"nativeSrc": "2385:102:7",
													"nodeType": "YulBlock",
													"src": "2385:102:7",
													"statements": [
														{
															"nativeSrc": "2395:26:7",
															"nodeType": "YulAssignment",
															"src": "2395:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:7"
																},
																"nativeSrc": "2403:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:7"
																						},
																						"nativeSrc": "2464:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:7"
																				},
																				"nativeSrc": "2460:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:7"
																		},
																		"nativeSrc": "2448:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:7"
																},
																"nativeSrc": "2430:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:7"
															},
															"nativeSrc": "2430:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:7",
														"nodeType": "YulTypedName",
														"src": "2354:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:7",
														"nodeType": "YulTypedName",
														"src": "2365:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:7",
														"nodeType": "YulTypedName",
														"src": "2376:4:7",
														"type": ""
													}
												],
												"src": "2284:203:7"
											},
											{
												"body": {
													"nativeSrc": "2607:102:7",
													"nodeType": "YulBlock",
													"src": "2607:102:7",
													"statements": [
														{
															"nativeSrc": "2617:26:7",
															"nodeType": "YulAssignment",
															"src": "2617:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2629:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2625:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:7"
																},
																"nativeSrc": "2625:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2625:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2617:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2617:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2659:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2674:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2674:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2690:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2690:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2695:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2695:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2686:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2686:3:7"
																						},
																						"nativeSrc": "2686:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2686:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2699:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2699:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2682:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2682:3:7"
																				},
																				"nativeSrc": "2682:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2682:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2670:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:7"
																		},
																		"nativeSrc": "2670:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:7"
																},
																"nativeSrc": "2652:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2652:51:7"
															},
															"nativeSrc": "2652:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2652:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "2492:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2576:9:7",
														"nodeType": "YulTypedName",
														"src": "2576:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2587:6:7",
														"nodeType": "YulTypedName",
														"src": "2587:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2598:4:7",
														"nodeType": "YulTypedName",
														"src": "2598:4:7",
														"type": ""
													}
												],
												"src": "2492:217:7"
											},
											{
												"body": {
													"nativeSrc": "2801:173:7",
													"nodeType": "YulBlock",
													"src": "2801:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2847:16:7",
																"nodeType": "YulBlock",
																"src": "2847:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2856:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2856:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2859:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2849:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:7"
																			},
																			"nativeSrc": "2849:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2849:12:7"
																		},
																		"nativeSrc": "2849:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2849:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2822:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2831:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2818:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:7"
																		},
																		"nativeSrc": "2818:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2818:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2843:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2843:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2814:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:7"
																},
																"nativeSrc": "2814:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2814:32:7"
															},
															"nativeSrc": "2811:52:7",
															"nodeType": "YulIf",
															"src": "2811:52:7"
														},
														{
															"nativeSrc": "2872:39:7",
															"nodeType": "YulAssignment",
															"src": "2872:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2901:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2882:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2882:18:7"
																},
																"nativeSrc": "2882:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2882:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2872:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:7"
																}
															]
														},
														{
															"nativeSrc": "2920:48:7",
															"nodeType": "YulAssignment",
															"src": "2920:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2953:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2964:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2964:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:7"
																		},
																		"nativeSrc": "2949:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2949:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2930:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2930:18:7"
																},
																"nativeSrc": "2930:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2930:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2714:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2759:9:7",
														"nodeType": "YulTypedName",
														"src": "2759:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2770:7:7",
														"nodeType": "YulTypedName",
														"src": "2770:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2782:6:7",
														"nodeType": "YulTypedName",
														"src": "2782:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2790:6:7",
														"nodeType": "YulTypedName",
														"src": "2790:6:7",
														"type": ""
													}
												],
												"src": "2714:260:7"
											},
											{
												"body": {
													"nativeSrc": "3099:102:7",
													"nodeType": "YulBlock",
													"src": "3099:102:7",
													"statements": [
														{
															"nativeSrc": "3109:26:7",
															"nodeType": "YulAssignment",
															"src": "3109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:7"
																},
																"nativeSrc": "3117:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3109:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3151:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3166:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3182:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3182:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3187:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3187:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3178:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3178:3:7"
																						},
																						"nativeSrc": "3178:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3178:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3191:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3191:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3174:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:7"
																				},
																				"nativeSrc": "3174:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3174:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3162:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:7"
																		},
																		"nativeSrc": "3162:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3162:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:7"
																},
																"nativeSrc": "3144:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3144:51:7"
															},
															"nativeSrc": "3144:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3144:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IGasReserve_$944__to_t_address__fromStack_reversed",
												"nativeSrc": "2979:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3068:9:7",
														"nodeType": "YulTypedName",
														"src": "3068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3079:6:7",
														"nodeType": "YulTypedName",
														"src": "3079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3090:4:7",
														"nodeType": "YulTypedName",
														"src": "3090:4:7",
														"type": ""
													}
												],
												"src": "2979:222:7"
											},
											{
												"body": {
													"nativeSrc": "3287:103:7",
													"nodeType": "YulBlock",
													"src": "3287:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3333:16:7",
																"nodeType": "YulBlock",
																"src": "3333:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3345:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3345:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3335:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3335:6:7"
																			},
																			"nativeSrc": "3335:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3335:12:7"
																		},
																		"nativeSrc": "3335:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3335:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3308:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3308:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3317:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3304:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3304:3:7"
																		},
																		"nativeSrc": "3304:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3304:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3329:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:7"
																},
																"nativeSrc": "3300:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3300:32:7"
															},
															"nativeSrc": "3297:52:7",
															"nodeType": "YulIf",
															"src": "3297:52:7"
														},
														{
															"nativeSrc": "3358:26:7",
															"nodeType": "YulAssignment",
															"src": "3358:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3374:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3374:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3368:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:5:7"
																},
																"nativeSrc": "3368:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3206:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3253:9:7",
														"nodeType": "YulTypedName",
														"src": "3253:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3264:7:7",
														"nodeType": "YulTypedName",
														"src": "3264:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3276:6:7",
														"nodeType": "YulTypedName",
														"src": "3276:6:7",
														"type": ""
													}
												],
												"src": "3206:184:7"
											},
											{
												"body": {
													"nativeSrc": "3427:95:7",
													"nodeType": "YulBlock",
													"src": "3427:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3444:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3444:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3451:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3451:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3456:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3456:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:7"
																		},
																		"nativeSrc": "3447:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3437:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:7"
																},
																"nativeSrc": "3437:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3437:31:7"
															},
															"nativeSrc": "3437:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3437:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3484:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3487:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3487:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:7"
																},
																"nativeSrc": "3477:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3477:15:7"
															},
															"nativeSrc": "3477:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3477:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3511:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:7"
																},
																"nativeSrc": "3501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3501:15:7"
															},
															"nativeSrc": "3501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3501:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3395:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3395:127:7"
											},
											{
												"body": {
													"nativeSrc": "3579:116:7",
													"nodeType": "YulBlock",
													"src": "3579:116:7",
													"statements": [
														{
															"nativeSrc": "3589:20:7",
															"nodeType": "YulAssignment",
															"src": "3589:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3604:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3604:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3607:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3607:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3600:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:7"
																},
																"nativeSrc": "3600:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3600:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3589:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3589:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3667:22:7",
																"nodeType": "YulBlock",
																"src": "3667:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3669:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3669:16:7"
																			},
																			"nativeSrc": "3669:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3669:18:7"
																		},
																		"nativeSrc": "3669:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3669:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3638:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3638:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3631:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3631:6:7"
																				},
																				"nativeSrc": "3631:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3631:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3645:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3645:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3652:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "3652:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3661:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "3661:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3648:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3648:3:7"
																						},
																						"nativeSrc": "3648:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3648:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3642:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3642:2:7"
																				},
																				"nativeSrc": "3642:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3642:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3628:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3628:2:7"
																		},
																		"nativeSrc": "3628:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3628:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:7"
																},
																"nativeSrc": "3621:45:7",
																"nodeType": "YulFunctionCall",
																"src": "3621:45:7"
															},
															"nativeSrc": "3618:71:7",
															"nodeType": "YulIf",
															"src": "3618:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3527:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3558:1:7",
														"nodeType": "YulTypedName",
														"src": "3558:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3561:1:7",
														"nodeType": "YulTypedName",
														"src": "3561:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3567:7:7",
														"nodeType": "YulTypedName",
														"src": "3567:7:7",
														"type": ""
													}
												],
												"src": "3527:168:7"
											},
											{
												"body": {
													"nativeSrc": "3746:171:7",
													"nodeType": "YulBlock",
													"src": "3746:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3777:111:7",
																"nodeType": "YulBlock",
																"src": "3777:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3805:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3805:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3810:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3810:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3801:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3801:3:7"
																					},
																					"nativeSrc": "3801:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3801:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3791:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:7"
																			},
																			"nativeSrc": "3791:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:31:7"
																		},
																		"nativeSrc": "3791:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3842:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3842:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3845:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3845:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3835:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3835:6:7"
																			},
																			"nativeSrc": "3835:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3835:15:7"
																		},
																		"nativeSrc": "3835:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3835:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3870:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3873:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3873:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3863:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3863:6:7"
																			},
																			"nativeSrc": "3863:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3863:15:7"
																		},
																		"nativeSrc": "3863:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3863:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3766:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3766:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3759:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:7"
																},
																"nativeSrc": "3759:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3759:9:7"
															},
															"nativeSrc": "3756:132:7",
															"nodeType": "YulIf",
															"src": "3756:132:7"
														},
														{
															"nativeSrc": "3897:14:7",
															"nodeType": "YulAssignment",
															"src": "3897:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3906:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3906:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3909:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3909:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:7"
																},
																"nativeSrc": "3902:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3902:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3897:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "3897:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3700:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3731:1:7",
														"nodeType": "YulTypedName",
														"src": "3731:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3734:1:7",
														"nodeType": "YulTypedName",
														"src": "3734:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3740:1:7",
														"nodeType": "YulTypedName",
														"src": "3740:1:7",
														"type": ""
													}
												],
												"src": "3700:217:7"
											},
											{
												"body": {
													"nativeSrc": "3977:325:7",
													"nodeType": "YulBlock",
													"src": "3977:325:7",
													"statements": [
														{
															"nativeSrc": "3987:22:7",
															"nodeType": "YulAssignment",
															"src": "3987:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4001:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4001:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4004:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4004:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3997:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3997:3:7"
																},
																"nativeSrc": "3997:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3997:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:7"
																}
															]
														},
														{
															"nativeSrc": "4018:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4018:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4048:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4048:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4054:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4054:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:7"
																},
																"nativeSrc": "4044:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4044:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4022:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4022:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4095:31:7",
																"nodeType": "YulBlock",
																"src": "4095:31:7",
																"statements": [
																	{
																		"nativeSrc": "4097:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4097:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4111:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4111:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4119:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4119:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4107:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4107:3:7"
																			},
																			"nativeSrc": "4107:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4107:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4097:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4075:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4075:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:7"
																},
																"nativeSrc": "4068:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4068:26:7"
															},
															"nativeSrc": "4065:61:7",
															"nodeType": "YulIf",
															"src": "4065:61:7"
														},
														{
															"body": {
																"nativeSrc": "4185:111:7",
																"nodeType": "YulBlock",
																"src": "4185:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4206:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4206:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4213:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4213:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4218:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4218:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4209:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4209:3:7"
																					},
																					"nativeSrc": "4209:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4209:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4199:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4199:6:7"
																			},
																			"nativeSrc": "4199:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4199:31:7"
																		},
																		"nativeSrc": "4199:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4199:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4250:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4253:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4253:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4243:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:7"
																			},
																			"nativeSrc": "4243:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:15:7"
																		},
																		"nativeSrc": "4243:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4278:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4278:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4281:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4281:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4271:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4271:6:7"
																			},
																			"nativeSrc": "4271:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4271:15:7"
																		},
																		"nativeSrc": "4271:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4271:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4141:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4141:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4164:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4172:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4161:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4161:2:7"
																		},
																		"nativeSrc": "4161:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4161:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4138:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4138:2:7"
																},
																"nativeSrc": "4138:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4138:38:7"
															},
															"nativeSrc": "4135:161:7",
															"nodeType": "YulIf",
															"src": "4135:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3922:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3957:4:7",
														"nodeType": "YulTypedName",
														"src": "3957:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3966:6:7",
														"nodeType": "YulTypedName",
														"src": "3966:6:7",
														"type": ""
													}
												],
												"src": "3922:380:7"
											},
											{
												"body": {
													"nativeSrc": "4481:168:7",
													"nodeType": "YulBlock",
													"src": "4481:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4491:6:7"
																},
																"nativeSrc": "4491:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4491:21:7"
															},
															"nativeSrc": "4491:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4491:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4543:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:7"
																		},
																		"nativeSrc": "4528:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:7"
																},
																"nativeSrc": "4521:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4521:30:7"
															},
															"nativeSrc": "4521:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4521:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4571:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4582:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4567:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4567:3:7"
																		},
																		"nativeSrc": "4567:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4567:18:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682079765354455448",
																		"kind": "string",
																		"nativeSrc": "4587:20:7",
																		"nodeType": "YulLiteral",
																		"src": "4587:20:7",
																		"type": "",
																		"value": "Not enough yvSTETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4560:6:7"
																},
																"nativeSrc": "4560:48:7",
																"nodeType": "YulFunctionCall",
																"src": "4560:48:7"
															},
															"nativeSrc": "4560:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "4560:48:7"
														},
														{
															"nativeSrc": "4617:26:7",
															"nodeType": "YulAssignment",
															"src": "4617:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4629:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4629:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4625:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:7"
																},
																"nativeSrc": "4625:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4625:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4617:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4617:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4307:342:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4458:9:7",
														"nodeType": "YulTypedName",
														"src": "4458:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4472:4:7",
														"nodeType": "YulTypedName",
														"src": "4472:4:7",
														"type": ""
													}
												],
												"src": "4307:342:7"
											},
											{
												"body": {
													"nativeSrc": "4783:145:7",
													"nodeType": "YulBlock",
													"src": "4783:145:7",
													"statements": [
														{
															"nativeSrc": "4793:26:7",
															"nodeType": "YulAssignment",
															"src": "4793:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4805:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4805:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4816:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4816:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4801:3:7"
																},
																"nativeSrc": "4801:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4801:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4793:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4835:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4835:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4850:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4850:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4866:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4866:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4871:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4871:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4862:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4862:3:7"
																						},
																						"nativeSrc": "4862:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4862:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4875:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4875:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4858:3:7"
																				},
																				"nativeSrc": "4858:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4858:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4846:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:7"
																		},
																		"nativeSrc": "4846:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4846:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4828:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:7"
																},
																"nativeSrc": "4828:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4828:51:7"
															},
															"nativeSrc": "4828:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4828:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4899:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4899:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4910:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4910:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:7"
																		},
																		"nativeSrc": "4895:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4915:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4915:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4888:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4888:6:7"
																},
																"nativeSrc": "4888:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4888:34:7"
															},
															"nativeSrc": "4888:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4888:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4654:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4744:9:7",
														"nodeType": "YulTypedName",
														"src": "4744:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4755:6:7",
														"nodeType": "YulTypedName",
														"src": "4755:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4763:6:7",
														"nodeType": "YulTypedName",
														"src": "4763:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4774:4:7",
														"nodeType": "YulTypedName",
														"src": "4774:4:7",
														"type": ""
													}
												],
												"src": "4654:274:7"
											},
											{
												"body": {
													"nativeSrc": "5011:199:7",
													"nodeType": "YulBlock",
													"src": "5011:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5057:16:7",
																"nodeType": "YulBlock",
																"src": "5057:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5066:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5066:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5069:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5069:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5059:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:7"
																			},
																			"nativeSrc": "5059:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5059:12:7"
																		},
																		"nativeSrc": "5059:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5059:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5032:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5032:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5041:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5028:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:7"
																		},
																		"nativeSrc": "5028:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5053:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5053:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5024:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:7"
																},
																"nativeSrc": "5024:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5024:32:7"
															},
															"nativeSrc": "5021:52:7",
															"nodeType": "YulIf",
															"src": "5021:52:7"
														},
														{
															"nativeSrc": "5082:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5082:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5101:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5101:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5095:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5095:5:7"
																},
																"nativeSrc": "5095:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5095:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5086:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5086:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5164:16:7",
																"nodeType": "YulBlock",
																"src": "5164:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5173:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5173:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5176:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5176:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5166:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5166:6:7"
																			},
																			"nativeSrc": "5166:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5166:12:7"
																		},
																		"nativeSrc": "5166:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5166:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5133:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5133:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5154:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "5154:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5147:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5147:6:7"
																						},
																						"nativeSrc": "5147:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5147:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5140:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5140:6:7"
																				},
																				"nativeSrc": "5140:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5140:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5130:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5130:2:7"
																		},
																		"nativeSrc": "5130:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5130:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5123:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5123:6:7"
																},
																"nativeSrc": "5123:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5123:40:7"
															},
															"nativeSrc": "5120:60:7",
															"nodeType": "YulIf",
															"src": "5120:60:7"
														},
														{
															"nativeSrc": "5189:15:7",
															"nodeType": "YulAssignment",
															"src": "5189:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5199:5:7",
																"nodeType": "YulIdentifier",
																"src": "5199:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5189:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4933:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4977:9:7",
														"nodeType": "YulTypedName",
														"src": "4977:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4988:7:7",
														"nodeType": "YulTypedName",
														"src": "4988:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5000:6:7",
														"nodeType": "YulTypedName",
														"src": "5000:6:7",
														"type": ""
													}
												],
												"src": "4933:277:7"
											},
											{
												"body": {
													"nativeSrc": "5340:76:7",
													"nodeType": "YulBlock",
													"src": "5340:76:7",
													"statements": [
														{
															"nativeSrc": "5350:26:7",
															"nodeType": "YulAssignment",
															"src": "5350:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5362:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5373:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5373:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5358:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:7"
																},
																"nativeSrc": "5358:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5358:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5350:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5350:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5392:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5392:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5403:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5403:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5385:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5385:6:7"
																},
																"nativeSrc": "5385:25:7",
																"nodeType": "YulFunctionCall",
																"src": "5385:25:7"
															},
															"nativeSrc": "5385:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "5385:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5215:201:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5309:9:7",
														"nodeType": "YulTypedName",
														"src": "5309:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5320:6:7",
														"nodeType": "YulTypedName",
														"src": "5320:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5331:4:7",
														"nodeType": "YulTypedName",
														"src": "5331:4:7",
														"type": ""
													}
												],
												"src": "5215:201:7"
											},
											{
												"body": {
													"nativeSrc": "5470:79:7",
													"nodeType": "YulBlock",
													"src": "5470:79:7",
													"statements": [
														{
															"nativeSrc": "5480:17:7",
															"nodeType": "YulAssignment",
															"src": "5480:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5492:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5492:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5495:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5495:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:7"
																},
																"nativeSrc": "5488:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5488:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5480:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5521:22:7",
																"nodeType": "YulBlock",
																"src": "5521:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5523:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5523:16:7"
																			},
																			"nativeSrc": "5523:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5523:18:7"
																		},
																		"nativeSrc": "5523:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5523:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5512:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5512:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5518:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5518:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5509:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5509:2:7"
																},
																"nativeSrc": "5509:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5509:11:7"
															},
															"nativeSrc": "5506:37:7",
															"nodeType": "YulIf",
															"src": "5506:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5421:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5452:1:7",
														"nodeType": "YulTypedName",
														"src": "5452:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5455:1:7",
														"nodeType": "YulTypedName",
														"src": "5455:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5461:4:7",
														"nodeType": "YulTypedName",
														"src": "5461:4:7",
														"type": ""
													}
												],
												"src": "5421:128:7"
											},
											{
												"body": {
													"nativeSrc": "5602:77:7",
													"nodeType": "YulBlock",
													"src": "5602:77:7",
													"statements": [
														{
															"nativeSrc": "5612:16:7",
															"nodeType": "YulAssignment",
															"src": "5612:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5623:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5623:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5626:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5626:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:7"
																},
																"nativeSrc": "5619:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5619:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5612:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5612:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5651:22:7",
																"nodeType": "YulBlock",
																"src": "5651:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5653:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:16:7"
																			},
																			"nativeSrc": "5653:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5653:18:7"
																		},
																		"nativeSrc": "5653:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5653:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5643:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5643:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5646:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5646:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5640:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:7"
																},
																"nativeSrc": "5640:10:7",
																"nodeType": "YulFunctionCall",
																"src": "5640:10:7"
															},
															"nativeSrc": "5637:36:7",
															"nodeType": "YulIf",
															"src": "5637:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5554:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5585:1:7",
														"nodeType": "YulTypedName",
														"src": "5585:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5588:1:7",
														"nodeType": "YulTypedName",
														"src": "5588:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5594:3:7",
														"nodeType": "YulTypedName",
														"src": "5594:3:7",
														"type": ""
													}
												],
												"src": "5554:125:7"
											},
											{
												"body": {
													"nativeSrc": "5858:166:7",
													"nodeType": "YulBlock",
													"src": "5858:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5875:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5875:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:7"
																},
																"nativeSrc": "5868:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5868:21:7"
															},
															"nativeSrc": "5868:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5868:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5909:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5920:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5905:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:7"
																		},
																		"nativeSrc": "5905:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5925:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:7"
																},
																"nativeSrc": "5898:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5898:30:7"
															},
															"nativeSrc": "5898:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5898:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5948:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5948:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5959:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5959:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5944:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:7"
																		},
																		"nativeSrc": "5944:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:18:7"
																	},
																	{
																		"hexValue": "4d757374206465706f73697420455448",
																		"kind": "string",
																		"nativeSrc": "5964:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5964:18:7",
																		"type": "",
																		"value": "Must deposit ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5937:6:7"
																},
																"nativeSrc": "5937:46:7",
																"nodeType": "YulFunctionCall",
																"src": "5937:46:7"
															},
															"nativeSrc": "5937:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "5937:46:7"
														},
														{
															"nativeSrc": "5992:26:7",
															"nodeType": "YulAssignment",
															"src": "5992:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6004:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6004:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6015:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6015:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6000:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:7"
																},
																"nativeSrc": "6000:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6000:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5992:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5992:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5684:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5835:9:7",
														"nodeType": "YulTypedName",
														"src": "5835:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5849:4:7",
														"nodeType": "YulTypedName",
														"src": "5849:4:7",
														"type": ""
													}
												],
												"src": "5684:340:7"
											},
											{
												"body": {
													"nativeSrc": "6186:188:7",
													"nodeType": "YulBlock",
													"src": "6186:188:7",
													"statements": [
														{
															"nativeSrc": "6196:26:7",
															"nodeType": "YulAssignment",
															"src": "6196:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6208:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6208:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6204:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:7"
																},
																"nativeSrc": "6204:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6204:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6196:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6196:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6238:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6238:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6253:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6269:3:7",
																								"nodeType": "YulLiteral",
																								"src": "6269:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6274:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6274:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6265:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6265:3:7"
																						},
																						"nativeSrc": "6265:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6265:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6278:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6278:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:7"
																				},
																				"nativeSrc": "6261:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6261:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6249:3:7"
																		},
																		"nativeSrc": "6249:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6249:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:7"
																},
																"nativeSrc": "6231:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6231:51:7"
															},
															"nativeSrc": "6231:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6231:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6302:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6302:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6313:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6313:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6298:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:7"
																		},
																		"nativeSrc": "6298:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6298:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6318:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6318:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:7"
																},
																"nativeSrc": "6291:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6291:34:7"
															},
															"nativeSrc": "6291:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6291:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6345:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6345:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6356:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6356:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6341:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6341:3:7"
																		},
																		"nativeSrc": "6341:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6341:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6361:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6361:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:7"
																},
																"nativeSrc": "6334:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6334:34:7"
															},
															"nativeSrc": "6334:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6334:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6029:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6139:9:7",
														"nodeType": "YulTypedName",
														"src": "6139:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6150:6:7",
														"nodeType": "YulTypedName",
														"src": "6150:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6158:6:7",
														"nodeType": "YulTypedName",
														"src": "6158:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6166:6:7",
														"nodeType": "YulTypedName",
														"src": "6166:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6177:4:7",
														"nodeType": "YulTypedName",
														"src": "6177:4:7",
														"type": ""
													}
												],
												"src": "6029:345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IGasReserve_$944__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough yvSTETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_rational_10000000000000000_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Must deposit ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xCEB0F626 EQ PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x124 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x147 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x69F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x870 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x28E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x28E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3B7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x448 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x452 SWAP1 DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x502 DUP2 DUP6 DUP6 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x51B DUP6 DUP3 DUP6 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x526 DUP6 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x9CDEE840CADCDEEACED040F2ECA6A88AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x593 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x610 DUP6 DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x61A SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP1 POP PUSH2 0x626 CALLER DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6E1CDF89 PUSH1 0xE0 SHL DUP2 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E1CDF89 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x372500AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x84F DUP4 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x8 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x878 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x881 PUSH0 PUSH2 0xB4A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x502 DUP2 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x9AEAE6E840C8CAE0DEE6D2E8408AA89 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A4B66F1 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BD CALLER DUP3 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C8 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xA07 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xA82 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xA82 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBCF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xA07 DUP4 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xB19 DUP3 PUSH0 DUP4 PUSH2 0xCA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH2 0xB19 PUSH0 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA82 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC93 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCCB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD3B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD57 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDBA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDDD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDFB DUP3 PUSH2 0xDC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE48 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE51 DUP4 PUSH2 0xDC7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE7A DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 POP PUSH2 0xE88 PUSH1 0x20 DUP6 ADD PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xDC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xED8 PUSH1 0x20 DUP5 ADD PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0xEF8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xA9 JUMP SELFBALANCE SIGNEXTEND 0xBE 0xC9 DUP11 CALL DUP2 CALLER EXTCODESIZE SAR PUSH6 0x759DFAF825BE GASLIMIT 0xE1 SWAP16 EXTCODEHASH 0xED 0xBA SWAP5 0xB1 PUSH30 0x6F184D64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "426:2996:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3088:294;;;;;;;;;;-1:-1:-1;3088:294:6;;;;;:::i;:::-;;:::i;:::-;;;529:25:7;;;517:2;502:18;3088:294:6;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;;;;;-1:-1:-1;3998:186:2;;;;;:::i;:::-;;:::i;:::-;;;1458:14:7;;1451:22;1433:41;;1421:2;1406:18;3998:186:2;1293:187:7;2849:97:2;;;;;;;;;;-1:-1:-1;2927:12:2;;2849:97;;4776:244;;;;;;;;;;-1:-1:-1;4776:244:2;;;;;:::i;:::-;;:::i;1657:522:6:-;;;;;;;;;;-1:-1:-1;1657:522:6;;;;;:::i;:::-;;:::i;:::-;;2707:82:2;;;;;;;;;;-1:-1:-1;2707:82:2;;2780:2;2237:36:7;;2225:2;2210:18;2707:82:2;2095:184:7;2265:740:6;;;;;;;;;;;;;:::i;3004:116:2:-;;;;;;;;;;-1:-1:-1;3004:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2448:32:7;;;2430:51;;2418:2;2403:18;1638:85:0;2284:203:7;1981:93:2;;;;;;;;;;;;;:::i;3315:178::-;;;;;;;;;;-1:-1:-1;3315:178:2;;;;;:::i;:::-;;:::i;471:19:6:-;;;;;;;;;;-1:-1:-1;471:19:6;;;;-1:-1:-1;;;;;471:19:6;;;583:30;;;;;;;;;;;;;;;;1130:439;;;:::i;3551:140:2:-;;;;;;;;;;-1:-1:-1;3551:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;620:38:6;;;;;;;;;;;;;;;;545:29;;;;;;;;;;-1:-1:-1;545:29:6;;;;-1:-1:-1;;;;;545:29:6;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3088:294:6:-;3141:7;3161:24;3188:13;2927:12:2;;;2849:97;3188:13:6;3235:5;;:30;;-1:-1:-1;;;3235:30:6;;3259:4;3235:30;;;2430:51:7;3161:40:6;;-1:-1:-1;3212:20:6;;-1:-1:-1;;;;;3235:5:6;;;;:15;;2403:18:7;;3235:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3212:53;;3276:17;3331:16;3312:15;3322:4;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;3312:15:6;3297:30;;:12;:30;:::i;:::-;3296:51;;;;:::i;:::-;3276:71;3088:294;-1:-1:-1;;;;;3088:294:6:o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:5;4125:31:2;735:10:5;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:5;4919:37:2;4935:4;735:10:5;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;1657:522:6:-;1730:10;3069:7:2;3095:18;;;;;;;;;;;1745:7:6;-1:-1:-1;1720:32:6;1712:63;;;;-1:-1:-1;;;1712:63:6;;4509:2:7;1712:63:6;;;4491:21:7;4548:2;4528:18;;;4521:30;-1:-1:-1;;;4567:18:7;;;4560:48;4625:18;;1712:63:6;;;;;;;;;1788:24;1815:13;2927:12:2;;;2849:97;1815:13:6;1862:5;;:30;;-1:-1:-1;;;1862:30:6;;1886:4;1862:30;;;2430:51:7;1788:40:6;;-1:-1:-1;1839:20:6;;-1:-1:-1;;;;;1862:5:6;;;;:15;;2403:18:7;;1862:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1839:53;-1:-1:-1;1972:17:6;2019:16;1993:22;2008:7;1839:53;1993:22;:::i;:::-;1992:43;;;;:::i;:::-;1972:63;;2048:26;2054:10;2066:7;2048:5;:26::i;:::-;2108:5;;:37;;-1:-1:-1;;;2108:37:6;;2123:10;2108:37;;;4828:51:7;4895:18;;;4888:34;;;-1:-1:-1;;;;;2108:5:6;;;;:14;;4801:18:7;;2108:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1701:478;;;1657:522;:::o;2265:740::-;1531:13:0;:11;:13::i;:::-;2373:10:6::1;::::0;:33:::1;::::0;-1:-1:-1;;;2373:33:6;;2395:10:::1;2373:33;::::0;::::1;529:25:7::0;-1:-1:-1;;;;;2373:10:6;;::::1;::::0;:21:::1;::::0;502:18:7;;2373:33:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2517:5:6::1;::::0;:30:::1;::::0;-1:-1:-1;;;2517:30:6;;2541:4:::1;2517:30;::::0;::::1;2430:51:7::0;2496:18:6::1;::::0;-1:-1:-1;;;;;;2517:5:6;;::::1;::::0;-1:-1:-1;2517:15:6::1;::::0;2403:18:7;;2517:30:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2496:51;;2611:5;;;;;;;;;-1:-1:-1::0;;;;;2611:5:6::1;-1:-1:-1::0;;;;;2588:43:6::1;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2666:5:6::1;::::0;:30:::1;::::0;-1:-1:-1;;;2666:30:6;;2690:4:::1;2666:30;::::0;::::1;2430:51:7::0;2644:19:6::1;::::0;-1:-1:-1;;;;;;2666:5:6;;::::1;::::0;-1:-1:-1;2666:15:6::1;::::0;2403:18:7;;2666:30:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2644:52:::0;-1:-1:-1;2786:21:6::1;2810:24;2824:10:::0;2644:52;2810:24:::1;:::i;:::-;2786:48;;2872:13;2845:23;;:40;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2954:15:6::1;2936;:33:::0;-1:-1:-1;;;2265:740:6:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:5;3438:27:2;735:10:5;3455:2:2;3459:5;3438:9;:27::i;1130:439:6:-;1197:1;1185:9;:13;1177:42;;;;-1:-1:-1;;;1177:42:6;;5886:2:7;1177:42:6;;;5868:21:7;5925:2;5905:18;;;5898:30;-1:-1:-1;;;5944:18:7;;;5937:46;6000:18;;1177:42:6;5684:340:7;1177:42:6;1341:5;;;;;;;;;-1:-1:-1;;;;;1341:5:6;-1:-1:-1;;;;;1318:36:6;;1362:9;1318:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1454:5:6;;:30;;-1:-1:-1;;;1454:30:6;;1478:4;1454:30;;;2430:51:7;1431:20:6;;-1:-1:-1;;;;;;1454:5:6;;;;-1:-1:-1;1454:15:6;;-1:-1:-1;2403:18:7;;1454:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:53;;1530:31;1536:10;1548:12;1530:5;:31::i;:::-;1166:403;1130:439::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2430:51:7::0;2403:18;;2672:31:0::1;2284:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8726:128:2:-:0;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;6249:32:7;;10687:60:2;;;6231:51:7;6298:18;;;6291:34;;;6341:18;;;6334:34;;;6204:18;;10687:60:2;6029:345:7;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2430:51:7;2403:18;;5517:30:2;2284:203:7;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2430:51:7;2403:18;;5610:32:2;2284:203:7;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7984:206::-;-1:-1:-1;;;;;8054:21:2;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:2;;8125:1;8098:30;;;2430:51:7;2403:18;;8098:30:2;2284:203:7;8050:89:2;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2430:51:7;2403:18;;1901:40:0;2284:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;2430:51:7;2403:18;;7572:32:2;2284:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2430:51:7;2403:18;;9855:32:2;2284:203:7;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2430:51:7;2403:18;;9955:31:2;2284:203:7;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;529:25:7;;517:2;502:18;;383:177;10085:31:2;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;6249:32:7;;6386:50:2;;;6231:51:7;6298:18;;;6291:34;;;6341:18;;;6334:34;;;6204:18;;6386:50:2;6029:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;529::7;;517:2;502:18;;383:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;565:418::-;714:2;703:9;696:21;677:4;746:6;740:13;789:6;784:2;773:9;769:18;762:34;848:6;843:2;835:6;831:15;826:2;815:9;811:18;805:50;904:1;899:2;890:6;879:9;875:22;871:31;864:42;974:2;967;963:7;958:2;950:6;946:15;942:29;931:9;927:45;923:54;915:62;;;565:418;;;;:::o;988:300::-;1056:6;1064;1117:2;1105:9;1096:7;1092:23;1088:32;1085:52;;;1133:1;1130;1123:12;1085:52;1156:29;1175:9;1156:29;:::i;:::-;1146:39;1254:2;1239:18;;;;1226:32;;-1:-1:-1;;;988:300:7:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:7;1810:18;;;;1797:32;;1485:374::o;1864:226::-;1923:6;1976:2;1964:9;1955:7;1951:23;1947:32;1944:52;;;1992:1;1989;1982:12;1944:52;-1:-1:-1;2037:23:7;;1864:226;-1:-1:-1;1864:226:7:o;2714:260::-;2782:6;2790;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2882:29;2901:9;2882:29;:::i;:::-;2872:39;;2930:38;2964:2;2953:9;2949:18;2930:38;:::i;:::-;2920:48;;2714:260;;;;;:::o;3206:184::-;3276:6;3329:2;3317:9;3308:7;3304:23;3300:32;3297:52;;;3345:1;3342;3335:12;3297:52;-1:-1:-1;3368:16:7;;3206:184;-1:-1:-1;3206:184:7:o;3395:127::-;3456:10;3451:3;3447:20;3444:1;3437:31;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3527:168;3600:9;;;3631;;3648:15;;;3642:22;;3628:37;3618:71;;3669:18;;:::i;3700:217::-;3740:1;3766;3756:132;;3810:10;3805:3;3801:20;3798:1;3791:31;3845:4;3842:1;3835:15;3873:4;3870:1;3863:15;3756:132;-1:-1:-1;3902:9:7;;3700:217::o;3922:380::-;4001:1;3997:12;;;;4044;;;4065:61;;4119:4;4111:6;4107:17;4097:27;;4065:61;4172:2;4164:6;4161:14;4141:18;4138:38;4135:161;;4218:10;4213:3;4209:20;4206:1;4199:31;4253:4;4250:1;4243:15;4281:4;4278:1;4271:15;4135:161;;3922:380;;;:::o;4933:277::-;5000:6;5053:2;5041:9;5032:7;5028:23;5024:32;5021:52;;;5069:1;5066;5059:12;5021:52;5101:9;5095:16;5154:5;5147:13;5140:21;5133:5;5130:32;5120:60;;5176:1;5173;5166:12;5421:128;5488:9;;;5509:11;;;5506:37;;;5523:18;;:::i;5554:125::-;5619:9;;;5640:10;;;5637:36;;;5653:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "817000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24780",
								"balanceOf(address)": "2615",
								"decimals()": "221",
								"deposit()": "infinite",
								"earned(address)": "infinite",
								"gasReserve()": "2424",
								"harvest()": "infinite",
								"lastHarvestTime()": "2394",
								"name()": "infinite",
								"owner()": "2342",
								"renounceOwnership()": "infinite",
								"stETH()": "2425",
								"symbol()": "infinite",
								"totalRewardsDistributed()": "2349",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "51283",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 698,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 824,
									"end": 834,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5969656C64205661756C74205374616B65642045544800000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2ECA6A88AA89"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3281,
									"end": 3332,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 852,
									"end": 857,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 852,
									"end": 882,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 882,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 939,
									"end": 976,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 939,
									"end": 976,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1005,
									"end": 1020,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1002,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1020,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 494,
									"end": 621,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 555,
									"end": 565,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 550,
									"end": 553,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 546,
									"end": 566,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 567,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 586,
									"end": 590,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 576,
									"end": 591,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 610,
									"end": 614,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 615,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 748,
									"end": 760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 811,
									"end": 828,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 801,
									"end": 828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 769,
									"end": 830,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 874,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 865,
									"end": 879,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 845,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 842,
									"end": 880,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 922,
									"end": 932,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 917,
									"end": 920,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 913,
									"end": 933,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 934,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 947,
									"end": 962,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 985,
									"end": 989,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 990,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 626,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1241,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1234,
									"end": 1237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1242,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1281,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1323,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1366,
									"end": 1393,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1394,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1425,
									"end": 1429,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1452,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1498,
									"end": 1501,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1487,
									"end": 1507,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1508,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1579,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1603,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1591,
									"end": 1604,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1137,
									"end": 1655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2006,
									"end": 2024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2122,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2085,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2035,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2212,
									"end": 2214,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2940,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2980,
									"end": 3006,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 1804,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1805,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1766,
									"end": 1806,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1763,
									"end": 1820,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1085,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2392,
									"end": 2399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2400,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2581,
									"end": 2585,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2535,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2382,
									"end": 2385,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2634,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2626,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2635,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2683,
									"end": 2709,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2764,
									"end": 2788,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2760,
									"end": 2797,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2756,
									"end": 2798,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2799,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2861,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 3130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3338,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 3422,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043a956470bbec98af181333b1d65759dfaf825be45e19f3fedba94b17d6f184d64736f6c634300081a0033",
									".code": [
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "D0E30DB0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "D0E30DB0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "EE172546"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "EEA7570E"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "C1FE3E48"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "CEB0F626"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4641257D"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "8CC262"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 426,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3088,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3088,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1293,
											"end": 1480,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1657,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2237,
											"end": 2273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2265,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 471,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 471,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 471,
											"end": 490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 471,
											"end": 490,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1130,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 620,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 620,
											"end": 658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 620,
											"end": 658,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 574,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 545,
											"end": 574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 545,
											"end": 574,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3263,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3201,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3235,
											"end": 3250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3235,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3235,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3322,
											"end": 3326,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3327,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3312,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3297,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3296,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3296,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3347,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3382,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1730,
											"end": 1740,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4550,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9CDEE840CADCDEEACED040F2ECA6A88AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4585,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4567,
											"end": 4585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1712,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1815,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1828,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1862,
											"end": 1877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1862,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1892,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1993,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1992,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1992,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2054,
											"end": 2064,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2048,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2048,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2108,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 2179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 2179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 2179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2265,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E1CDF89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6E1CDF89"
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 502,
											"end": 520,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2373,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2517,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2517,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2517,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2588,
											"end": 2631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "372500AB"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2588,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2666,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2666,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2666,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2786,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2810,
											"end": 2834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2810,
											"end": 2834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2885,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2845,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2845,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2845,
											"end": 2885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2969,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2936,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 3005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1130,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1198,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5927,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5898,
											"end": 5928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AEAE6E840C8CAE0DEE6D2E8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 5983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5684,
											"end": 6024,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "PUSH",
											"source": 6,
											"value": "3A4B66F1"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1318,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1482,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1454,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1454,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1536,
											"end": 1546,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1530,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6231,
											"end": 6282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6029,
											"end": 6374,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6231,
											"end": 6282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6029,
											"end": 6374,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 565,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 677,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 740,
											"end": 753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 789,
											"end": 795,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 784,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 769,
											"end": 787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 762,
											"end": 796,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 831,
											"end": 846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 805,
											"end": 855,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 875,
											"end": 897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 871,
											"end": 902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 864,
											"end": 906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 969,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 963,
											"end": 970,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 950,
											"end": 956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 946,
											"end": 961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 971,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 927,
											"end": 972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 923,
											"end": 977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 915,
											"end": 977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 915,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 915,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1288,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 988,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1092,
											"end": 1115,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1120,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1137,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1085,
											"end": 1137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1135,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1085,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1175,
											"end": 1184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1156,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1156,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1185,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1258,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1258,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 2090,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1864,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1974,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1947,
											"end": 1979,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1944,
											"end": 1996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1944,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 1944,
											"end": 1996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1982,
											"end": 1994,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1944,
											"end": 1996,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 1944,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2060,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 2090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2841,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2846,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2861,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2811,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2882,
											"end": 2911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2882,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2930,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3390,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3206,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3315,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3327,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3332,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3297,
											"end": 3349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3347,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3349,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3297,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3522,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3395,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3451,
											"end": 3454,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3447,
											"end": 3467,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3516,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3695,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3527,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3664,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3664,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3665,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3618,
											"end": 3689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3669,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3917,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3700,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3756,
											"end": 3888,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3805,
											"end": 3808,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3801,
											"end": 3821,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 3850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3878,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3888,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3756,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3911,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4302,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3922,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4065,
											"end": 4126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4126,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4065,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4175,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4135,
											"end": 4296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4209,
											"end": 4229,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4253,
											"end": 4257,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4243,
											"end": 4258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4285,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4296,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4135,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 5210,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4933,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5051,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5056,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5073,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5021,
											"end": 5073,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5073,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5021,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5111,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5161,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5162,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5120,
											"end": 5180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5178,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5549,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5421,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5520,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5523,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5679,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5554,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5650,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5637,
											"end": 5673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5653,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"earned(address)": "008cc262",
							"gasReserve()": "eea7570e",
							"harvest()": "4641257d",
							"lastHarvestTime()": "ceb0f626",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stETH()": "c1fe3e48",
							"symbol()": "95d89b41",
							"totalRewardsDistributed()": "ee172546",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gasReserve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasReserve\",\"outputs\":[{\"internalType\":\"contract IGasReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHarvestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault.sol\":\"YieldVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/vault.sol\":{\"keccak256\":\"0x75087970c8cc70f30fc633bc7e260e05dbd6389b6ccf15175f795a57e2562366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01034ac0c82f2a3b07f5eb552d7961a0e2d282144a9fac90027a75a95b6e9f4f\",\"dweb:/ipfs/QmSLAPHy9pXFV4DkDq5r7FWsVSPCvtxB5mwTcoUnhttwMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 958,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "stETH",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 961,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "gasReserve",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IGasReserve)944"
							},
							{
								"astId": 963,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "lastHarvestTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 965,
								"contract": "contracts/vault.sol:YieldVault",
								"label": "totalRewardsDistributed",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IGasReserve)944": {
								"encoding": "inplace",
								"label": "contract IGasReserve",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/vault.sol": {
				"ast": {
					"absolutePath": "contracts/vault.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IGasReserve": [
							944
						],
						"ILiquidStaking": [
							951
						],
						"Ownable": [
							147
						],
						"YieldVault": [
							1189
						]
					},
					"id": 1190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 878,
							"src": "61:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 800,
							"src": "119:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 148,
							"src": "176:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGasReserve",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "IGasReserve",
							"nameLocation": "242:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6e1cdf89",
									"id": 943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestGas",
									"nameLocation": "270:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "289:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "281:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:17:6"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:0:6"
									},
									"scope": 944,
									"src": "261:46:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1190,
							"src": "232:78:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILiquidStaking",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "ILiquidStaking",
							"nameLocation": "324:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "372500ab",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "355:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:0:6"
									},
									"scope": 951,
									"src": "346:33:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3a4b66f1",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "394:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:0:6"
									},
									"scope": 951,
									"src": "385:34:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1190,
							"src": "314:108:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 952,
										"name": "ERC20",
										"nameLocations": [
											"449:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "449:5:6"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "449:5:6"
								},
								{
									"baseName": {
										"id": 954,
										"name": "Ownable",
										"nameLocations": [
											"456:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "456:7:6"
									},
									"id": 955,
									"nodeType": "InheritanceSpecifier",
									"src": "456:7:6"
								}
							],
							"canonicalName": "YieldVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1189,
							"linearizedBaseContracts": [
								1189,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "YieldVault",
							"nameLocation": "435:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c1fe3e48",
									"id": 958,
									"mutability": "mutable",
									"name": "stETH",
									"nameLocation": "485:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "471:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 957,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 956,
											"name": "IERC20",
											"nameLocations": [
												"471:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "471:6:6"
										},
										"referencedDeclaration": 877,
										"src": "471:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eea7570e",
									"id": 961,
									"mutability": "mutable",
									"name": "gasReserve",
									"nameLocation": "564:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "545:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IGasReserve_$944",
										"typeString": "contract IGasReserve"
									},
									"typeName": {
										"id": 960,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 959,
											"name": "IGasReserve",
											"nameLocations": [
												"545:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 944,
											"src": "545:11:6"
										},
										"referencedDeclaration": 944,
										"src": "545:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IGasReserve_$944",
											"typeString": "contract IGasReserve"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ceb0f626",
									"id": 963,
									"mutability": "mutable",
									"name": "lastHarvestTime",
									"nameLocation": "598:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "583:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 962,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee172546",
									"id": 965,
									"mutability": "mutable",
									"name": "totalRewardsDistributed",
									"nameLocation": "635:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "620:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 964,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "841:187:6",
										"statements": [
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "stETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "852:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 982,
																"name": "_liquidStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "867:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 981,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "860:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "860:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "852:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "852:30:6"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "939:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGasReserve_$944",
															"typeString": "contract IGasReserve"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 988,
																"name": "_gasReserve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "964:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 987,
															"name": "IGasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "952:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IGasReserve_$944_$",
																"typeString": "type(contract IGasReserve)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "952:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IGasReserve_$944",
															"typeString": "contract IGasReserve"
														}
													},
													"src": "939:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IGasReserve_$944",
														"typeString": "contract IGasReserve"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "939:37:6"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 992,
														"name": "lastHarvestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "987:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 993,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1005:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1011:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1005:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "987:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "987:33:6"
											}
										]
									},
									"id": 998,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5969656c64205661756c74205374616b656420455448",
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "770:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac8d9d719462e511b9c6043967cd1e5acdb3a3c42c151fd29a87e86db429c404",
														"typeString": "literal_string \"Yield Vault Staked ETH\""
													},
													"value": "Yield Vault Staked ETH"
												},
												{
													"hexValue": "79765354455448",
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "796:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_26bbf1fc94cee67a84d9fafd3822ee41a8fbba668e3cd0785fba9ca4b976b106",
														"typeString": "literal_string \"yvSTETH\""
													},
													"value": "yvSTETH"
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 971,
												"name": "ERC20",
												"nameLocations": [
													"764:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "764:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "764:42:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "824:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "828:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "824:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 978,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 975,
												"name": "Ownable",
												"nameLocations": [
													"816:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "816:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "816:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_liquidStaking",
												"nameLocation": "718:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "710:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_gasReserve",
												"nameLocation": "742:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "734:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:45:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:0:6"
									},
									"scope": 1189,
									"src": "698:330:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1166:403:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1002,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1185:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1189:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1185:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1197:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f73697420455448",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1200:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
																"typeString": "literal_string \"Must deposit ETH\""
															},
															"value": "Must deposit ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
																"typeString": "literal_string \"Must deposit ETH\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "1177:42:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1012,
																				"name": "stETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 958,
																				"src": "1341:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1333:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1010,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1333:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1333:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1009,
																	"name": "ILiquidStaking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "1318:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ILiquidStaking_$951_$",
																		"typeString": "type(contract ILiquidStaking)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1318:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILiquidStaking_$951",
																	"typeString": "contract ILiquidStaking"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1349:5:6",
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "1318:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1016,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1362:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1366:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1362:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1318:54:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1318:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1318:56:6"
											},
											{
												"assignments": [
													1022
												],
												"declarations": [
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "stETHBalance",
														"nameLocation": "1439:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "1431:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1431:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1027,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1478:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1470:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1470:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1470:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1023,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "1454:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1460:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "1454:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1431:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1032,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1536:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1540:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1536:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "stETHBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "1548:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1031,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1530:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1530:31:6"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1139:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:6"
									},
									"scope": 1189,
									"src": "1130:439:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "1701:478:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1045,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1730:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1734:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1730:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1044,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1720:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1048,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1745:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1720:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682079765354455448",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1754:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87",
																"typeString": "literal_string \"Not enough yvSTETH\""
															},
															"value": "Not enough yvSTETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9cfed346a22bbafb5ff2e34515c195e13d0e8491b6a5dab2c0a5376522f7f87",
																"typeString": "literal_string \"Not enough yvSTETH\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1712:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1712:63:6"
											},
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "totalSupplyVault",
														"nameLocation": "1796:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "1788:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1053,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1055,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1815:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1815:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1788:40:6"
											},
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "vaultBalance",
														"nameLocation": "1847:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "1839:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1839:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1064,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1886:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1878:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1062,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1878:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1878:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1060,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "1862:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1868:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "1862:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1839:53:6"
											},
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "1980:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "1972:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1972:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "vaultBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1993:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1071,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "2008:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1993:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1073,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1992:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1074,
														"name": "totalSupplyVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2019:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1992:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1972:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2054:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2058:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2054:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "2066:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2048:26:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1086,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2123:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2127:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2123:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2135:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1083,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2108:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2114:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "2108:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2108:37:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1666:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1683:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1675:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:17:6"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1701:0:6"
									},
									"scope": 1189,
									"src": "1657:522:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "2303:702:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "302e3031",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2395:10:6",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"value": "0.01"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															}
														],
														"expression": {
															"id": 1097,
															"name": "gasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "2373:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGasReserve_$944",
																"typeString": "contract IGasReserve"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2384:10:6",
														"memberName": "requestGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "2373:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "2373:33:6"
											},
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "preBalance",
														"nameLocation": "2504:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "2496:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2496:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1109,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2541:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2533:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1107,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2533:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2533:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1105,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2517:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2523:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2517:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2496:51:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1116,
																			"name": "stETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "2611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2603:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1114,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2603:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2603:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1113,
																"name": "ILiquidStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "2588:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILiquidStaking_$951_$",
																	"typeString": "type(contract ILiquidStaking)"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2588:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILiquidStaking_$951",
																"typeString": "contract ILiquidStaking"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2619:12:6",
														"memberName": "claimRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "2588:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2588:45:6"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "postBalance",
														"nameLocation": "2652:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "2644:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1128,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2690:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2682:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2682:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2682:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1124,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2666:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2672:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2666:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2644:52:6"
											},
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "earnedRewards",
														"nameLocation": "2794:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "2786:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2786:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1134,
														"name": "postBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2810:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1135,
														"name": "preBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "2824:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:48:6"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1138,
														"name": "totalRewardsDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2845:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1139,
														"name": "earnedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2872:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2845:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2845:40:6"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1142,
														"name": "lastHarvestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2936:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1143,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2954:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2960:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2954:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2936:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "2936:33:6"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyOwner",
												"nameLocations": [
													"2293:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2293:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2293:9:6"
										}
									],
									"name": "harvest",
									"nameLocation": "2274:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2281:2:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:0:6"
									},
									"scope": 1189,
									"src": "2265:740:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "3150:232:6",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "totalSupplyVault",
														"nameLocation": "3169:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "3161:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3161:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1157,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3188:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3161:40:6"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "vaultBalance",
														"nameLocation": "3220:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "3212:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3212:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1166,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3259:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldVault_$1189",
																		"typeString": "contract YieldVault"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3251:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3251:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3251:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1162,
															"name": "stETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3235:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3241:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "3235:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3235:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3212:53:6"
											},
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "3284:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "3276:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "vaultBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "3297:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1174,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "3322:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1173,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "3312:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3312:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3297:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3296:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1178,
														"name": "totalSupplyVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "3331:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3296:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:71:6"
											},
											{
												"expression": {
													"id": 1181,
													"name": "userShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1171,
													"src": "3365:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1182,
												"nodeType": "Return",
												"src": "3358:16:6"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3097:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3112:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "3104:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3104:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3103:14:6"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "3141:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:9:6"
									},
									"scope": 1189,
									"src": "3088:294:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "3417:2:6",
										"statements": []
									},
									"id": 1188,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:2:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3417:0:6"
									},
									"scope": 1189,
									"src": "3390:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1190,
							"src": "426:2996:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:3391:6"
				},
				"id": 6
			}
		}
	}
}